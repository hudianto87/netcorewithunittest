using Microsoft.EntityFrameworkCore;
using Int.Api.Victoria.DataAccess.Models;

namespace Int.Api.Victoria.DataAccess.Context
{
    public partial class DBContext : DbContext
    {
        public DBContext()
        {
        }

        public DBContext(DbContextOptions<DBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ProductCatalogViewModel> productCatalogViewModel { get; set; } = null!;
        public virtual DbSet<IsTrue> IsTrues { get; set; }
        public virtual DbSet<Corecustomeraccountmayora> Corecustomeraccountmayoras { get; set; } = null!;
        public virtual DbSet<Corecustomermayora> Corecustomermayoras { get; set; } = null!;
        public virtual DbSet<Dttot> Dttots { get; set; } = null!;
        public virtual DbSet<EmailParameter> EmailParameters { get; set; } = null!;
        public virtual DbSet<fn_TOutstandingHistoryFIFO_GetBalancePerProduct> fn_TOutstandingHistoryFIFO_GetBalancePerProduct { get; set; }
        public virtual DbSet<fn_TOutstandingHistoryFIFO_GetBalancePerSubAccount_Result> fn_TOutstandingHistoryFIFO_GetBalancePerSubAccount_Result { get; set; }
        public virtual DbSet<fnInqQuotaCPF> fnInqQuotaCPF { get; set; }
        public virtual DbSet<fn_HolidayAdd> fnHolidayAdd { get; set; }
        public virtual DbSet<GetRand> GetRands { get; set; } = null!;
        public virtual DbSet<Kpi> Kpis { get; set; } = null!;
        public virtual DbSet<Kpiachievement> Kpiachievements { get; set; } = null!;
        public virtual DbSet<Kpiscore> Kpiscores { get; set; } = null!;
        public virtual DbSet<Kpitarget> Kpitargets { get; set; } = null!;
        public virtual DbSet<Newjive2> Newjive2s { get; set; } = null!;
        public virtual DbSet<TaccStatement> TaccStatements { get; set; } = null!;
        public virtual DbSet<TaccountClientCodeCounter> TaccountClientCodeCounters { get; set; } = null!;
        public virtual DbSet<TaddressType> TaddressTypes { get; set; } = null!;
        public virtual DbSet<Tagent> Tagents { get; set; } = null!;
        public virtual DbSet<TagentAddress> TagentAddresses { get; set; } = null!;
        public virtual DbSet<TagentAuthContact> TagentAuthContacts { get; set; } = null!;
        public virtual DbSet<TagentBankAccount> TagentBankAccounts { get; set; } = null!;
        public virtual DbSet<TagentCustomer> TagentCustomers { get; set; } = null!;
        public virtual DbSet<TagentCustomerDm> TagentCustomerDms { get; set; } = null!;
        public virtual DbSet<TagentFee> TagentFees { get; set; } = null!;
        public virtual DbSet<TagentGroup> TagentGroups { get; set; } = null!;
        public virtual DbSet<TagentGroupList> TagentGroupLists { get; set; } = null!;
        public virtual DbSet<TagentHistory> TagentHistories { get; set; } = null!;
        public virtual DbSet<TagentInstruction> TagentInstructions { get; set; } = null!;
        public virtual DbSet<TagentLevel> TagentLevels { get; set; } = null!;
        public virtual DbSet<TagentNew> TagentNews { get; set; } = null!;
        public virtual DbSet<TagentProduct> TagentProducts { get; set; } = null!;
        public virtual DbSet<TagentStructure> TagentStructures { get; set; } = null!;
        public virtual DbSet<TagentStructureJournal> TagentStructureJournals { get; set; } = null!;
        public virtual DbSet<TagentTree> TagentTrees { get; set; } = null!;
        public virtual DbSet<TagentTreeAgent> TagentTreeAgents { get; set; } = null!;
        public virtual DbSet<TagentTreeAgentBackup> TagentTreeAgentBackups { get; set; } = null!;
        public virtual DbSet<TagentTreeBackup> TagentTreeBackups { get; set; } = null!;
        public virtual DbSet<TamlWatchlist> TamlWatchlists { get; set; } = null!;
        public virtual DbSet<TapprovalAssignment> TapprovalAssignments { get; set; } = null!;
        public virtual DbSet<TapprovalState> TapprovalStates { get; set; } = null!;
        public virtual DbSet<TapprovalTracking> TapprovalTrackings { get; set; } = null!;
        public virtual DbSet<Tasset> Tassets { get; set; } = null!;
        public virtual DbSet<TassetClass> TassetClasses { get; set; } = null!;
        public virtual DbSet<TassetTransfer> TassetTransfers { get; set; } = null!;
        public virtual DbSet<Tattachment> Tattachments { get; set; } = null!;
        public virtual DbSet<TauditTrail> TauditTrails { get; set; } = null!;
        public virtual DbSet<TauditTrailLookupMapping> TauditTrailLookupMappings { get; set; } = null!;
        public virtual DbSet<TauditTrailTran> TauditTrailTrans { get; set; } = null!;
        public virtual DbSet<TaummgtFeeHistory> TaummgtFeeHistories { get; set; } = null!;
        public virtual DbSet<Tauthorized> Tauthorizeds { get; set; } = null!;
        public virtual DbSet<Tauthorizer> Tauthorizers { get; set; } = null!;
        public virtual DbSet<TautoDebitGroup> TautoDebitGroups { get; set; } = null!;
        public virtual DbSet<TautoDebitMember> TautoDebitMembers { get; set; } = null!;
        public virtual DbSet<TautoEodlogResult> TautoEodlogResults { get; set; } = null!;
        public virtual DbSet<TautoEodregisterLog> TautoEodregisterLogs { get; set; } = null!;
        public virtual DbSet<TautoSubRegister> TautoSubRegisters { get; set; } = null!;
        public virtual DbSet<TautoSubRegisterGenerate> TautoSubRegisterGenerates { get; set; } = null!;
        public virtual DbSet<TautoSubRegisterLog> TautoSubRegisterLogs { get; set; } = null!;
        public virtual DbSet<TautoSubRegisterLogDetail> TautoSubRegisterLogDetails { get; set; } = null!;
        public virtual DbSet<TautoSubscriptionInstallmentPending> TautoSubscriptionInstallmentPendings { get; set; } = null!;
        public virtual DbSet<TautoSubscriptionRegister> TautoSubscriptionRegisters { get; set; } = null!;
        public virtual DbSet<TbalanceCustody> TbalanceCustodies { get; set; } = null!;
        public virtual DbSet<TbancAssuranceAgent> TbancAssuranceAgents { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceAium> TbancAssuranceBalanceAia { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceCsi> TbancAssuranceBalanceCsis { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceCsl> TbancAssuranceBalanceCsls { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceMpl> TbancAssuranceBalanceMpls { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceMpp> TbancAssuranceBalanceMpps { get; set; } = null!;
        public virtual DbSet<TbancAssuranceBalanceSunLife> TbancAssuranceBalanceSunLives { get; set; } = null!;
        public virtual DbSet<TbancAssuranceCustomer> TbancAssuranceCustomers { get; set; } = null!;
        public virtual DbSet<TbancAssuranceFeeBaseIncomeMonthlyAium> TbancAssuranceFeeBaseIncomeMonthlyAia { get; set; } = null!;
        public virtual DbSet<TbancAssuranceFeeBaseIncomeSunlife> TbancAssuranceFeeBaseIncomeSunlives { get; set; } = null!;
        public virtual DbSet<TbancAssuranceFund> TbancAssuranceFunds { get; set; } = null!;
        public virtual DbSet<TbancAssuranceFundBalance> TbancAssuranceFundBalances { get; set; } = null!;
        public virtual DbSet<TbancAssuranceGenerateHistory> TbancAssuranceGenerateHistories { get; set; } = null!;
        public virtual DbSet<TbancAssurancePartner> TbancAssurancePartners { get; set; } = null!;
        public virtual DbSet<TbancAssurancePolicy> TbancAssurancePolicies { get; set; } = null!;
        public virtual DbSet<TbancAssurancePolicyAium> TbancAssurancePolicyAia { get; set; } = null!;
        public virtual DbSet<TbancAssurancePolicyBalance> TbancAssurancePolicyBalances { get; set; } = null!;
        public virtual DbSet<TbancAssuranceProduct> TbancAssuranceProducts { get; set; } = null!;
        public virtual DbSet<TbancAssuranceProductBankAccount> TbancAssuranceProductBankAccounts { get; set; } = null!;
        public virtual DbSet<TbancAssuranceProductFee> TbancAssuranceProductFees { get; set; } = null!;
        public virtual DbSet<TbancAssuranceProductFund> TbancAssuranceProductFunds { get; set; } = null!;
        public virtual DbSet<TbancAssuranceProductRider> TbancAssuranceProductRiders { get; set; } = null!;
        public virtual DbSet<TbancAssuranceReferral> TbancAssuranceReferrals { get; set; } = null!;
        public virtual DbSet<TbancAssuranceRegistration> TbancAssuranceRegistrations { get; set; } = null!;
        public virtual DbSet<TbancAssuranceRegistrationDetail> TbancAssuranceRegistrationDetails { get; set; } = null!;
        public virtual DbSet<TbancAssuranceRider> TbancAssuranceRiders { get; set; } = null!;
        public virtual DbSet<TbancAssuranceRiderPremi> TbancAssuranceRiderPremis { get; set; } = null!;
        public virtual DbSet<TbancAssuranceSettlementResponseHistory> TbancAssuranceSettlementResponseHistories { get; set; } = null!;
        public virtual DbSet<TbancAssuranceSpaj> TbancAssuranceSpajs { get; set; } = null!;
        public virtual DbSet<TbancAssuranceSpajfund> TbancAssuranceSpajfunds { get; set; } = null!;
        public virtual DbSet<TbancAssuranceSpajrider> TbancAssuranceSpajriders { get; set; } = null!;
        public virtual DbSet<TbancAssuranceTransaction> TbancAssuranceTransactions { get; set; } = null!;
        public virtual DbSet<TbancassuranceBalanceManulife> TbancassuranceBalanceManulives { get; set; } = null!;
        public virtual DbSet<TbankAccount> TbankAccounts { get; set; } = null!;
        public virtual DbSet<Tblokir> Tblokirs { get; set; } = null!;
        public virtual DbSet<TblokirHistory> TblokirHistories { get; set; } = null!;
        public virtual DbSet<Tbroker> Tbrokers { get; set; } = null!;
        public virtual DbSet<TcallbackCustomerHistory> TcallbackCustomerHistories { get; set; } = null!;
        public virtual DbSet<Tcompany> Tcompanies { get; set; } = null!;
        public virtual DbSet<Tconfig> Tconfigs { get; set; } = null!;
        public virtual DbSet<TconfigBtpn> TconfigBtpns { get; set; } = null!;
        public virtual DbSet<TconfigDataType> TconfigDataTypes { get; set; } = null!;
        public virtual DbSet<Tcoupon> Tcoupons { get; set; } = null!;
        public virtual DbSet<TcouponFreq> TcouponFreqs { get; set; } = null!;
        public virtual DbSet<Tcpfquotum> Tcpfquota { get; set; } = null!;
        public virtual DbSet<TcustBankAccount> TcustBankAccounts { get; set; } = null!;
        public virtual DbSet<TcustBankAccountProduct> TcustBankAccountProducts { get; set; } = null!;
        public virtual DbSet<TcustCifhistory> TcustCifhistories { get; set; } = null!;
        public virtual DbSet<TcustPerson> TcustPeople { get; set; } = null!;
        public virtual DbSet<TcustProfile> TcustProfiles { get; set; } = null!;
        public virtual DbSet<TcustProfileAnswer> TcustProfileAnswers { get; set; } = null!;
        public virtual DbSet<TcustProfileExt> TcustProfileExts { get; set; } = null!;
        public virtual DbSet<Tcustomer> Tcustomers { get; set; } = null!;
        public virtual DbSet<Tcustomer20200901Bak> Tcustomer20200901Baks { get; set; } = null!;
        public virtual DbSet<TcustomerAddress> TcustomerAddresses { get; set; } = null!;
        public virtual DbSet<TcustomerAddress20200921Bak> TcustomerAddress20200921Baks { get; set; } = null!;
        public virtual DbSet<TcustomerAuthContact> TcustomerAuthContacts { get; set; } = null!;
        public virtual DbSet<TcustomerBod> TcustomerBods { get; set; } = null!;
        public virtual DbSet<TcustomerCardInformation> TcustomerCardInformations { get; set; } = null!;
        public virtual DbSet<TcustomerCif> TcustomerCifs { get; set; } = null!;
        public virtual DbSet<TcustomerCorporateCardHolder> TcustomerCorporateCardHolders { get; set; } = null!;
        public virtual DbSet<TcustomerCustody> TcustomerCustodies { get; set; } = null!;
        public virtual DbSet<TcustomerDocument> TcustomerDocuments { get; set; } = null!;
        public virtual DbSet<TcustomerFwextUh> TcustomerFwextUhs { get; set; } = null!;
        public virtual DbSet<TcustomerHeir> TcustomerHeirs { get; set; } = null!;
        public virtual DbSet<TcustomerHistory> TcustomerHistories { get; set; } = null!;
        public virtual DbSet<TcustomerIndividual> TcustomerIndividuals { get; set; } = null!;
        public virtual DbSet<TcustomerInstitusi> TcustomerInstitusis { get; set; } = null!;
        public virtual DbSet<TcustomerInvestor> TcustomerInvestors { get; set; } = null!;
        public virtual DbSet<TcustomerModelRiskProfileMapping> TcustomerModelRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TcustomerNew> TcustomerNews { get; set; } = null!;
        public virtual DbSet<TcustomerOwnership> TcustomerOwnerships { get; set; } = null!;
        public virtual DbSet<TcustomerProductRekeningMapping> TcustomerProductRekeningMappings { get; set; } = null!;
        public virtual DbSet<TcustomerProductRiskProfileMapping> TcustomerProductRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TcustomerRegInvestmentPlan> TcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TcustomerReport> TcustomerReports { get; set; } = null!;
        public virtual DbSet<TcustomerReportTemplate> TcustomerReportTemplates { get; set; } = null!;
        public virtual DbSet<TcustomerRiskProfile> TcustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<TcustomerRiskProfileAnswer> TcustomerRiskProfileAnswers { get; set; } = null!;
        public virtual DbSet<TcustomerRiskProfileAnswerTemp> TcustomerRiskProfileAnswerTemps { get; set; } = null!;
        public virtual DbSet<TcustomerRiskProfileTemp> TcustomerRiskProfileTemps { get; set; } = null!;
        public virtual DbSet<TcustomerSalesHistory> TcustomerSalesHistories { get; set; } = null!;
        public virtual DbSet<TcustomerShareholder> TcustomerShareholders { get; set; } = null!;
        public virtual DbSet<TcustomerSource> TcustomerSources { get; set; } = null!;
        public virtual DbSet<TcustomerTemporary> TcustomerTemporaries { get; set; } = null!;
        public virtual DbSet<TcustomerTransaction> TcustomerTransactions { get; set; } = null!;
        public virtual DbSet<TdataChangePending> TdataChangePendings { get; set; } = null!;
        public virtual DbSet<TdistributedIncomeDatum> TdistributedIncomeData { get; set; } = null!;
        public virtual DbSet<Tdividend> Tdividends { get; set; } = null!;
        public virtual DbSet<TdividendRate> TdividendRates { get; set; } = null!;
        public virtual DbSet<TdividendSaldo> TdividendSaldos { get; set; } = null!;
        public virtual DbSet<TdividendSummary> TdividendSummaries { get; set; } = null!;
        public virtual DbSet<TdualApprovalExample> TdualApprovalExamples { get; set; } = null!;
        public virtual DbSet<TdueDate> TdueDates { get; set; } = null!;
        public virtual DbSet<TempMonthlyStatementGenerate> TempMonthlyStatementGenerates { get; set; } = null!;
        public virtual DbSet<TempTcustomerRegInvestmentPlan> TempTcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<Tempbalance> Tempbalances { get; set; } = null!;
        public virtual DbSet<TendOfDay> TendOfDays { get; set; } = null!;
        public virtual DbSet<Teoddate> Teoddates { get; set; } = null!;
        public virtual DbSet<TexchangeRate> TexchangeRates { get; set; } = null!;
        public virtual DbSet<TexchangeRateByProduct> TexchangeRateByProducts { get; set; } = null!;
        public virtual DbSet<TextBtpnRtgssettlement> TextBtpnRtgssettlements { get; set; } = null!;
        public virtual DbSet<TextBtpnRtgssettlementLog> TextBtpnRtgssettlementLogs { get; set; } = null!;
        public virtual DbSet<TextBtpnRtgssettlementStatus> TextBtpnRtgssettlementStatuses { get; set; } = null!;
        public virtual DbSet<TextBtpnRtgssettlementTransaction> TextBtpnRtgssettlementTransactions { get; set; } = null!;
        public virtual DbSet<TextCimbBatchLog> TextCimbBatchLogs { get; set; } = null!;
        public virtual DbSet<TextCimbBatchLogDebitFail> TextCimbBatchLogDebitFails { get; set; } = null!;
        public virtual DbSet<TextCimbCustomerRegInvPlanLog> TextCimbCustomerRegInvPlanLogs { get; set; } = null!;
        public virtual DbSet<TextCimbEsbjourSeqNum> TextCimbEsbjourSeqNums { get; set; } = null!;
        public virtual DbSet<TExt_Victoria_APILog> TExt_Victoria_APILogs { get; set; } = null!;
        public virtual DbSet<TextCimbJobLog> TextCimbJobLogs { get; set; } = null!;
        public virtual DbSet<TextHighNetwork> TextHighNetworks { get; set; } = null!;
        public virtual DbSet<TextHighNetworkCustomer> TextHighNetworkCustomers { get; set; } = null!;
        public virtual DbSet<TextMailTemplate> TextMailTemplates { get; set; } = null!;
        public virtual DbSet<TextMailTemplateAttachment> TextMailTemplateAttachments { get; set; } = null!;
        public virtual DbSet<TextMailTemplateParameter> TextMailTemplateParameters { get; set; } = null!;
        public virtual DbSet<TextMegaBatchLog> TextMegaBatchLogs { get; set; } = null!;
        public virtual DbSet<TextMegaEsbjourSeqNum> TextMegaEsbjourSeqNums { get; set; } = null!;
        public virtual DbSet<TextMegaEsblog> TextMegaEsblogs { get; set; } = null!;
        public virtual DbSet<TextNobuIntConnectionLog> TextNobuIntConnectionLogs { get; set; } = null!;
        public virtual DbSet<TextUigenwebService> TextUigenwebServices { get; set; } = null!;
        public virtual DbSet<Tfee> Tfees { get; set; } = null!;
        public virtual DbSet<TfeeAgent> TfeeAgents { get; set; } = null!;
        public virtual DbSet<TfeeAgentNew> TfeeAgentNews { get; set; } = null!;
        public virtual DbSet<TfeeBroker> TfeeBrokers { get; set; } = null!;
        public virtual DbSet<TfeeCustomer> TfeeCustomers { get; set; } = null!;
        public virtual DbSet<TfieldList> TfieldLists { get; set; } = null!;
        public virtual DbSet<TfileList> TfileLists { get; set; } = null!;
        public virtual DbSet<TfnCoreImssiarAgentMovementGetAgentForTransaction> TfnCoreImssiarAgentMovementGetAgentForTransactions { get; set; } = null!;
        public virtual DbSet<TftDb> TftDbs { get; set; } = null!;
        public virtual DbSet<TftFileTemplate> TftFileTemplates { get; set; } = null!;
        public virtual DbSet<TftFileTemplateColumn> TftFileTemplateColumns { get; set; } = null!;
        public virtual DbSet<TftFileTemplateSample> TftFileTemplateSamples { get; set; } = null!;
        public virtual DbSet<TftMailQueue20210303> TftMailQueue20210303s { get; set; } = null!;
        public virtual DbSet<TftTarget> TftTargets { get; set; } = null!;
        public virtual DbSet<TftTargetParameter> TftTargetParameters { get; set; } = null!;
        public virtual DbSet<TftTransLookup> TftTransLookups { get; set; } = null!;
        public virtual DbSet<TftUpload> TftUploads { get; set; } = null!;
        public virtual DbSet<TftUploadTemplateMapping> TftUploadTemplateMappings { get; set; } = null!;
        public virtual DbSet<TfundHouse> TfundHouses { get; set; } = null!;
        public virtual DbSet<TgenuihistDttot> TgenuihistDttots { get; set; } = null!;
        public virtual DbSet<TgenuihistKpi> TgenuihistKpis { get; set; } = null!;
        public virtual DbSet<TgenuihistKpiachievement> TgenuihistKpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuihistKpiscore> TgenuihistKpiscores { get; set; } = null!;
        public virtual DbSet<TgenuihistKpitarget> TgenuihistKpitargets { get; set; } = null!;
        public virtual DbSet<TgenuihistTagent> TgenuihistTagents { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentAddress> TgenuihistTagentAddresses { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentBankAccount> TgenuihistTagentBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentCustomer> TgenuihistTagentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentCustomerDm> TgenuihistTagentCustomerDms { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentProduct> TgenuihistTagentProducts { get; set; } = null!;
        public virtual DbSet<TgenuihistTagentStructure> TgenuihistTagentStructures { get; set; } = null!;
        public virtual DbSet<TgenuihistTasset> TgenuihistTassets { get; set; } = null!;
        public virtual DbSet<TgenuihistTassetClass> TgenuihistTassetClasses { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceAgent> TgenuihistTbancAssuranceAgents { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceBalanceAium> TgenuihistTbancAssuranceBalanceAia { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceBalanceCsi> TgenuihistTbancAssuranceBalanceCsis { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceBalanceCsl> TgenuihistTbancAssuranceBalanceCsls { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceBalanceSunLife> TgenuihistTbancAssuranceBalanceSunLives { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceCustomer> TgenuihistTbancAssuranceCustomers { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceFeeBaseIncomeMonthlyAium> TgenuihistTbancAssuranceFeeBaseIncomeMonthlyAia { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceFeeBaseIncomeSunlife> TgenuihistTbancAssuranceFeeBaseIncomeSunlives { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceFund> TgenuihistTbancAssuranceFunds { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssurancePartner> TgenuihistTbancAssurancePartners { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssurancePolicy> TgenuihistTbancAssurancePolicies { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssurancePolicyAium> TgenuihistTbancAssurancePolicyAia { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProduct> TgenuihistTbancAssuranceProducts { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProductBankAccount> TgenuihistTbancAssuranceProductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProductFee> TgenuihistTbancAssuranceProductFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProductFund> TgenuihistTbancAssuranceProductFunds { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProductRider> TgenuihistTbancAssuranceProductRiders { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceProductRule> TgenuihistTbancAssuranceProductRules { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceReferral> TgenuihistTbancAssuranceReferrals { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceRegistration> TgenuihistTbancAssuranceRegistrations { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceRegistrationDetail> TgenuihistTbancAssuranceRegistrationDetails { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceRider> TgenuihistTbancAssuranceRiders { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceRiderPremi> TgenuihistTbancAssuranceRiderPremis { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceSpaj> TgenuihistTbancAssuranceSpajs { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceSpajfund> TgenuihistTbancAssuranceSpajfunds { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceSpajrider> TgenuihistTbancAssuranceSpajriders { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancAssuranceTransaction> TgenuihistTbancAssuranceTransactions { get; set; } = null!;
        public virtual DbSet<TgenuihistTbancassuranceBalanceManulife> TgenuihistTbancassuranceBalanceManulives { get; set; } = null!;
        public virtual DbSet<TgenuihistTcompany> TgenuihistTcompanies { get; set; } = null!;
        public virtual DbSet<TgenuihistTconfig> TgenuihistTconfigs { get; set; } = null!;
        public virtual DbSet<TgenuihistTcpfquotum> TgenuihistTcpfquota { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustBankAccount> TgenuihistTcustBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomer> TgenuihistTcustomers { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerAddress> TgenuihistTcustomerAddresses { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerAuthContact> TgenuihistTcustomerAuthContacts { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerDocument> TgenuihistTcustomerDocuments { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerHeir> TgenuihistTcustomerHeirs { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerModelRiskProfileMapping> TgenuihistTcustomerModelRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerOwnership> TgenuihistTcustomerOwnerships { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerProductRekeningMapping> TgenuihistTcustomerProductRekeningMappings { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerProductRiskProfileMapping> TgenuihistTcustomerProductRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerRegInvestmentPlan> TgenuihistTcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerRiskProfile> TgenuihistTcustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<TgenuihistTcustomerRiskProfileAnswer> TgenuihistTcustomerRiskProfileAnswers { get; set; } = null!;
        public virtual DbSet<TgenuihistTexchangeRate> TgenuihistTexchangeRates { get; set; } = null!;
        public virtual DbSet<TgenuihistTexchangeRateByProduct> TgenuihistTexchangeRateByProducts { get; set; } = null!;
        public virtual DbSet<TgenuihistTexpense> TgenuihistTexpenses { get; set; } = null!;
        public virtual DbSet<TgenuihistTfundHouse> TgenuihistTfundHouses { get; set; } = null!;
        public virtual DbSet<TgenuihistTgoal> TgenuihistTgoals { get; set; } = null!;
        public virtual DbSet<TgenuihistTholdUnit> TgenuihistTholdUnits { get; set; } = null!;
        public virtual DbSet<TgenuihistTholiday> TgenuihistTholidays { get; set; } = null!;
        public virtual DbSet<TgenuihistTholidayGeneral> TgenuihistTholidayGenerals { get; set; } = null!;
        public virtual DbSet<TgenuihistTincome> TgenuihistTincomes { get; set; } = null!;
        public virtual DbSet<TgenuihistTinsuranceCover> TgenuihistTinsuranceCovers { get; set; } = null!;
        public virtual DbSet<TgenuihistTkpiachievement> TgenuihistTkpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuihistTkpisalary> TgenuihistTkpisalaries { get; set; } = null!;
        public virtual DbSet<TgenuihistTkpitarget> TgenuihistTkpitargets { get; set; } = null!;
        public virtual DbSet<TgenuihistTkursGeneral> TgenuihistTkursGenerals { get; set; } = null!;
        public virtual DbSet<TgenuihistTmacroEconomicScenario> TgenuihistTmacroEconomicScenarios { get; set; } = null!;
        public virtual DbSet<TgenuihistTmodel> TgenuihistTmodels { get; set; } = null!;
        public virtual DbSet<TgenuihistTnav> TgenuihistTnavs { get; set; } = null!;
        public virtual DbSet<TgenuihistTproduct> TgenuihistTproducts { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductBankAccount> TgenuihistTproductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductExitWindow> TgenuihistTproductExitWindows { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductFee> TgenuihistTproductFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductFeeByDate> TgenuihistTproductFeeByDates { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductOfferingPeriod> TgenuihistTproductOfferingPeriods { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductRegInvestmentPlan> TgenuihistTproductRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuihistTproductTransactionFee> TgenuihistTproductTransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefBank> TgenuihistTrefBanks { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefBankBranch> TgenuihistTrefBankBranches { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefBankCustody> TgenuihistTrefBankCustodies { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefCurrency> TgenuihistTrefCurrencies { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefModel> TgenuihistTrefModels { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefProfile> TgenuihistTrefProfiles { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefProfileQuestion> TgenuihistTrefProfileQuestions { get; set; } = null!;
        public virtual DbSet<TgenuihistTrefProfileQuestionOption> TgenuihistTrefProfileQuestionOptions { get; set; } = null!;
        public virtual DbSet<TgenuihistTreferenceDetail> TgenuihistTreferenceDetails { get; set; } = null!;
        public virtual DbSet<TgenuihistTreferenceGroup> TgenuihistTreferenceGroups { get; set; } = null!;
        public virtual DbSet<TgenuihistTregularInvestmentPlan> TgenuihistTregularInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuihistTregularInvestmentPlanFee> TgenuihistTregularInvestmentPlanFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTregularInvestmentPlanFeeDetail> TgenuihistTregularInvestmentPlanFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuihistTretirement> TgenuihistTretirements { get; set; } = null!;
        public virtual DbSet<TgenuihistTrevenueAgentCustomer> TgenuihistTrevenueAgentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuihistTrevenueTransferAgent> TgenuihistTrevenueTransferAgents { get; set; } = null!;
        public virtual DbSet<TgenuihistTsharingFee> TgenuihistTsharingFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTsharingFeeRule> TgenuihistTsharingFeeRules { get; set; } = null!;
        public virtual DbSet<TgenuihistTtransactionBooking> TgenuihistTtransactionBookings { get; set; } = null!;
        public virtual DbSet<TgenuihistTtransactionFee> TgenuihistTtransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuihistTtransactionFeeDetail> TgenuihistTtransactionFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuihistVSsoRole> TgenuihistVSsoRoles { get; set; } = null!;
        public virtual DbSet<TgenuihistVSsoRoleMenu> TgenuihistVSsoRoleMenus { get; set; } = null!;
        public virtual DbSet<TgenuihistVSsoUser> TgenuihistVSsoUsers { get; set; } = null!;
        public virtual DbSet<TgenuijourKpi> TgenuijourKpis { get; set; } = null!;
        public virtual DbSet<TgenuijourKpiachievement> TgenuijourKpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuijourKpitarget> TgenuijourKpitargets { get; set; } = null!;
        public virtual DbSet<TgenuijourTagent> TgenuijourTagents { get; set; } = null!;
        public virtual DbSet<TgenuijourTasset> TgenuijourTassets { get; set; } = null!;
        public virtual DbSet<TgenuijourTassetClass> TgenuijourTassetClasses { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceAgent> TgenuijourTbancAssuranceAgents { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceBalanceAium> TgenuijourTbancAssuranceBalanceAia { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceBalanceCsi> TgenuijourTbancAssuranceBalanceCsis { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceBalanceCsl> TgenuijourTbancAssuranceBalanceCsls { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceBalanceSunLife> TgenuijourTbancAssuranceBalanceSunLives { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceCustomer> TgenuijourTbancAssuranceCustomers { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceFeeBaseIncomeMonthlyAium> TgenuijourTbancAssuranceFeeBaseIncomeMonthlyAia { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceFeeBaseIncomeSunlife> TgenuijourTbancAssuranceFeeBaseIncomeSunlives { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceFund> TgenuijourTbancAssuranceFunds { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssurancePartner> TgenuijourTbancAssurancePartners { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssurancePolicy> TgenuijourTbancAssurancePolicies { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssurancePolicyAium> TgenuijourTbancAssurancePolicyAia { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceProduct> TgenuijourTbancAssuranceProducts { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceReferral> TgenuijourTbancAssuranceReferrals { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceRegistration> TgenuijourTbancAssuranceRegistrations { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceRegistrationDetail> TgenuijourTbancAssuranceRegistrationDetails { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceRider> TgenuijourTbancAssuranceRiders { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceRiderPremi> TgenuijourTbancAssuranceRiderPremis { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceSpaj> TgenuijourTbancAssuranceSpajs { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancAssuranceTransaction> TgenuijourTbancAssuranceTransactions { get; set; } = null!;
        public virtual DbSet<TgenuijourTbancassuranceBalanceManulife> TgenuijourTbancassuranceBalanceManulives { get; set; } = null!;
        public virtual DbSet<TgenuijourTcompany> TgenuijourTcompanies { get; set; } = null!;
        public virtual DbSet<TgenuijourTconfig> TgenuijourTconfigs { get; set; } = null!;
        public virtual DbSet<TgenuijourTcpfquotum> TgenuijourTcpfquota { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomer> TgenuijourTcustomers { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomerModelRiskProfileMapping> TgenuijourTcustomerModelRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomerProductRekeningMapping> TgenuijourTcustomerProductRekeningMappings { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomerProductRiskProfileMapping> TgenuijourTcustomerProductRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomerRegInvestmentPlan> TgenuijourTcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuijourTcustomerRiskProfile> TgenuijourTcustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<TgenuijourTexchangeRate> TgenuijourTexchangeRates { get; set; } = null!;
        public virtual DbSet<TgenuijourTexchangeRateByProduct> TgenuijourTexchangeRateByProducts { get; set; } = null!;
        public virtual DbSet<TgenuijourTexpense> TgenuijourTexpenses { get; set; } = null!;
        public virtual DbSet<TgenuijourTfundHouse> TgenuijourTfundHouses { get; set; } = null!;
        public virtual DbSet<TgenuijourTgoal> TgenuijourTgoals { get; set; } = null!;
        public virtual DbSet<TgenuijourTholdUnit> TgenuijourTholdUnits { get; set; } = null!;
        public virtual DbSet<TgenuijourTholiday> TgenuijourTholidays { get; set; } = null!;
        public virtual DbSet<TgenuijourTholidayGeneral> TgenuijourTholidayGenerals { get; set; } = null!;
        public virtual DbSet<TgenuijourTincome> TgenuijourTincomes { get; set; } = null!;
        public virtual DbSet<TgenuijourTinsuranceCover> TgenuijourTinsuranceCovers { get; set; } = null!;
        public virtual DbSet<TgenuijourTkpiachievement> TgenuijourTkpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuijourTkpisalary> TgenuijourTkpisalaries { get; set; } = null!;
        public virtual DbSet<TgenuijourTkpitarget> TgenuijourTkpitargets { get; set; } = null!;
        public virtual DbSet<TgenuijourTkursGeneral> TgenuijourTkursGenerals { get; set; } = null!;
        public virtual DbSet<TgenuijourTmacroEconomicScenario> TgenuijourTmacroEconomicScenarios { get; set; } = null!;
        public virtual DbSet<TgenuijourTmodel> TgenuijourTmodels { get; set; } = null!;
        public virtual DbSet<TgenuijourTnav> TgenuijourTnavs { get; set; } = null!;
        public virtual DbSet<TgenuijourTproduct> TgenuijourTproducts { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefBank> TgenuijourTrefBanks { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefBankBranch> TgenuijourTrefBankBranches { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefBankCustody> TgenuijourTrefBankCustodies { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefCurrency> TgenuijourTrefCurrencies { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefProfile> TgenuijourTrefProfiles { get; set; } = null!;
        public virtual DbSet<TgenuijourTrefProfileQuestion> TgenuijourTrefProfileQuestions { get; set; } = null!;
        public virtual DbSet<TgenuijourTreferenceGroup> TgenuijourTreferenceGroups { get; set; } = null!;
        public virtual DbSet<TgenuijourTregularInvestmentPlan> TgenuijourTregularInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuijourTregularInvestmentPlanFee> TgenuijourTregularInvestmentPlanFees { get; set; } = null!;
        public virtual DbSet<TgenuijourTretirement> TgenuijourTretirements { get; set; } = null!;
        public virtual DbSet<TgenuijourTrevenueAgentCustomer> TgenuijourTrevenueAgentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuijourTrevenueTransferAgent> TgenuijourTrevenueTransferAgents { get; set; } = null!;
        public virtual DbSet<TgenuijourTsharingFee> TgenuijourTsharingFees { get; set; } = null!;
        public virtual DbSet<TgenuijourTtransactionBooking> TgenuijourTtransactionBookings { get; set; } = null!;
        public virtual DbSet<TgenuijourTtransactionFee> TgenuijourTtransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuijourVSsoRole> TgenuijourVSsoRoles { get; set; } = null!;
        public virtual DbSet<TgenuijourVSsoUser> TgenuijourVSsoUsers { get; set; } = null!;
        public virtual DbSet<TgenuipendDttot> TgenuipendDttots { get; set; } = null!;
        public virtual DbSet<TgenuipendKpi> TgenuipendKpis { get; set; } = null!;
        public virtual DbSet<TgenuipendKpiachievement> TgenuipendKpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuipendKpiscore> TgenuipendKpiscores { get; set; } = null!;
        public virtual DbSet<TgenuipendKpitarget> TgenuipendKpitargets { get; set; } = null!;
        public virtual DbSet<TgenuipendTagent> TgenuipendTagents { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentAddress> TgenuipendTagentAddresses { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentBankAccount> TgenuipendTagentBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentCustomer> TgenuipendTagentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentCustomerDm> TgenuipendTagentCustomerDms { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentProduct> TgenuipendTagentProducts { get; set; } = null!;
        public virtual DbSet<TgenuipendTagentStructure> TgenuipendTagentStructures { get; set; } = null!;
        public virtual DbSet<TgenuipendTasset> TgenuipendTassets { get; set; } = null!;
        public virtual DbSet<TgenuipendTassetClass> TgenuipendTassetClasses { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceAgent> TgenuipendTbancAssuranceAgents { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceBalanceAium> TgenuipendTbancAssuranceBalanceAia { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceBalanceCsi> TgenuipendTbancAssuranceBalanceCsis { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceBalanceCsl> TgenuipendTbancAssuranceBalanceCsls { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceBalanceSunLife> TgenuipendTbancAssuranceBalanceSunLives { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceCustomer> TgenuipendTbancAssuranceCustomers { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceFeeBaseIncomeMonthlyAium> TgenuipendTbancAssuranceFeeBaseIncomeMonthlyAia { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceFeeBaseIncomeSunlife> TgenuipendTbancAssuranceFeeBaseIncomeSunlives { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceFund> TgenuipendTbancAssuranceFunds { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssurancePartner> TgenuipendTbancAssurancePartners { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssurancePolicy> TgenuipendTbancAssurancePolicies { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssurancePolicyAium> TgenuipendTbancAssurancePolicyAia { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProduct> TgenuipendTbancAssuranceProducts { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProductBankAccount> TgenuipendTbancAssuranceProductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProductFee> TgenuipendTbancAssuranceProductFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProductFund> TgenuipendTbancAssuranceProductFunds { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProductRider> TgenuipendTbancAssuranceProductRiders { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceProductRule> TgenuipendTbancAssuranceProductRules { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceReferral> TgenuipendTbancAssuranceReferrals { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceRegistration> TgenuipendTbancAssuranceRegistrations { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceRegistrationDetail> TgenuipendTbancAssuranceRegistrationDetails { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceRider> TgenuipendTbancAssuranceRiders { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceRiderPremi> TgenuipendTbancAssuranceRiderPremis { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceSpaj> TgenuipendTbancAssuranceSpajs { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceSpajfund> TgenuipendTbancAssuranceSpajfunds { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceSpajrider> TgenuipendTbancAssuranceSpajriders { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancAssuranceTransaction> TgenuipendTbancAssuranceTransactions { get; set; } = null!;
        public virtual DbSet<TgenuipendTbancassuranceBalanceManulife> TgenuipendTbancassuranceBalanceManulives { get; set; } = null!;
        public virtual DbSet<TgenuipendTcompany> TgenuipendTcompanies { get; set; } = null!;
        public virtual DbSet<TgenuipendTconfig> TgenuipendTconfigs { get; set; } = null!;
        public virtual DbSet<TgenuipendTcpfquotum> TgenuipendTcpfquota { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustBankAccount> TgenuipendTcustBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomer> TgenuipendTcustomers { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerAddress> TgenuipendTcustomerAddresses { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerAuthContact> TgenuipendTcustomerAuthContacts { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerDocument> TgenuipendTcustomerDocuments { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerHeir> TgenuipendTcustomerHeirs { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerModelRiskProfileMapping> TgenuipendTcustomerModelRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerOwnership> TgenuipendTcustomerOwnerships { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerProductRekeningMapping> TgenuipendTcustomerProductRekeningMappings { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerProductRiskProfileMapping> TgenuipendTcustomerProductRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerRegInvestmentPlan> TgenuipendTcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerRiskProfile> TgenuipendTcustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<TgenuipendTcustomerRiskProfileAnswer> TgenuipendTcustomerRiskProfileAnswers { get; set; } = null!;
        public virtual DbSet<TgenuipendTexchangeRate> TgenuipendTexchangeRates { get; set; } = null!;
        public virtual DbSet<TgenuipendTexchangeRateByProduct> TgenuipendTexchangeRateByProducts { get; set; } = null!;
        public virtual DbSet<TgenuipendTexpense> TgenuipendTexpenses { get; set; } = null!;
        public virtual DbSet<TgenuipendTfundHouse> TgenuipendTfundHouses { get; set; } = null!;
        public virtual DbSet<TgenuipendTgoal> TgenuipendTgoals { get; set; } = null!;
        public virtual DbSet<TgenuipendTholdUnit> TgenuipendTholdUnits { get; set; } = null!;
        public virtual DbSet<TgenuipendTholiday> TgenuipendTholidays { get; set; } = null!;
        public virtual DbSet<TgenuipendTholidayGeneral> TgenuipendTholidayGenerals { get; set; } = null!;
        public virtual DbSet<TgenuipendTincome> TgenuipendTincomes { get; set; } = null!;
        public virtual DbSet<TgenuipendTinsuranceCover> TgenuipendTinsuranceCovers { get; set; } = null!;
        public virtual DbSet<TgenuipendTkpiachievement> TgenuipendTkpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuipendTkpisalary> TgenuipendTkpisalaries { get; set; } = null!;
        public virtual DbSet<TgenuipendTkpitarget> TgenuipendTkpitargets { get; set; } = null!;
        public virtual DbSet<TgenuipendTkursGeneral> TgenuipendTkursGenerals { get; set; } = null!;
        public virtual DbSet<TgenuipendTmacroEconomicScenario> TgenuipendTmacroEconomicScenarios { get; set; } = null!;
        public virtual DbSet<TgenuipendTmodel> TgenuipendTmodels { get; set; } = null!;
        public virtual DbSet<TgenuipendTnav> TgenuipendTnavs { get; set; } = null!;
        public virtual DbSet<TgenuipendTproduct> TgenuipendTproducts { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductBankAccount> TgenuipendTproductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductExitWindow> TgenuipendTproductExitWindows { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductFee> TgenuipendTproductFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductFeeByDate> TgenuipendTproductFeeByDates { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductOfferingPeriod> TgenuipendTproductOfferingPeriods { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductRegInvestmentPlan> TgenuipendTproductRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuipendTproductTransactionFee> TgenuipendTproductTransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefBank> TgenuipendTrefBanks { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefBankBranch> TgenuipendTrefBankBranches { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefBankCustody> TgenuipendTrefBankCustodies { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefCurrency> TgenuipendTrefCurrencies { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefModel> TgenuipendTrefModels { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefProfile> TgenuipendTrefProfiles { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefProfileQuestion> TgenuipendTrefProfileQuestions { get; set; } = null!;
        public virtual DbSet<TgenuipendTrefProfileQuestionOption> TgenuipendTrefProfileQuestionOptions { get; set; } = null!;
        public virtual DbSet<TgenuipendTreferenceDetail> TgenuipendTreferenceDetails { get; set; } = null!;
        public virtual DbSet<TgenuipendTreferenceGroup> TgenuipendTreferenceGroups { get; set; } = null!;
        public virtual DbSet<TgenuipendTregularInvestmentPlan> TgenuipendTregularInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuipendTregularInvestmentPlanFee> TgenuipendTregularInvestmentPlanFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTregularInvestmentPlanFeeDetail> TgenuipendTregularInvestmentPlanFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuipendTretirement> TgenuipendTretirements { get; set; } = null!;
        public virtual DbSet<TgenuipendTrevenueAgentCustomer> TgenuipendTrevenueAgentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuipendTrevenueTransferAgent> TgenuipendTrevenueTransferAgents { get; set; } = null!;
        public virtual DbSet<TgenuipendTsharingFee> TgenuipendTsharingFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTsharingFeeRule> TgenuipendTsharingFeeRules { get; set; } = null!;
        public virtual DbSet<TgenuipendTtransactionBooking> TgenuipendTtransactionBookings { get; set; } = null!;
        public virtual DbSet<TgenuipendTtransactionFee> TgenuipendTtransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuipendTtransactionFeeDetail> TgenuipendTtransactionFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuipendVtagentStructureSale> TgenuipendVtagentStructureSales { get; set; } = null!;
        public virtual DbSet<TgenuitempKpi> TgenuitempKpis { get; set; } = null!;
        public virtual DbSet<TgenuitempKpiachievement> TgenuitempKpiachievements { get; set; } = null!;
        public virtual DbSet<TgenuitempKpiscore> TgenuitempKpiscores { get; set; } = null!;
        public virtual DbSet<TgenuitempKpitarget> TgenuitempKpitargets { get; set; } = null!;
        public virtual DbSet<TgenuitempTagent> TgenuitempTagents { get; set; } = null!;
        public virtual DbSet<TgenuitempTagentAddress> TgenuitempTagentAddresses { get; set; } = null!;
        public virtual DbSet<TgenuitempTagentBankAccount> TgenuitempTagentBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuitempTagentCustomer> TgenuitempTagentCustomers { get; set; } = null!;
        public virtual DbSet<TgenuitempTagentCustomerDm> TgenuitempTagentCustomerDms { get; set; } = null!;
        public virtual DbSet<TgenuitempTagentProduct> TgenuitempTagentProducts { get; set; } = null!;
        public virtual DbSet<TgenuitempTasset> TgenuitempTassets { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceAgent> TgenuitempTbancAssuranceAgents { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceBalanceAium> TgenuitempTbancAssuranceBalanceAia { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceBalanceCsi> TgenuitempTbancAssuranceBalanceCsis { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceBalanceCsl> TgenuitempTbancAssuranceBalanceCsls { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceBalanceSunLife> TgenuitempTbancAssuranceBalanceSunLives { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceCustomer> TgenuitempTbancAssuranceCustomers { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceFeeBaseIncomeMonthlyAium> TgenuitempTbancAssuranceFeeBaseIncomeMonthlyAia { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceFeeBaseIncomeSunlife> TgenuitempTbancAssuranceFeeBaseIncomeSunlives { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceFund> TgenuitempTbancAssuranceFunds { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssurancePartner> TgenuitempTbancAssurancePartners { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssurancePolicy> TgenuitempTbancAssurancePolicies { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssurancePolicyAium> TgenuitempTbancAssurancePolicyAia { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProduct> TgenuitempTbancAssuranceProducts { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProductBankAccount> TgenuitempTbancAssuranceProductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProductFee> TgenuitempTbancAssuranceProductFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProductFund> TgenuitempTbancAssuranceProductFunds { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProductRider> TgenuitempTbancAssuranceProductRiders { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceProductRule> TgenuitempTbancAssuranceProductRules { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceReferral> TgenuitempTbancAssuranceReferrals { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceRegistration> TgenuitempTbancAssuranceRegistrations { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceRegistrationDetail> TgenuitempTbancAssuranceRegistrationDetails { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceRider> TgenuitempTbancAssuranceRiders { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceSpaj> TgenuitempTbancAssuranceSpajs { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceSpajfund> TgenuitempTbancAssuranceSpajfunds { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceSpajrider> TgenuitempTbancAssuranceSpajriders { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancAssuranceTransaction> TgenuitempTbancAssuranceTransactions { get; set; } = null!;
        public virtual DbSet<TgenuitempTbancassuranceBalanceManulife> TgenuitempTbancassuranceBalanceManulives { get; set; } = null!;
        public virtual DbSet<TgenuitempTcompany> TgenuitempTcompanies { get; set; } = null!;
        public virtual DbSet<TgenuitempTconfig> TgenuitempTconfigs { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustBankAccount> TgenuitempTcustBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomer> TgenuitempTcustomers { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerAddress> TgenuitempTcustomerAddresses { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerAuthContact> TgenuitempTcustomerAuthContacts { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerDocument> TgenuitempTcustomerDocuments { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerHeir> TgenuitempTcustomerHeirs { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerModelRiskProfileMapping> TgenuitempTcustomerModelRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerOwnership> TgenuitempTcustomerOwnerships { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerProductRekeningMapping> TgenuitempTcustomerProductRekeningMappings { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerProductRiskProfileMapping> TgenuitempTcustomerProductRiskProfileMappings { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerRegInvestmentPlan> TgenuitempTcustomerRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerRiskProfile> TgenuitempTcustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<TgenuitempTcustomerRiskProfileAnswer> TgenuitempTcustomerRiskProfileAnswers { get; set; } = null!;
        public virtual DbSet<TgenuitempTexchangeRate> TgenuitempTexchangeRates { get; set; } = null!;
        public virtual DbSet<TgenuitempTexchangeRateByProduct> TgenuitempTexchangeRateByProducts { get; set; } = null!;
        public virtual DbSet<TgenuitempTftFileTemplateColumn> TgenuitempTftFileTemplateColumns { get; set; } = null!;
        public virtual DbSet<TgenuitempTftFileTemplateSample> TgenuitempTftFileTemplateSamples { get; set; } = null!;
        public virtual DbSet<TgenuitempTftTargetParameter> TgenuitempTftTargetParameters { get; set; } = null!;
        public virtual DbSet<TgenuitempTftUploadTemplateMapping> TgenuitempTftUploadTemplateMappings { get; set; } = null!;
        public virtual DbSet<TgenuitempTfundHouse> TgenuitempTfundHouses { get; set; } = null!;
        public virtual DbSet<TgenuitempTgoal> TgenuitempTgoals { get; set; } = null!;
        public virtual DbSet<TgenuitempTholiday> TgenuitempTholidays { get; set; } = null!;
        public virtual DbSet<TgenuitempTholidayGeneral> TgenuitempTholidayGenerals { get; set; } = null!;
        public virtual DbSet<TgenuitempTincome> TgenuitempTincomes { get; set; } = null!;
        public virtual DbSet<TgenuitempTkursGeneral> TgenuitempTkursGenerals { get; set; } = null!;
        public virtual DbSet<TgenuitempTmodel> TgenuitempTmodels { get; set; } = null!;
        public virtual DbSet<TgenuitempTnav> TgenuitempTnavs { get; set; } = null!;
        public virtual DbSet<TgenuitempTproduct> TgenuitempTproducts { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductBankAccount> TgenuitempTproductBankAccounts { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductExitWindow> TgenuitempTproductExitWindows { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductFee> TgenuitempTproductFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductFeeByDate> TgenuitempTproductFeeByDates { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductOfferingPeriod> TgenuitempTproductOfferingPeriods { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductRegInvestmentPlan> TgenuitempTproductRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuitempTproductTransactionFee> TgenuitempTproductTransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefBank> TgenuitempTrefBanks { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefBankBranch> TgenuitempTrefBankBranches { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefBankCustody> TgenuitempTrefBankCustodies { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefCurrency> TgenuitempTrefCurrencies { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefModel> TgenuitempTrefModels { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefProfile> TgenuitempTrefProfiles { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefProfileQuestion> TgenuitempTrefProfileQuestions { get; set; } = null!;
        public virtual DbSet<TgenuitempTrefProfileQuestionOption> TgenuitempTrefProfileQuestionOptions { get; set; } = null!;
        public virtual DbSet<TgenuitempTreferenceDetail> TgenuitempTreferenceDetails { get; set; } = null!;
        public virtual DbSet<TgenuitempTreferenceGroup> TgenuitempTreferenceGroups { get; set; } = null!;
        public virtual DbSet<TgenuitempTregularInvestmentPlan> TgenuitempTregularInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TgenuitempTregularInvestmentPlanFee> TgenuitempTregularInvestmentPlanFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTregularInvestmentPlanFeeDetail> TgenuitempTregularInvestmentPlanFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuitempTsharingFee> TgenuitempTsharingFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTsharingFeeRule> TgenuitempTsharingFeeRules { get; set; } = null!;
        public virtual DbSet<TgenuitempTtransactionBooking> TgenuitempTtransactionBookings { get; set; } = null!;
        public virtual DbSet<TgenuitempTtransactionFee> TgenuitempTtransactionFees { get; set; } = null!;
        public virtual DbSet<TgenuitempTtransactionFeeDetail> TgenuitempTtransactionFeeDetails { get; set; } = null!;
        public virtual DbSet<TgenuitempVUigenTagentStructure> TgenuitempVUigenTagentStructures { get; set; } = null!;
        public virtual DbSet<TgenuitempVtagentStructureSale> TgenuitempVtagentStructureSales { get; set; } = null!;
        public virtual DbSet<Tgoal> Tgoals { get; set; } = null!;
        public virtual DbSet<TgoodFund> TgoodFunds { get; set; } = null!;
        public virtual DbSet<TgroupCust> TgroupCusts { get; set; } = null!;
        public virtual DbSet<TgroupCustList> TgroupCustLists { get; set; } = null!;
        public virtual DbSet<TgroupMenu> TgroupMenus { get; set; } = null!;
        public virtual DbSet<TgroupMenuList> TgroupMenuLists { get; set; } = null!;
        public virtual DbSet<TgroupProduct> TgroupProducts { get; set; } = null!;
        public virtual DbSet<TgroupProductList> TgroupProductLists { get; set; } = null!;
        public virtual DbSet<TholdUnit> TholdUnits { get; set; } = null!;
        public virtual DbSet<Tholiday> Tholidays { get; set; } = null!;
        public virtual DbSet<TholidayGeneral> TholidayGenerals { get; set; } = null!;
        public virtual DbSet<Tiagent> Tiagents { get; set; } = null!;
        public virtual DbSet<Timage> Timages { get; set; } = null!;
        public virtual DbSet<Tincome> Tincomes { get; set; } = null!;
        public virtual DbSet<Tinstruction> Tinstructions { get; set; } = null!;
        public virtual DbSet<TinsuranceCover> TinsuranceCovers { get; set; } = null!;
        public virtual DbSet<Tiso8583dataElement> Tiso8583dataElements { get; set; } = null!;
        public virtual DbSet<Tiso8583dataElementCategory> Tiso8583dataElementCategories { get; set; } = null!;
        public virtual DbSet<Tiso8583dataElementDetail> Tiso8583dataElementDetails { get; set; } = null!;
        public virtual DbSet<Tiso8583dataType> Tiso8583dataTypes { get; set; } = null!;
        public virtual DbSet<Tiso8583lengthType> Tiso8583lengthTypes { get; set; } = null!;
        public virtual DbSet<Tiso8583log> Tiso8583logs { get; set; } = null!;
        public virtual DbSet<Tiso8583messageClass> Tiso8583messageClasses { get; set; } = null!;
        public virtual DbSet<TjenisProduct> TjenisProducts { get; set; } = null!;
        public virtual DbSet<Tjob> Tjobs { get; set; } = null!;
        public virtual DbSet<TjobDailyFrequency> TjobDailyFrequencies { get; set; } = null!;
        public virtual DbSet<TjobFrequency> TjobFrequencies { get; set; } = null!;
        public virtual DbSet<TjournalPrm> TjournalPrms { get; set; } = null!;
        public virtual DbSet<TjournalScn> TjournalScns { get; set; } = null!;
        public virtual DbSet<Tkpiachievement> Tkpiachievements { get; set; } = null!;
        public virtual DbSet<Tkpisalary> Tkpisalaries { get; set; } = null!;
        public virtual DbSet<Tkpitarget> Tkpitargets { get; set; } = null!;
        public virtual DbSet<Tkur> Tkurs { get; set; } = null!;
        public virtual DbSet<TkursGeneral> TkursGenerals { get; set; } = null!;
        public virtual DbSet<TlinkTransaksi> TlinkTransaksis { get; set; } = null!;
        public virtual DbSet<TlogEndOfDay> TlogEndOfDays { get; set; } = null!;
        public virtual DbSet<TlookUpClient> TlookUpClients { get; set; } = null!;
        public virtual DbSet<TlookUpDetail> TlookUpDetails { get; set; } = null!;
        public virtual DbSet<TlookupDetailBtpn> TlookupDetailBtpns { get; set; } = null!;
        public virtual DbSet<TmacroEconomicScenario> TmacroEconomicScenarios { get; set; } = null!;
        public virtual DbSet<TmappingConversiFw> TmappingConversiFws { get; set; } = null!;
        public virtual DbSet<TmarketingHistory> TmarketingHistories { get; set; } = null!;
        public virtual DbSet<TmarketingLevel> TmarketingLevels { get; set; } = null!;
        public virtual DbSet<TmgtfeeHistory> TmgtfeeHistories { get; set; } = null!;
        public virtual DbSet<TmgtfeeHistoryStructure> TmgtfeeHistoryStructures { get; set; } = null!;
        public virtual DbSet<TmigrasiAgent> TmigrasiAgents { get; set; } = null!;
        public virtual DbSet<TmigrasiAgentBond> TmigrasiAgentBonds { get; set; } = null!;
        public virtual DbSet<TmigrasiAgentBond1> TmigrasiAgentBond1s { get; set; } = null!;
        public virtual DbSet<TmigrasiCustomerSale> TmigrasiCustomerSales { get; set; } = null!;
        public virtual DbSet<TmiscMappingChild> TmiscMappingChildren { get; set; } = null!;
        public virtual DbSet<TmiscMappingMaster> TmiscMappingMasters { get; set; } = null!;
        public virtual DbSet<Tmodel> Tmodels { get; set; } = null!;
        public virtual DbSet<Tmodule> Tmodules { get; set; } = null!;
        public virtual DbSet<TmonthlyStatementGenerate> TmonthlyStatementGenerates { get; set; } = null!;
        public virtual DbSet<TmpAfterScriptFt> TmpAfterScriptFts { get; set; } = null!;
        public virtual DbSet<Tnav> Tnavs { get; set; } = null!;
        public virtual DbSet<TnavTemp> TnavTemps { get; set; } = null!;
        public virtual DbSet<Tnavlog> Tnavlogs { get; set; } = null!;
        public virtual DbSet<Tnavtemporary> Tnavtemporaries { get; set; } = null!;
        public virtual DbSet<Tnews> Tnews { get; set; } = null!;
        public virtual DbSet<ToutStandingHistoryFifo> ToutStandingHistoryFifos { get; set; } = null!;
        public virtual DbSet<Toutstanding> Toutstandings { get; set; } = null!;
        public virtual DbSet<ToutstandingHistory> ToutstandingHistories { get; set; } = null!;
        public virtual DbSet<Tpph23> Tpph23s { get; set; } = null!;
        public virtual DbSet<Tprize> Tprizes { get; set; } = null!;
        public virtual DbSet<TprizeGift> TprizeGifts { get; set; } = null!;
        public virtual DbSet<Tprocess> Tprocesses { get; set; } = null!;
        public virtual DbSet<TprodClientGathering> TprodClientGatherings { get; set; } = null!;
        public virtual DbSet<TprodClientReporterBackup> TprodClientReporterBackups { get; set; } = null!;
        public virtual DbSet<TprodCrmaccountManager> TprodCrmaccountManagers { get; set; } = null!;
        public virtual DbSet<TprodCustodian> TprodCustodians { get; set; } = null!;
        public virtual DbSet<TprodCustodianPic> TprodCustodianPics { get; set; } = null!;
        public virtual DbSet<TprodDistAgreement> TprodDistAgreements { get; set; } = null!;
        public virtual DbSet<TprodDistributor> TprodDistributors { get; set; } = null!;
        public virtual DbSet<TprodDistributorPic> TprodDistributorPics { get; set; } = null!;
        public virtual DbSet<TprodDistributorSale> TprodDistributorSales { get; set; } = null!;
        public virtual DbSet<TprodFundManager> TprodFundManagers { get; set; } = null!;
        public virtual DbSet<TprodFundType> TprodFundTypes { get; set; } = null!;
        public virtual DbSet<TprodIncident> TprodIncidents { get; set; } = null!;
        public virtual DbSet<TprodLegalType> TprodLegalTypes { get; set; } = null!;
        public virtual DbSet<TprodMfdocument> TprodMfdocuments { get; set; } = null!;
        public virtual DbSet<TprodPfolioOwner> TprodPfolioOwners { get; set; } = null!;
        public virtual DbSet<TprodPima> TprodPimas { get; set; } = null!;
        public virtual DbSet<TprodProduct> TprodProducts { get; set; } = null!;
        public virtual DbSet<TprodProductDistributor> TprodProductDistributors { get; set; } = null!;
        public virtual DbSet<TprodProductFundManager> TprodProductFundManagers { get; set; } = null!;
        public virtual DbSet<TprodProductStatus> TprodProductStatuses { get; set; } = null!;
        public virtual DbSet<Tproduct> Tproducts { get; set; } = null!;
        public virtual DbSet<TproductBankAccount> TproductBankAccounts { get; set; } = null!;
        public virtual DbSet<TproductBankBic> TproductBankBics { get; set; } = null!;
        public virtual DbSet<TproductBundling> TproductBundlings { get; set; } = null!;
        public virtual DbSet<TproductBundlingDetail> TproductBundlingDetails { get; set; } = null!;
        public virtual DbSet<TproductBundlingRegistration> TproductBundlingRegistrations { get; set; } = null!;
        public virtual DbSet<TproductCategory> TproductCategories { get; set; } = null!;
        public virtual DbSet<TproductComposition> TproductCompositions { get; set; } = null!;
        public virtual DbSet<TproductCoupon> TproductCoupons { get; set; } = null!;
        public virtual DbSet<TproductCustomer> TproductCustomers { get; set; } = null!;
        public virtual DbSet<TproductDividendSchedule> TproductDividendSchedules { get; set; } = null!;
        public virtual DbSet<TproductEmail> TproductEmails { get; set; } = null!;
        public virtual DbSet<TproductExitWindow> TproductExitWindows { get; set; } = null!;
        public virtual DbSet<TproductFee> TproductFees { get; set; } = null!;
        public virtual DbSet<TproductFeeByDate> TproductFeeByDates { get; set; } = null!;
        public virtual DbSet<TproductGroup> TproductGroups { get; set; } = null!;
        public virtual DbSet<TproductGroupList> TproductGroupLists { get; set; } = null!;
        public virtual DbSet<TproductHistory> TproductHistories { get; set; } = null!;
        public virtual DbSet<TproductMassRedemption> TproductMassRedemptions { get; set; } = null!;
        public virtual DbSet<TproductMgtFee> TproductMgtFees { get; set; } = null!;
        public virtual DbSet<TproductOfferingPeriod> TproductOfferingPeriods { get; set; } = null!;
        public virtual DbSet<TproductOthersFee> TproductOthersFees { get; set; } = null!;
        public virtual DbSet<TproductPoFtype> TproductPoFtypes { get; set; } = null!;
        public virtual DbSet<TproductQuotum> TproductQuota { get; set; } = null!;
        public virtual DbSet<TproductRegInvestmentPlan> TproductRegInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TproductTransactionFee> TproductTransactionFees { get; set; } = null!;
        public virtual DbSet<TproductTransfer> TproductTransfers { get; set; } = null!;
        public virtual DbSet<TproductTransferAgent> TproductTransferAgents { get; set; } = null!;
        public virtual DbSet<TproductType> TproductTypes { get; set; } = null!;
        public virtual DbSet<Tput> Tputs { get; set; } = null!;
        public virtual DbSet<TredemptionFifo> TredemptionFifos { get; set; } = null!;
        public virtual DbSet<TrefAccountBankType> TrefAccountBankTypes { get; set; } = null!;
        public virtual DbSet<TrefAgentGroup> TrefAgentGroups { get; set; } = null!;
        public virtual DbSet<TrefAgentType> TrefAgentTypes { get; set; } = null!;
        public virtual DbSet<TrefApprovalStatus> TrefApprovalStatuses { get; set; } = null!;
        public virtual DbSet<TrefAriaGroup> TrefAriaGroups { get; set; } = null!;
        public virtual DbSet<TrefArium> TrefAria { get; set; } = null!;
        public virtual DbSet<TrefBank> TrefBanks { get; set; } = null!;
        public virtual DbSet<TrefBankBranch> TrefBankBranches { get; set; } = null!;
        public virtual DbSet<TrefBankCustody> TrefBankCustodies { get; set; } = null!;
        public virtual DbSet<TrefBranch> TrefBranches { get; set; } = null!;
        public virtual DbSet<TrefCabang> TrefCabangs { get; set; } = null!;
        public virtual DbSet<TrefCategory> TrefCategories { get; set; } = null!;
        public virtual DbSet<TrefCharge> TrefCharges { get; set; } = null!;
        public virtual DbSet<TrefCompanyType> TrefCompanyTypes { get; set; } = null!;
        public virtual DbSet<TrefCompanyTypeBapepam> TrefCompanyTypeBapepams { get; set; } = null!;
        public virtual DbSet<TrefCounter> TrefCounters { get; set; } = null!;
        public virtual DbSet<TrefCurrency> TrefCurrencies { get; set; } = null!;
        public virtual DbSet<TrefCustAccountStatus> TrefCustAccountStatuses { get; set; } = null!;
        public virtual DbSet<TrefCustQuiz> TrefCustQuizzes { get; set; } = null!;
        public virtual DbSet<TrefDtspackage> TrefDtspackages { get; set; } = null!;
        public virtual DbSet<TrefEducation> TrefEducations { get; set; } = null!;
        public virtual DbSet<TrefIdtype> TrefIdtypes { get; set; } = null!;
        public virtual DbSet<TrefInstructionCustody> TrefInstructionCustodies { get; set; } = null!;
        public virtual DbSet<TrefInvest> TrefInvests { get; set; } = null!;
        public virtual DbSet<TrefInvestor> TrefInvestors { get; set; } = null!;
        public virtual DbSet<TrefKotaNew> TrefKotaNews { get; set; } = null!;
        public virtual DbSet<TrefKotaNew20200921Bak> TrefKotaNew20200921Baks { get; set; } = null!;
        public virtual DbSet<TrefKotaNewOld> TrefKotaNewOlds { get; set; } = null!;
        public virtual DbSet<TrefKotum> TrefKota { get; set; } = null!;
        public virtual DbSet<TrefMarital> TrefMaritals { get; set; } = null!;
        public virtual DbSet<TrefMenuType> TrefMenuTypes { get; set; } = null!;
        public virtual DbSet<TrefModel> TrefModels { get; set; } = null!;
        public virtual DbSet<TrefModuleMenuWin> TrefModuleMenuWins { get; set; } = null!;
        public virtual DbSet<TrefNationality> TrefNationalities { get; set; } = null!;
        public virtual DbSet<TrefObjective> TrefObjectives { get; set; } = null!;
        public virtual DbSet<TrefOccupation> TrefOccupations { get; set; } = null!;
        public virtual DbSet<TrefOthersFee> TrefOthersFees { get; set; } = null!;
        public virtual DbSet<TrefPaymentMethod> TrefPaymentMethods { get; set; } = null!;
        public virtual DbSet<TrefProductCategory> TrefProductCategories { get; set; } = null!;
        public virtual DbSet<TrefProductInfo> TrefProductInfos { get; set; } = null!;
        public virtual DbSet<TrefProductMapping> TrefProductMappings { get; set; } = null!;
        public virtual DbSet<TrefProfile> TrefProfiles { get; set; } = null!;
        public virtual DbSet<TrefProfileQuestion> TrefProfileQuestions { get; set; } = null!;
        public virtual DbSet<TrefProfileQuestionOption> TrefProfileQuestionOptions { get; set; } = null!;
        public virtual DbSet<TrefProfileRiskMapping> TrefProfileRiskMappings { get; set; } = null!;
        public virtual DbSet<TrefQuizValue> TrefQuizValues { get; set; } = null!;
        public virtual DbSet<TrefRangeReport> TrefRangeReports { get; set; } = null!;
        public virtual DbSet<TrefRecStatus> TrefRecStatuses { get; set; } = null!;
        public virtual DbSet<TrefRedReportType> TrefRedReportTypes { get; set; } = null!;
        public virtual DbSet<TrefReligion> TrefReligions { get; set; } = null!;
        public virtual DbSet<TrefSetting> TrefSettings { get; set; } = null!;
        public virtual DbSet<TrefSex> TrefSexes { get; set; } = null!;
        public virtual DbSet<TrefSinvestParticipantType> TrefSinvestParticipantTypes { get; set; } = null!;
        public virtual DbSet<TrefSponsorship> TrefSponsorships { get; set; } = null!;
        public virtual DbSet<TrefStatus> TrefStatuses { get; set; } = null!;
        public virtual DbSet<TrefTransactionAccountType> TrefTransactionAccountTypes { get; set; } = null!;
        public virtual DbSet<TrefTransactionGenerator> TrefTransactionGenerators { get; set; } = null!;
        public virtual DbSet<TrefTransactionInputMode> TrefTransactionInputModes { get; set; } = null!;
        public virtual DbSet<TrefTxFeeNett> TrefTxFeeNetts { get; set; } = null!;
        public virtual DbSet<TrefWmi> TrefWmis { get; set; } = null!;
        public virtual DbSet<TrefWmijabatan> TrefWmijabatans { get; set; } = null!;
        public virtual DbSet<TrefWmistatic> TrefWmistatics { get; set; } = null!;
        public virtual DbSet<TreferenceDetail> TreferenceDetails { get; set; } = null!;
        public virtual DbSet<TreferenceDetailKodePos20200921Bak> TreferenceDetailKodePos20200921Baks { get; set; } = null!;
        public virtual DbSet<TreferenceGroup> TreferenceGroups { get; set; } = null!;
        public virtual DbSet<Trefproduct2> Trefproduct2s { get; set; } = null!;
        public virtual DbSet<TregularHoliday> TregularHolidays { get; set; } = null!;
        public virtual DbSet<TregularInvestmentPlan> TregularInvestmentPlans { get; set; } = null!;
        public virtual DbSet<TregularInvestmentPlanFee> TregularInvestmentPlanFees { get; set; } = null!;
        public virtual DbSet<TregularInvestmentPlanFeeDetail> TregularInvestmentPlanFeeDetails { get; set; } = null!;
        public virtual DbSet<TreportAuthorizer> TreportAuthorizers { get; set; } = null!;
        public virtual DbSet<TreportAuthorizerDetail> TreportAuthorizerDetails { get; set; } = null!;
        public virtual DbSet<TreportAuthorizerType> TreportAuthorizerTypes { get; set; } = null!;
        public virtual DbSet<TreportExport> TreportExports { get; set; } = null!;
        public virtual DbSet<TreportExportTemplate> TreportExportTemplates { get; set; } = null!;
        public virtual DbSet<TresultFeeTiering> TresultFeeTierings { get; set; } = null!;
        public virtual DbSet<Tretirement> Tretirements { get; set; } = null!;
        public virtual DbSet<TsettleForApproval> TsettleForApprovals { get; set; } = null!;
        public virtual DbSet<Tsetup> Tsetups { get; set; } = null!;
        public virtual DbSet<TsharingFee> TsharingFees { get; set; } = null!;
        public virtual DbSet<TsharingFeeHistory> TsharingFeeHistories { get; set; } = null!;
        public virtual DbSet<TsharingFeeRule> TsharingFeeRules { get; set; } = null!;
        public virtual DbSet<TsubAccount> TsubAccounts { get; set; } = null!;
        public virtual DbSet<TsubAccountGen> TsubAccountGens { get; set; } = null!;
        public virtual DbSet<TsystemParameter> TsystemParameters { get; set; } = null!;
        public virtual DbSet<TtableList> TtableLists { get; set; } = null!;
        public virtual DbSet<TtempIdtransactionMultivalue> TtempIdtransactionMultivalues { get; set; } = null!;
        public virtual DbSet<TtempMfeeAgentDaily> TtempMfeeAgentDailies { get; set; } = null!;
        public virtual DbSet<TtempMfeeBrokerDaily> TtempMfeeBrokerDailies { get; set; } = null!;
        public virtual DbSet<TtempRptmfee> TtempRptmfees { get; set; } = null!;
        public virtual DbSet<TtempRptmfeeTxt> TtempRptmfeeTxts { get; set; } = null!;
        public virtual DbSet<TtempRptsharingFee> TtempRptsharingFees { get; set; } = null!;
        public virtual DbSet<Ttransaction> Ttransactions { get; set; } = null!;
        public virtual DbSet<Ttransaction20201221Bak> Ttransaction20201221Baks { get; set; } = null!;
        public virtual DbSet<Ttransaction20201229Bak> Ttransaction20201229Baks { get; set; } = null!;
        public virtual DbSet<Ttransaction20210118Bak> Ttransaction20210118Baks { get; set; } = null!;
        public virtual DbSet<TtransactionBankAccount> TtransactionBankAccounts { get; set; } = null!;
        public virtual DbSet<TtransactionBankAccountHistory> TtransactionBankAccountHistories { get; set; } = null!;
        public virtual DbSet<TtransactionBatch> TtransactionBatches { get; set; } = null!;
        public virtual DbSet<TtransactionBooking> TtransactionBookings { get; set; } = null!;
        public virtual DbSet<TtransactionFee> TtransactionFees { get; set; } = null!;
        public virtual DbSet<TtransactionFeeDetail> TtransactionFeeDetails { get; set; } = null!;
        public virtual DbSet<TtransactionForApproval> TtransactionForApprovals { get; set; } = null!;
        public virtual DbSet<TtransactionHistory> TtransactionHistories { get; set; } = null!;
        public virtual DbSet<TtransactionJournal> TtransactionJournals { get; set; } = null!;
        public virtual DbSet<TtransactionLog> TtransactionLogs { get; set; } = null!;
        public virtual DbSet<TtransactionLogCore> TtransactionLogCores { get; set; } = null!;
        public virtual DbSet<TtransactionNotification> TtransactionNotifications { get; set; } = null!;
        public virtual DbSet<TtransactionRiskProfileSimulation> TtransactionRiskProfileSimulations { get; set; } = null!;
        public virtual DbSet<TtransactionTemp> TtransactionTemps { get; set; } = null!;
        public virtual DbSet<TupdateCif> TupdateCifs { get; set; } = null!;
        public virtual DbSet<TuploadFile> TuploadFiles { get; set; } = null!;
        public virtual DbSet<Tviolation> Tviolations { get; set; } = null!;
        public virtual DbSet<TviolationMapping> TviolationMappings { get; set; } = null!;
        public virtual DbSet<TviolationRef> TviolationRefs { get; set; } = null!;
        public virtual DbSet<Tyield> Tyields { get; set; } = null!;
        public virtual DbSet<VAmlCustomer> VAmlCustomers { get; set; } = null!;
        public virtual DbSet<VBancassRiderPayment> VBancassRiderPayments { get; set; } = null!;
        public virtual DbSet<VBancassTransaction> VBancassTransactions { get; set; } = null!;
        public virtual DbSet<VBancassuranceProductPremiumFrequency> VBancassuranceProductPremiumFrequencies { get; set; } = null!;
        public virtual DbSet<VCustomerArium> VCustomerAria { get; set; } = null!;
        public virtual DbSet<VCustomerInquiry> VCustomerInquiries { get; set; } = null!;
        public virtual DbSet<VCustomerRiskProfile> VCustomerRiskProfiles { get; set; } = null!;
        public virtual DbSet<VFtUiTemplateColumn> VFtUiTemplateColumns { get; set; } = null!;
        public virtual DbSet<VGetListSalesBranchForrb> VGetListSalesBranchForrbs { get; set; } = null!;
        public virtual DbSet<VGetProfileByTcustomerRiskProfileId> VGetProfileByTcustomerRiskProfileIds { get; set; } = null!;
        public virtual DbSet<VGetProfileByTcustomerRiskProfileIdCorp> VGetProfileByTcustomerRiskProfileIdCorps { get; set; } = null!;
        public virtual DbSet<VHolidayGeneralLookup> VHolidayGeneralLookups { get; set; } = null!;
        public virtual DbSet<VLookupAgent> VLookupAgents { get; set; } = null!;
        public virtual DbSet<VPfolioCustomer> VPfolioCustomers { get; set; } = null!;
        public virtual DbSet<VProductBondMutualFund> VProductBondMutualFunds { get; set; } = null!;
        public virtual DbSet<VRbsTgenuihistTmarketPrice> VRbsTgenuihistTmarketPrices { get; set; } = null!;
        public virtual DbSet<VRbsTholdUnit> VRbsTholdUnits { get; set; } = null!;
        public virtual DbSet<VRbsTmarketPrice> VRbsTmarketPrices { get; set; } = null!;
        public virtual DbSet<VRbsTproduct> VRbsTproducts { get; set; } = null!;
        public virtual DbSet<VRbsTtransaction> VRbsTtransactions { get; set; } = null!;
        public virtual DbSet<VSaldoCalc> VSaldoCalcs { get; set; } = null!;
        public virtual DbSet<VSsoRole> VSsoRoles { get; set; } = null!;
        public virtual DbSet<VSsoUser> VSsoUsers { get; set; } = null!;
        public virtual DbSet<VTagentCustomer> VTagentCustomers { get; set; } = null!;
        public virtual DbSet<VTagentCustomerMovement> VTagentCustomerMovements { get; set; } = null!;
        public virtual DbSet<VTcustBankAccount> VTcustBankAccounts { get; set; } = null!;
        public virtual DbSet<VTcustomerPending> VTcustomerPendings { get; set; } = null!;
        public virtual DbSet<VToutstandingHistoryFifoUnit> VToutstandingHistoryFifoUnits { get; set; } = null!;
        public virtual DbSet<VTproductBankAccount> VTproductBankAccounts { get; set; } = null!;
        public virtual DbSet<VTproductBundlingRegistration> VTproductBundlingRegistrations { get; set; } = null!;
        public virtual DbSet<VTransactionList> VTransactionLists { get; set; } = null!;
        public virtual DbSet<VTransactionSiarCabangAum> VTransactionSiarCabangAums { get; set; } = null!;
        public virtual DbSet<VTrefKotaNew> VTrefKotaNews { get; set; } = null!;
        public virtual DbSet<VTrefKotaNewProvince> VTrefKotaNewProvinces { get; set; } = null!;
        public virtual DbSet<VTreferenceDetail> VTreferenceDetails { get; set; } = null!;
        public virtual DbSet<VUiRiskProfileList> VUiRiskProfileLists { get; set; } = null!;
        public virtual DbSet<VUiTincome> VUiTincomes { get; set; } = null!;
        public virtual DbSet<VUigenCustomerGoal> VUigenCustomerGoals { get; set; } = null!;
        public virtual DbSet<VUigenFixedTagentStructure> VUigenFixedTagentStructures { get; set; } = null!;
        public virtual DbSet<VUigenPmsInsuranceCoverList> VUigenPmsInsuranceCoverLists { get; set; } = null!;
        public virtual DbSet<VUigenPmsRetirementList> VUigenPmsRetirementLists { get; set; } = null!;
        public virtual DbSet<VUigenPmsTassetClassList> VUigenPmsTassetClassLists { get; set; } = null!;
        public virtual DbSet<VUigenPmsTassetList> VUigenPmsTassetLists { get; set; } = null!;
        public virtual DbSet<VUigenPmsTincomeList> VUigenPmsTincomeLists { get; set; } = null!;
        public virtual DbSet<VUigenPmsTmacroEconomicScenarioList> VUigenPmsTmacroEconomicScenarioLists { get; set; } = null!;
        public virtual DbSet<VUigenTagentStructure> VUigenTagentStructures { get; set; } = null!;
        public virtual DbSet<VUigenTcpfquotaAgent> VUigenTcpfquotaAgents { get; set; } = null!;
        public virtual DbSet<VUigenTcpfquotaList> VUigenTcpfquotaLists { get; set; } = null!;
        public virtual DbSet<VUigenTcustomerProductRekeningMappingList> VUigenTcustomerProductRekeningMappingLists { get; set; } = null!;
        public virtual DbSet<VUigenTcustomerRegInvestmentPlanList> VUigenTcustomerRegInvestmentPlanLists { get; set; } = null!;
        public virtual DbSet<VUigenTholdUnitComboOldHoldUnit> VUigenTholdUnitComboOldHoldUnits { get; set; } = null!;
        public virtual DbSet<VUigenTholdUnitComboSubAccount> VUigenTholdUnitComboSubAccounts { get; set; } = null!;
        public virtual DbSet<VUigenTholdUnitList> VUigenTholdUnitLists { get; set; } = null!;
        public virtual DbSet<VUigenTtransactionBookingList> VUigenTtransactionBookingLists { get; set; } = null!;
        public virtual DbSet<VUimarketingBranchList> VUimarketingBranchLists { get; set; } = null!;
        public virtual DbSet<VUimarketingList> VUimarketingLists { get; set; } = null!;
        public virtual DbSet<VagentStructure> VagentStructures { get; set; } = null!;
        public virtual DbSet<VhToutStandingHistoryFifo> VhToutStandingHistoryFifos { get; set; } = null!;
        public virtual DbSet<VhTtransaction> VhTtransactions { get; set; } = null!;
        public virtual DbSet<VsubAccount> VsubAccounts { get; set; } = null!;
        public virtual DbSet<VtagentStructureSale> VtagentStructureSales { get; set; } = null!;
        public virtual DbSet<Vtnav> Vtnavs { get; set; } = null!;
        public virtual DbSet<VwAllProductJive> VwAllProductJives { get; set; } = null!;
        public virtual DbSet<ZzzOtsred> ZzzOtsreds { get; set; } = null!;
        public virtual DbSet<ZzzOtsub> ZzzOtsubs { get; set; } = null!;
        public virtual DbSet<ZzzTagentStructure> ZzzTagentStructures { get; set; } = null!;
        public virtual DbSet<ZzzTcustBankAccountHistory> ZzzTcustBankAccountHistories { get; set; } = null!;
        public virtual DbSet<ZzzTcustomerRiskProfileAnswer> ZzzTcustomerRiskProfileAnswers { get; set; } = null!;
        public virtual DbSet<ZzztransactionMig> ZzztransactionMigs { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<IsTrue>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<Corecustomeraccountmayora>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORECUSTOMERACCOUNTMAYORA");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Currency)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Corecustomermayora>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORECUSTOMERMAYORA");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("description");

                entity.Property(e => e.GeBirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_BirthDate");

                entity.Property(e => e.GeBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_BirthPlace");

                entity.Property(e => e.GeCharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_CharacteristicOthers");

                entity.Property(e => e.GeCompanyEstablishedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_CompanyEstablishedDate");

                entity.Property(e => e.GeCustomerType)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GE_CustomerType");

                entity.Property(e => e.GeExternalUnitHolder)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_ExternalUnitHolder");

                entity.Property(e => e.GeFirstName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("GE_FirstName");

                entity.Property(e => e.GeForeignOwnershipPercentage)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_ForeignOwnershipPercentage");

                entity.Property(e => e.GeFullName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("GE_FullName");

                entity.Property(e => e.GeFundUnitAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_FundUnitAccount");

                entity.Property(e => e.GeIdcharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDCharacteristic");

                entity.Property(e => e.GeIdcompanyType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDCompanyType");

                entity.Property(e => e.GeIddividendInvest)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDDividendInvest");

                entity.Property(e => e.GeIddomisili)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDDomisili");

                entity.Property(e => e.GeIdeducation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDEducation");

                entity.Property(e => e.GeIdeducationOtherText)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDEducationOtherText");

                entity.Property(e => e.GeIdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_IDExpired");

                entity.Property(e => e.GeIdissueDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_IDIssueDate");

                entity.Property(e => e.GeIdmaritalStatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDMaritalStatus");

                entity.Property(e => e.GeIdnationality)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDNationality");

                entity.Property(e => e.GeIdnumber)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDNumber");

                entity.Property(e => e.GeIdreligi)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDReligi");

                entity.Property(e => e.GeIdreligiOtherText)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDReligiOtherText");

                entity.Property(e => e.GeIdsex)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDSex");

                entity.Property(e => e.GeIdsponsorship)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDSponsorship");

                entity.Property(e => e.GeIdstatus)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDStatus");

                entity.Property(e => e.GeIdtitleAfterName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDTitleAfterName");

                entity.Property(e => e.GeIdtitleAfterNameOtherText)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDTitleAfterNameOtherText");

                entity.Property(e => e.GeIdtitleBeforeName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDTitleBeforeName");

                entity.Property(e => e.GeIdtitleBeforeNameOtherText)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDTitleBeforeNameOtherText");

                entity.Property(e => e.GeIdtype)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_IDType");

                entity.Property(e => e.GeIsAria).HasColumnName("GE_IsAria");

                entity.Property(e => e.GeKimsorKitas)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_KIMSorKITAS");

                entity.Property(e => e.GeKimsorKitasexpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_KIMSorKITASExpiryDate");

                entity.Property(e => e.GeKimsorKitasregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_KIMSorKITASRegistrationDate");

                entity.Property(e => e.GeKitap)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_KITAP");

                entity.Property(e => e.GeKitapexpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_KITAPExpiryDate");

                entity.Property(e => e.GeKitapregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_KITAPRegistrationDate");

                entity.Property(e => e.GeLastName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("GE_LastName");

                entity.Property(e => e.GeLineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_LineofBusiness");

                entity.Property(e => e.GeLocalOwnershipPercentage)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_LocalOwnershipPercentage");

                entity.Property(e => e.GeMiddleName)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("GE_MiddleName");

                entity.Property(e => e.GeMinTimePeriod).HasColumnName("GE_MinTimePeriod");

                entity.Property(e => e.GeMinUnitHold).HasColumnName("GE_MinUnitHold");

                entity.Property(e => e.GeMotherName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_MotherName");

                entity.Property(e => e.GeNickName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_NickName");

                entity.Property(e => e.GeNpwp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_NPWP");

                entity.Property(e => e.GeNpwpissuedDate)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_NPWPIssuedDate");

                entity.Property(e => e.GeNumberofDependentsOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_NumberofDependentsOthers");

                entity.Property(e => e.GePassport)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_Passport");

                entity.Property(e => e.GePassportExpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_PassportExpiryDate");

                entity.Property(e => e.GePassportRegistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("GE_PassportRegistrationDate");

                entity.Property(e => e.GePlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_PlaceofEstablishment");

                entity.Property(e => e.GeReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_ReferenceNo");

                entity.Property(e => e.GeRemark)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_Remark");

                entity.Property(e => e.GeSid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_SID");

                entity.Property(e => e.GeSourceOfFund)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_SourceOfFund");

                entity.Property(e => e.GeSurname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_Surname");

                entity.Property(e => e.GeTypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_TypeofBusinessOthers");

                entity.Property(e => e.GeUnitHolderIdno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("GE_UnitHolderIDNo");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IiDeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_DeedofEstablishment");

                entity.Property(e => e.IiDeedofEstablishmentDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_DeedofEstablishmentDate");

                entity.Property(e => e.IiLastAmendementofArticleofAssociationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_LastAmendementofArticleofAssociationDate");

                entity.Property(e => e.IiLastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_LastAmendementofArticleofAssociationNo");

                entity.Property(e => e.IiNoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_NoIjinPMA");

                entity.Property(e => e.IiNoIjinPmaexpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_NoIjinPMAExpiryDate");

                entity.Property(e => e.IiNoIjinPmaissuedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("II_NoIjinPMAIssuedAt");

                entity.Property(e => e.IiNoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_NoIjinUsahaLain");

                entity.Property(e => e.IiNoIjinUsahaLainDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_NoIjinUsahaLainDate");

                entity.Property(e => e.IiNoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_NoTDP");

                entity.Property(e => e.IiNotaryAt)
                    .HasColumnType("datetime")
                    .HasColumnName("II_NotaryAt");

                entity.Property(e => e.IiNotaryAt2)
                    .HasColumnType("datetime")
                    .HasColumnName("II_NotaryAt2");

                entity.Property(e => e.IiNotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_NotaryName");

                entity.Property(e => e.IiNotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_NotaryName2");

                entity.Property(e => e.IiSiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_SIUP");

                entity.Property(e => e.IiSiupexpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_SIUPExpiryDate");

                entity.Property(e => e.IiSiupissuedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("II_SIUPIssuedAt");

                entity.Property(e => e.IiSkd)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("II_SKD");

                entity.Property(e => e.IiSkdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("II_SKDExpired");

                entity.Property(e => e.IiSkdissuedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("II_SKDIssuedAt");

                entity.Property(e => e.IiTdpexpiryDate)
                    .HasColumnType("datetime")
                    .HasColumnName("II_TDPExpiryDate");

                entity.Property(e => e.IiTdpissuedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("II_TDPIssuedAt");

                entity.Property(e => e.OcCompanyTotalAsset)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_CompanyTotalAsset");

                entity.Property(e => e.OcDivision)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_Division");

                entity.Property(e => e.OcIdexpensePerMonth)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDExpensePerMonth");

                entity.Property(e => e.OcIdincome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDIncome");

                entity.Property(e => e.OcIdincomeAdditional)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDIncomeAdditional");

                entity.Property(e => e.OcIdoccupation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDOccupation");

                entity.Property(e => e.OcIdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDOccupationOther");

                entity.Property(e => e.OcIdsourceAdditionalIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDSourceAdditionalIncome");

                entity.Property(e => e.OcIdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDSourceAdditionalIncomeOther");

                entity.Property(e => e.OcIdsourceOfMainIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDSourceOfMainIncome");

                entity.Property(e => e.OcIdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_IDSourceOfMainIncomeOther");

                entity.Property(e => e.OcLengthOfEmployment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_LengthOfEmployment");

                entity.Property(e => e.OcNetProfit)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_NetProfit");

                entity.Property(e => e.OcNumberOfEmployees)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_NumberOfEmployees");

                entity.Property(e => e.OcOccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_OccupationLineOfBusiness");

                entity.Property(e => e.OcTotalIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_TotalIncome");

                entity.Property(e => e.OcTotalSales)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OC_TotalSales");

                entity.Property(e => e.PosFatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_FatherName");

                entity.Property(e => e.PosIdspouseExpenseMonth)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseExpenseMonth");

                entity.Property(e => e.PosIdspouseIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseIncome");

                entity.Property(e => e.PosIdspouseIncomeAdditional)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseIncomeAdditional");

                entity.Property(e => e.PosIdspouseOccupation)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseOccupation");

                entity.Property(e => e.PosIdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseOccupationOther");

                entity.Property(e => e.PosIdspouseSourceAdditionalIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.PosIdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.PosIdspouseSourceOfMainIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseSourceOfMainIncome");

                entity.Property(e => e.PosIdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.PosMotherName2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_MotherName2");

                entity.Property(e => e.PosSpouseBirthDate)
                    .HasColumnType("datetime")
                    .HasColumnName("POS_SpouseBirthDate");

                entity.Property(e => e.PosSpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseBirthPlace");

                entity.Property(e => e.PosSpouseCompanyTotalAsset)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseCompanyTotalAsset");

                entity.Property(e => e.PosSpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseDivisi");

                entity.Property(e => e.PosSpouseLengthOfEmployment)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseLengthOfEmployment");

                entity.Property(e => e.PosSpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseLineOfBusiness");

                entity.Property(e => e.PosSpouseName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseName");

                entity.Property(e => e.PosSpouseNetProfit)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseNetProfit");

                entity.Property(e => e.PosSpouseNumberOfEmployees)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseNumberOfEmployees");

                entity.Property(e => e.PosSpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpousePosition");

                entity.Property(e => e.PosSpouseTotalAsset)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseTotalAsset");

                entity.Property(e => e.PosSpouseTotalIncome)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("POS_SpouseTotalIncome");
            });

            modelBuilder.Entity<Dttot>(entity =>
            {
                entity.HasKey(e => e.Iddttot);

                entity.ToTable("DTTOT");

                entity.Property(e => e.Iddttot).HasColumnName("IDDTTOT");

                entity.Property(e => e.NamaDttot)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NamaDTTOT");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<EmailParameter>(entity =>
            {
                entity.HasKey(e => e.ParamKey);

                entity.ToTable("EmailParameter");

                entity.Property(e => e.ParamKey)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParamDataType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParamDesc)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ParamValue)
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<fn_TOutstandingHistoryFIFO_GetBalancePerProduct>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<fn_TOutstandingHistoryFIFO_GetBalancePerSubAccount_Result>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<fnInqQuotaCPF>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<fn_HolidayAdd>(entity =>
            {
                entity.HasNoKey();
            });

            modelBuilder.Entity<GetRand>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Get_RAND");

                entity.Property(e => e.MyRand).HasColumnName("MyRAND");
            });

            modelBuilder.Entity<Kpi>(entity =>
            {
                entity.HasKey(e => e.Idkpi)
                    .HasName("PK_TKPI");

                entity.ToTable("KPI");

                entity.Property(e => e.Idkpi).HasColumnName("IDKPI");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Kpiachievement>(entity =>
            {
                entity.HasKey(e => e.Idkpiachievement);

                entity.ToTable("KPIAchievement");

                entity.Property(e => e.Idkpiachievement).HasColumnName("IDKPIAchievement");

                entity.Property(e => e.Kpiachievement1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KPIAchievement");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Kpiscore>(entity =>
            {
                entity.HasKey(e => e.Idkpiscore);

                entity.ToTable("KPIScore");

                entity.Property(e => e.Idkpiscore)
                    .ValueGeneratedNever()
                    .HasColumnName("IDKPIScore");

                entity.Property(e => e.Score).HasMaxLength(50);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Kpitarget>(entity =>
            {
                entity.HasKey(e => e.Idkpitarget);

                entity.ToTable("KPITarget");

                entity.Property(e => e.Idkpitarget).HasColumnName("IDKPITarget");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TargetActiveAccount).HasColumnName("Target_ActiveAccount");

                entity.Property(e => e.TargetNcf).HasColumnName("Target_NCF");

                entity.Property(e => e.TargetQualitative).HasColumnName("Target_Qualitative");

                entity.Property(e => e.TargetRevenue).HasColumnName("Target_Revenue");

                entity.Property(e => e.WeightActiveAccount).HasColumnName("Weight_ActiveAccount");

                entity.Property(e => e.WeightNcf).HasColumnName("Weight_NCF");

                entity.Property(e => e.WeightQualitative).HasColumnName("Weight_Qualitative");

                entity.Property(e => e.WeightRevenue).HasColumnName("Weight_Revenue");
            });

            modelBuilder.Entity<Newjive2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("newjive2");

                entity.Property(e => e.CifPk)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("Cif_pk");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Salescode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("salescode");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.V10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("v10");
            });

            modelBuilder.Entity<TaccStatement>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAccStatement");

                entity.HasIndex(e => new { e.Date, e.UnitHolderIdNo }, "IX_TAccStatement");

                entity.Property(e => e.Address1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ccy)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CCY");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentTrans)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FullName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MailZip)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NavdateAkhirBulan)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDateAkhirBulan");

                entity.Property(e => e.NavperUnitAkhirBulan).HasColumnName("NAVperUnitAkhirBulan");

                entity.Property(e => e.NavperUnitTrans).HasColumnName("NAVperUnitTrans");

                entity.Property(e => e.Product)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefTransNoCustody)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.TransDate).HasColumnType("datetime");

                entity.Property(e => e.TransTypeEng)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TransTypeENG");

                entity.Property(e => e.TransTypeIna)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TransTypeINA");

                entity.Property(e => e.UnitBalanceIdr).HasColumnName("UnitBalanceIDR");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TaccountClientCodeCounter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAccountClientCodeCounter");

                entity.Property(e => e.LastLetter)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.LastNum)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TaccountClientCodeCounterId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TAccountClientCodeCounterID");
            });

            modelBuilder.Entity<TaddressType>(entity =>
            {
                entity.HasKey(e => e.AddressTypeId);

                entity.ToTable("TAddressType");

                entity.Property(e => e.AddressTypeId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AddressTypeID");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tagent>(entity =>
            {
                entity.HasKey(e => e.AgentId)
                    .HasName("PK__TAgent__6212E399");

                entity.ToTable("TAgent");

                entity.HasIndex(e => e.AgentBrokerFlag, "AgentBrokerFlag_IDX");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AajiexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIExpiredDate");

                entity.Property(e => e.Aajiformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIFormat");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Aajipp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIPP");

                entity.Property(e => e.AajistartDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIStartDate");

                entity.Property(e => e.ActivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.ActivateDate).HasColumnType("datetime");

                entity.Property(e => e.AgentBrokerFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('I')");

                entity.Property(e => e.Aliasagent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALIASAGENT");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Bic)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BIC");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CalcFeeMethod).HasDefaultValueSql("((0))");

                entity.Property(e => e.ChannelType).HasDefaultValueSql("((0))");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateDate).HasColumnType("datetime");

                entity.Property(e => e.Effsalary).HasColumnType("datetime");

                entity.Property(e => e.Employee).HasDefaultValueSql("('0')");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FormatSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FormatSK");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.Idname)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idname");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.InstitutionalType)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsPph).HasColumnName("isPPH");

                entity.Property(e => e.IsPpn).HasColumnName("isPPN");

                entity.Property(e => e.KodeKantor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Nik)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NomorSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NomorSK");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OfficerAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgentName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OtherNameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('<ROOT>')");

                entity.Property(e => e.RefAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgentName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RejectBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RejectDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('MA')");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TanggalSk)
                    .HasColumnType("date")
                    .HasColumnName("TanggalSK");

                entity.Property(e => e.TxFeeMethod).HasDefaultValueSql("(' ')");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.WaperdExpiredDate).HasColumnType("date");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Waperdformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDFormat");

                entity.Property(e => e.Waperdpp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDPP");

                entity.Property(e => e.WaperdstartDate)
                    .HasColumnType("date")
                    .HasColumnName("WAPERDStartDate");

                entity.Property(e => e.WppeexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEExpiredDate");

                entity.Property(e => e.Wppeformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEFormat");

                entity.Property(e => e.Wppeno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPENo");

                entity.Property(e => e.Wppepp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEPP");

                entity.Property(e => e.WppestartDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEStartDate");

                entity.HasOne(d => d.AgentLevel)
                    .WithMany(p => p.Tagents)
                    .HasForeignKey(d => d.AgentLevelId)
                    .HasConstraintName("FK_TAgent_TAgentLevel");
            });

            modelBuilder.Entity<TagentAddress>(entity =>
            {
                entity.HasKey(e => e.IdagentAddress)
                    .HasName("PK__TAgentAd__39AE0C445055BCBF");

                entity.ToTable("TAgentAddress");

                entity.Property(e => e.IdagentAddress).HasColumnName("IDAgentAddress");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentAddresses)
                    .HasForeignKey(d => d.AgentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentAddress_TAgent");
            });

            modelBuilder.Entity<TagentAuthContact>(entity =>
            {
                entity.HasKey(e => e.AgentAuthContactId)
                    .HasName("PK__TAgentAu__643EEF2F42079D68");

                entity.ToTable("TAgentAuthContact");

                entity.Property(e => e.AgentAuthContactId).HasColumnName("AgentAuthContactID");

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.IsContact).HasDefaultValueSql("((0))");

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentAuthContacts)
                    .HasForeignKey(d => d.AgentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentAuthContact_TAgent");
            });

            modelBuilder.Entity<TagentBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdagentBankAccount)
                    .HasName("PK__TAgentBa__C47B9E10378A0EF5");

                entity.ToTable("TAgentBankAccount");

                entity.HasIndex(e => new { e.AgentId, e.AccountNo }, "IX_TAgentBankAccount")
                    .IsUnique();

                entity.Property(e => e.IdagentBankAccount).HasColumnName("IDAgentBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentBankAccounts)
                    .HasForeignKey(d => d.AgentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentBankAccount_TAgent");

                entity.HasOne(d => d.IdaccountBankTypeNavigation)
                    .WithMany(p => p.TagentBankAccounts)
                    .HasForeignKey(d => d.IdaccountBankType)
                    .HasConstraintName("FK_TAgentBankAccount_TRefAccountBankType");

                entity.HasOne(d => d.IdbankBranchNavigation)
                    .WithMany(p => p.TagentBankAccounts)
                    .HasForeignKey(d => d.IdbankBranch)
                    .HasConstraintName("FK_TAgentBankAccount_TRefBankBranch");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TagentBankAccounts)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentBankAccount_TRefCurrency");
            });

            modelBuilder.Entity<TagentCustomer>(entity =>
            {
                entity.HasKey(e => e.IdagentCustomer);

                entity.ToTable("TAgentCustomer");

                entity.HasIndex(e => new { e.Idcustomer, e.EffDate }, "IX_TAgentCustomer")
                    .IsUnique();

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.OldCodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentCustomers)
                    .HasForeignKey(d => d.AgentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentCustomer_Agent");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TagentCustomers)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentCustomer_Customer");
            });

            modelBuilder.Entity<TagentCustomerDm>(entity =>
            {
                entity.HasKey(e => e.IdagentStructure);

                entity.ToTable("TAgentCustomerDM");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TagentFee>(entity =>
            {
                entity.HasKey(e => new { e.CodeAgent, e.Type, e.Pos })
                    .IsClustered(false);

                entity.ToTable("TAgentFee");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Type)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Pos).HasDefaultValueSql("('0')");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.DayPerYear).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.FeeMonth).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeePeriod)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.FeeRange).HasDefaultValueSql("('0')");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('~')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TagentGroup>(entity =>
            {
                entity.HasKey(e => e.GroupId);

                entity.ToTable("TAgentGroup");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<TagentGroupList>(entity =>
            {
                entity.HasKey(e => new { e.GroupId, e.CodeAgent });

                entity.ToTable("TAgentGroupList");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.TagentGroupLists)
                    .HasForeignKey(d => d.GroupId)
                    .HasConstraintName("FK_TAgentGroupList_TAgentGroup");
            });

            modelBuilder.Entity<TagentHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAgentHistory");

                entity.Property(e => e.ActivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.ActivateDate).HasColumnType("datetime");

                entity.Property(e => e.AgentBrokerFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('AGENT')");

                entity.Property(e => e.AgentType)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('INDIVIDUAL')");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CalcFeeMethod).HasDefaultValueSql("('0')");

                entity.Property(e => e.ChannelType).HasDefaultValueSql("('0')");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CreateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DeactivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.DeactivateDate).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Employee).HasDefaultValueSql("('0')");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GlagentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLAgentCode");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.HomePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("('KTP')");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.InstitutionalType)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsPph).HasColumnName("isPPH");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.LogUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.MailAddress)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCity)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.MailCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.MailZip)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('ROOT')");

                entity.Property(e => e.RejectBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RejectDate).HasColumnType("datetime");

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('MA')");

                entity.Property(e => e.TxFeeMethod).HasDefaultValueSql("('0')");
            });

            modelBuilder.Entity<TagentInstruction>(entity =>
            {
                entity.HasKey(e => e.TagentInstruction1)
                    .HasName("PK__TAgentIn__351C205E4B9107A2");

                entity.ToTable("TAgentInstruction");

                entity.Property(e => e.TagentInstruction1).HasColumnName("TAgentInstruction");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.InstructionReport)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Upaddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("UPAddress");

                entity.Property(e => e.Upcity)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPCity");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.Upfax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPFax");

                entity.Property(e => e.Upname1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName1");

                entity.Property(e => e.Upname2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName2");

                entity.Property(e => e.Upname3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName3");

                entity.Property(e => e.Upphone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("UPPhone");

                entity.Property(e => e.Upzip)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UPZip");

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentInstructions)
                    .HasForeignKey(d => d.AgentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentInstruction_TAgent");
            });

            modelBuilder.Entity<TagentLevel>(entity =>
            {
                entity.HasKey(e => e.AgentLevelId);

                entity.ToTable("TAgentLevel");

                entity.HasIndex(e => e.LevelType, "IX_TAgentLevel")
                    .IsUnique()
                    .HasFilter("([LevelType] IS NOT NULL)");

                entity.Property(e => e.AgentLevelId)
                    .ValueGeneratedNever()
                    .HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentLevelName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TagentNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAgentNew");

                entity.Property(e => e.Column0)
                    .HasMaxLength(50)
                    .HasColumnName("Column 0");

                entity.Property(e => e.Column1)
                    .HasMaxLength(50)
                    .HasColumnName("Column 1");

                entity.Property(e => e.Column2)
                    .HasMaxLength(50)
                    .HasColumnName("Column 2");

                entity.Property(e => e.Column3)
                    .HasMaxLength(50)
                    .HasColumnName("Column 3");

                entity.Property(e => e.Column4)
                    .HasMaxLength(50)
                    .HasColumnName("Column 4");

                entity.Property(e => e.Column5)
                    .HasMaxLength(50)
                    .HasColumnName("Column 5");

                entity.Property(e => e.Column6)
                    .HasMaxLength(50)
                    .HasColumnName("Column 6");

                entity.Property(e => e.Column7)
                    .HasMaxLength(50)
                    .HasColumnName("Column 7");

                entity.Property(e => e.Column8)
                    .HasMaxLength(50)
                    .HasColumnName("Column 8");
            });

            modelBuilder.Entity<TagentProduct>(entity =>
            {
                entity.ToTable("TAgentProduct");

                entity.HasIndex(e => new { e.AgentId, e.Idproduct, e.EffectiveDate }, "IX_TAgentProduct")
                    .IsUnique();

                entity.Property(e => e.TagentProductId).HasColumnName("TAgentProductID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("date")
                    .HasColumnName("effectiveDate");

                entity.Property(e => e.FlagMfee).HasColumnName("FlagMFee");

                entity.Property(e => e.FlagMfee1).HasColumnName("FlagMFee1");

                entity.Property(e => e.FlagOfee).HasColumnName("FlagOFee");

                entity.Property(e => e.FlagSfee).HasColumnName("FlagSFee");

                entity.Property(e => e.FlagSfee1).HasColumnName("FlagSFee1");

                entity.Property(e => e.FromAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FromBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdreportType)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDReportType");

                entity.Property(e => e.MfeeCharges).HasColumnName("MFeeCharges");

                entity.Property(e => e.MfeeName).HasColumnName("MFeeName");

                entity.Property(e => e.RedTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RedTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ToAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ToBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentProducts)
                    .HasForeignKey(d => d.AgentId)
                    .HasConstraintName("FK_TAgentProduct_TAgent");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TagentProducts)
                    .HasForeignKey(d => d.Idproduct)
                    .HasConstraintName("FK_TAgentProduct_TProduct");

                entity.HasOne(d => d.MfeeNameNavigation)
                    .WithMany(p => p.TagentProductMfeeNameNavigations)
                    .HasForeignKey(d => d.MfeeName)
                    .HasConstraintName("FK_TAgentProduct_MFee");

                entity.HasOne(d => d.OtherFeeNameNavigation)
                    .WithMany(p => p.TagentProductOtherFeeNameNavigations)
                    .HasForeignKey(d => d.OtherFeeName)
                    .HasConstraintName("FK_TAgentProduct_OtherFee");

                entity.HasOne(d => d.RedFeeNameNavigation)
                    .WithMany(p => p.TagentProductRedFeeNameNavigations)
                    .HasForeignKey(d => d.RedFeeName)
                    .HasConstraintName("FK_TAgentProduct_RedFee");

                entity.HasOne(d => d.SubsFeeNameNavigation)
                    .WithMany(p => p.TagentProductSubsFeeNameNavigations)
                    .HasForeignKey(d => d.SubsFeeName)
                    .HasConstraintName("FK_TAgentProduct_SubFee");

                entity.HasOne(d => d.SwitchOutFeeNameNavigation)
                    .WithMany(p => p.TagentProductSwitchOutFeeNameNavigations)
                    .HasForeignKey(d => d.SwitchOutFeeName)
                    .HasConstraintName("FK_TAgentProduct_SwtOut");

                entity.HasOne(d => d.SwithcInFeeNameNavigation)
                    .WithMany(p => p.TagentProductSwithcInFeeNameNavigations)
                    .HasForeignKey(d => d.SwithcInFeeName)
                    .HasConstraintName("FK_TAgentProduct_SwtIn");
            });

            modelBuilder.Entity<TagentStructure>(entity =>
            {
                entity.HasKey(e => e.IdagentStructure);

                entity.ToTable("TAgentStructure");

                entity.HasIndex(e => new { e.EffDate, e.TreeCode2 }, "IX_TAgentStructure_EffDate_TreeCode2");

                entity.HasIndex(e => new { e.SysRecStatus, e.EffDate, e.ShellId }, "IX_TAgentStructure_sysRecStatus_EffDate_ShellID_INCLUDE_IDAgentStructure");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdagentStructureJournal).HasColumnName("IDAgentStructureJournal");

                entity.Property(e => e.IdagentStructureParent).HasColumnName("IDAgentStructureParent");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OldIdagentStructure).HasColumnName("OldIDAgentStructure");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SaldoDateBegin).HasColumnType("date");

                entity.Property(e => e.SaldoDateEnd).HasColumnType("date");

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(isnull([TreeCodeParent],'')+isnull([TreeCode],''))", false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AgentLevel)
                    .WithMany(p => p.TagentStructures)
                    .HasForeignKey(d => d.AgentLevelId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentStructure_TAgentLevel");

                entity.HasOne(d => d.IdagentStructureJournalNavigation)
                    .WithMany(p => p.TagentStructures)
                    .HasForeignKey(d => d.IdagentStructureJournal)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAgentStr__IDAge__13DD191C");

                entity.HasOne(d => d.IdagentStructureParentNavigation)
                    .WithMany(p => p.InverseIdagentStructureParentNavigation)
                    .HasForeignKey(d => d.IdagentStructureParent)
                    .HasConstraintName("FK_IDAgentStructureParent_IDAgentStructure");

                entity.HasOne(d => d.OldIdagentStructureNavigation)
                    .WithMany(p => p.InverseOldIdagentStructureNavigation)
                    .HasForeignKey(d => d.OldIdagentStructure)
                    .HasConstraintName("FK_OldIDAgentStructure_IDAgentStructure");
            });

            modelBuilder.Entity<TagentStructureJournal>(entity =>
            {
                entity.HasKey(e => e.IdagentStructureJournal)
                    .HasName("PK__TAgentSt__E22CF49E53F40F8B");

                entity.ToTable("TAgentStructureJournal");

                entity.Property(e => e.IdagentStructureJournal).HasColumnName("IDAgentStructureJournal");

                entity.Property(e => e.DateJournal).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<TagentTree>(entity =>
            {
                entity.HasKey(e => e.IdagentTree);

                entity.ToTable("TAgentTree");

                entity.HasIndex(e => e.TreeCode2, "IX_TAgentTree")
                    .IsUnique();

                entity.Property(e => e.IdagentTree)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAgentTree");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdagentTreeParent).HasColumnName("IDAgentTreeParent");

                entity.Property(e => e.RecCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(isnull([TreeCodeParent],'')+isnull([TreeCode],''))", false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.AgentLevel)
                    .WithMany(p => p.TagentTrees)
                    .HasForeignKey(d => d.AgentLevelId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentTree_TAgentLevel");

                entity.HasOne(d => d.IdagentTreeParentNavigation)
                    .WithMany(p => p.InverseIdagentTreeParentNavigation)
                    .HasForeignKey(d => d.IdagentTreeParent)
                    .HasConstraintName("FK_TAgentTree_TAgentTree");
            });

            modelBuilder.Entity<TagentTreeAgent>(entity =>
            {
                entity.HasKey(e => new { e.IdagentTree, e.EffDate });

                entity.ToTable("TAgentTreeAgent");

                entity.HasIndex(e => new { e.AgentId, e.EffDate }, "IX_TAgentTreeAgent")
                    .IsUnique()
                    .HasFilter("([AgentID] IS NOT NULL)");

                entity.Property(e => e.IdagentTree).HasColumnName("IDAgentTree");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.HasOne(d => d.Agent)
                    .WithMany(p => p.TagentTreeAgents)
                    .HasForeignKey(d => d.AgentId)
                    .HasConstraintName("FK_TAgentTreeAgent_TAgent");

                entity.HasOne(d => d.IdagentTreeNavigation)
                    .WithMany(p => p.TagentTreeAgents)
                    .HasForeignKey(d => d.IdagentTree)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAgentTreeAgent_TAgentTree");
            });

            modelBuilder.Entity<TagentTreeAgentBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAgentTreeAgentBackup");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentTree).HasColumnName("IDAgentTree");
            });

            modelBuilder.Entity<TagentTreeBackup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAgentTreeBackup");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentTree).HasColumnName("IDAgentTree");

                entity.Property(e => e.IdagentTreeParent).HasColumnName("IDAgentTreeParent");

                entity.Property(e => e.RecCreated).HasColumnType("datetime");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TamlWatchlist>(entity =>
            {
                entity.HasKey(e => e.IdtamlWatchlist);

                entity.ToTable("TAML_Watchlist");

                entity.Property(e => e.IdtamlWatchlist).HasColumnName("IDTAML_Watchlist");

                entity.Property(e => e.Category)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NamaTamlWatchlist)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NamaTAML_Watchlist");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TapprovalAssignment>(entity =>
            {
                entity.ToTable("TApprovalAssignment");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ApprovalStateId).HasColumnName("ApprovalStateID");

                entity.Property(e => e.ApprovalTrackingId).HasColumnName("ApprovalTrackingID");

                entity.Property(e => e.AssignedDate).HasColumnType("datetime");

                entity.Property(e => e.AssignedEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssignedUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssigningDate).HasColumnType("datetime");

                entity.Property(e => e.AssigningEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssigningUserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.ApprovalState)
                    .WithMany(p => p.TapprovalAssignments)
                    .HasForeignKey(d => d.ApprovalStateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TApprovalAssignment_TApprovalState");

                entity.HasOne(d => d.ApprovalTracking)
                    .WithMany(p => p.TapprovalAssignments)
                    .HasForeignKey(d => d.ApprovalTrackingId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TApprovalAssignment_TApprovalTracking");
            });

            modelBuilder.Entity<TapprovalState>(entity =>
            {
                entity.ToTable("TApprovalState");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TapprovalTracking>(entity =>
            {
                entity.ToTable("TApprovalTracking");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.BranchId).HasColumnName("BranchID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.NewValue).HasColumnType("text");

                entity.Property(e => e.OldValue).HasColumnType("text");

                entity.Property(e => e.RequestDate).HasColumnType("datetime");

                entity.Property(e => e.RequestType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TableName)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tasset>(entity =>
            {
                entity.HasKey(e => e.Idasset)
                    .HasName("PK__TAsset__1A27925B26795306");

                entity.ToTable("TAsset");

                entity.Property(e => e.Idasset).HasColumnName("IDAsset");

                entity.Property(e => e.Dplk1).HasColumnName("DPLK1");

                entity.Property(e => e.Dplk2).HasColumnName("DPLK2");

                entity.Property(e => e.Dplk3).HasColumnName("DPLK3");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Jht1).HasColumnName("JHT1");

                entity.Property(e => e.Jht2).HasColumnName("JHT2");

                entity.Property(e => e.Jht3).HasColumnName("JHT3");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.Rdc1).HasColumnName("RDC1");

                entity.Property(e => e.Rdc2).HasColumnName("RDC2");

                entity.Property(e => e.Rdc3).HasColumnName("RDC3");

                entity.Property(e => e.Rdpt1).HasColumnName("RDPT1");

                entity.Property(e => e.Rdpt2).HasColumnName("RDPT2");

                entity.Property(e => e.Rdpt3).HasColumnName("RDPT3");

                entity.Property(e => e.Rdpu1).HasColumnName("RDPU1");

                entity.Property(e => e.Rdpu2).HasColumnName("RDPU2");

                entity.Property(e => e.Rdpu3).HasColumnName("RDPU3");

                entity.Property(e => e.Rds1).HasColumnName("RDS1");

                entity.Property(e => e.Rds2).HasColumnName("RDS2");

                entity.Property(e => e.Rds3).HasColumnName("RDS3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TassetClass>(entity =>
            {
                entity.ToTable("TAssetClass");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");

                entity.Property(e => e.Gdpperformance).HasColumnName("GDPPerformance");

                entity.Property(e => e.GdpperformanceIncDec).HasColumnName("GDPPerformanceIncDec");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TproductCategoryId).HasColumnName("TProductCategoryID");
            });

            modelBuilder.Entity<TassetTransfer>(entity =>
            {
                entity.HasKey(e => e.IdassetTransfer)
                    .HasName("PK_TAssetTransfer_1");

                entity.ToTable("TAssetTransfer");

                entity.Property(e => e.IdassetTransfer).HasColumnName("IDAssetTransfer");

                entity.Property(e => e.FromIdcustomer).HasColumnName("FromIDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IdsubAccountTo).HasColumnName("IDSubAccountTo");

                entity.Property(e => e.IdtransactionIn).HasColumnName("IDTransactionIn");

                entity.Property(e => e.IdtransactionOut).HasColumnName("IDTransactionOut");

                entity.Property(e => e.NavDate).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysSettledBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysSettledBy");

                entity.Property(e => e.SysSettledHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysSettledHost");

                entity.Property(e => e.SysSettledTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysSettledTime");

                entity.Property(e => e.SysUnApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysUnApprovedBy");

                entity.Property(e => e.SysUnApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysUnApprovedHost");

                entity.Property(e => e.SysUnApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysUnApprovedTime");

                entity.Property(e => e.ToIdcustomer).HasColumnName("ToIDCustomer");

                entity.Property(e => e.TransferDate).HasColumnType("datetime");

                entity.Property(e => e.TransferType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.FromIdcustomerNavigation)
                    .WithMany(p => p.TassetTransferFromIdcustomerNavigations)
                    .HasForeignKey(d => d.FromIdcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAssetTransfer_TCustomerFrom");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TassetTransfers)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAssetTransfer_TProduct");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.TassetTransfers)
                    .HasForeignKey(d => d.IdsubAccount)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAssetTransfer_TSubAccount");

                entity.HasOne(d => d.ToIdcustomerNavigation)
                    .WithMany(p => p.TassetTransferToIdcustomerNavigations)
                    .HasForeignKey(d => d.ToIdcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAssetTransfer_TCustomerTo");
            });

            modelBuilder.Entity<Tattachment>(entity =>
            {
                entity.ToTable("TAttachment");

                entity.Property(e => e.TattachmentId).HasColumnName("TAttachmentID");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.FileName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Path)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TcustomerId).HasColumnName("TCustomerID");

                entity.Property(e => e.TreportExportId).HasColumnName("TReportExportID");

                entity.Property(e => e.Urlpath)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("URLPath");

                entity.HasOne(d => d.TreportExport)
                    .WithMany(p => p.Tattachments)
                    .HasForeignKey(d => d.TreportExportId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAttachment_TReportExport");
            });

            modelBuilder.Entity<TauditTrail>(entity =>
            {
                entity.HasKey(e => e.TauditTrailId);

                entity.ToTable("TAuditTrail");

                entity.Property(e => e.TauditTrailId).HasColumnName("TAuditTrailID");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.NewValue).IsUnicode(false);

                entity.Property(e => e.OldValue).IsUnicode(false);

                entity.Property(e => e.SysApproveBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApproveBy");

                entity.Property(e => e.SysApproveHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysApproveHost");

                entity.Property(e => e.SysApproveTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApproveTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuijourTableId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TauditTrailLookupMapping>(entity =>
            {
                entity.ToTable("TAuditTrailLookupMapping");

                entity.Property(e => e.TauditTrailLookupMappingId).HasColumnName("TAuditTrailLookupMappingID");

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LookupTabelColumnText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LookupTabelColumnValue)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LookupTableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TabelName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TauditTrailTran>(entity =>
            {
                entity.HasKey(e => e.TauditTrailTransId);

                entity.ToTable("TAuditTrailTrans");

                entity.Property(e => e.TauditTrailTransId).HasColumnName("TAuditTrailTransID");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.NewValue).IsUnicode(false);

                entity.Property(e => e.OldValue).IsUnicode(false);

                entity.Property(e => e.ShadowId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ShadowID");

                entity.Property(e => e.SysApproveBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApproveBy");

                entity.Property(e => e.SysApproveHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysApproveHost");

                entity.Property(e => e.SysApproveTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApproveTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TaummgtFeeHistory>(entity =>
            {
                entity.ToTable("TAUMMgtFeeHistory");

                entity.Property(e => e.TaummgtFeeHistoryId)
                    .ValueGeneratedNever()
                    .HasColumnName("TAUMMgtFeeHistoryID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.FeeDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IdtagentStructure).HasColumnName("IDTAgentStructure");

                entity.Property(e => e.Mgtfee)
                    .HasColumnType("decimal(38, 18)")
                    .HasColumnName("MGTFee");

                entity.Property(e => e.NavDate).HasColumnType("date");

                entity.Property(e => e.NavValue).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.OutStandingUnits).HasColumnType("decimal(38, 18)");
            });

            modelBuilder.Entity<Tauthorized>(entity =>
            {
                entity.HasKey(e => e.AuthorId);

                entity.ToTable("TAuthorized");

                entity.Property(e => e.AuthorId).HasColumnName("AuthorID");

                entity.Property(e => e.AuthorName1)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.AuthorName2)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Position1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Position2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Trans)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Tauthorizer>(entity =>
            {
                entity.ToTable("TAuthorizer");

                entity.Property(e => e.TauthorizerId).HasColumnName("TAuthorizerID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");
            });

            modelBuilder.Entity<TautoDebitGroup>(entity =>
            {
                entity.ToTable("TAutoDebitGroup");

                entity.HasIndex(e => e.GroupName, "IX_TAutoDebitGroup")
                    .IsUnique();

                entity.Property(e => e.TautoDebitGroupId).HasColumnName("TAutoDebitGroupID");

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdbankNavigation)
                    .WithMany(p => p.TautoDebitGroups)
                    .HasForeignKey(d => d.Idbank)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitGroup_TRefBank");

                entity.HasOne(d => d.IdstatusNavigation)
                    .WithMany(p => p.TautoDebitGroups)
                    .HasForeignKey(d => d.Idstatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitGroup_TRefStatus");
            });

            modelBuilder.Entity<TautoDebitMember>(entity =>
            {
                entity.ToTable("TAutoDebitMember");

                entity.HasIndex(e => e.IndexHelper, "IX_TAutoDebitMember")
                    .IsUnique();

                entity.Property(e => e.TautoDebitMemberId).HasColumnName("TAutoDebitMemberID");

                entity.Property(e => e.AccountNameFrom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNameTo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNoFrom)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNoTo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExpiredDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankTypeFrom).HasColumnName("IDAccountBankTypeFrom");

                entity.Property(e => e.IdaccountBankTypeTo).HasColumnName("IDAccountBankTypeTo");

                entity.Property(e => e.IdbankBranchFrom).HasColumnName("IDBankBranchFrom");

                entity.Property(e => e.IdbankBranchTo).HasColumnName("IDBankBranchTo");

                entity.Property(e => e.IdcurrencyFrom).HasColumnName("IDCurrencyFrom");

                entity.Property(e => e.IdcurrencyTo).HasColumnName("IDCurrencyTo");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IndexHelper)
                    .HasMaxLength(83)
                    .IsUnicode(false)
                    .HasComputedColumnSql("((((((CONVERT([varchar](20),[TAutoDebitGroupID],(0))+'|')+CONVERT([varchar](20),isnull([IDSubAccount],''),(0)))+'|')+CONVERT([varchar](20),isnull([IDProduct],''),(0)))+'|')+CONVERT([varchar](20),isnull([IDCustomer],''),(0)))", true);

                entity.Property(e => e.RegistrationDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TautoDebitGroupId).HasColumnName("TAutoDebitGroupID");

                entity.HasOne(d => d.IdaccountBankTypeFromNavigation)
                    .WithMany(p => p.TautoDebitMemberIdaccountBankTypeFromNavigations)
                    .HasForeignKey(d => d.IdaccountBankTypeFrom)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefAccountBankType_From");

                entity.HasOne(d => d.IdaccountBankTypeToNavigation)
                    .WithMany(p => p.TautoDebitMemberIdaccountBankTypeToNavigations)
                    .HasForeignKey(d => d.IdaccountBankTypeTo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefAccountBankType_To");

                entity.HasOne(d => d.IdbankBranchFromNavigation)
                    .WithMany(p => p.TautoDebitMemberIdbankBranchFromNavigations)
                    .HasForeignKey(d => d.IdbankBranchFrom)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefBankBranch_From");

                entity.HasOne(d => d.IdbankBranchToNavigation)
                    .WithMany(p => p.TautoDebitMemberIdbankBranchToNavigations)
                    .HasForeignKey(d => d.IdbankBranchTo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefBankBranch_To");

                entity.HasOne(d => d.IdcurrencyFromNavigation)
                    .WithMany(p => p.TautoDebitMemberIdcurrencyFromNavigations)
                    .HasForeignKey(d => d.IdcurrencyFrom)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefCurrency_From");

                entity.HasOne(d => d.IdcurrencyToNavigation)
                    .WithMany(p => p.TautoDebitMemberIdcurrencyToNavigations)
                    .HasForeignKey(d => d.IdcurrencyTo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefCurrency_To");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TautoDebitMembers)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TAutoDebitMember_TCustomer");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TautoDebitMembers)
                    .HasForeignKey(d => d.Idproduct)
                    .HasConstraintName("FK_TAutoDebitMember_TProduct");

                entity.HasOne(d => d.IdstatusNavigation)
                    .WithMany(p => p.TautoDebitMembers)
                    .HasForeignKey(d => d.Idstatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TRefStatus");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.TautoDebitMembers)
                    .HasForeignKey(d => d.IdsubAccount)
                    .HasConstraintName("FK_TAutoDebitMember_TSubAccount");

                entity.HasOne(d => d.TautoDebitGroup)
                    .WithMany(p => p.TautoDebitMembers)
                    .HasForeignKey(d => d.TautoDebitGroupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoDebitMember_TAutoDebitGroup");
            });

            modelBuilder.Entity<TautoEodlogResult>(entity =>
            {
                entity.ToTable("TAutoEODLogResult");

                entity.Property(e => e.TautoEodlogResultId).HasColumnName("TAutoEODLogResultID");

                entity.Property(e => e.CreatedTime).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ValidTeod).HasColumnName("ValidTEOD");

                entity.Property(e => e.ValidTnav).HasColumnName("ValidTNAV");
            });

            modelBuilder.Entity<TautoEodregisterLog>(entity =>
            {
                entity.HasKey(e => e.TautoSubRegisterLogId)
                    .HasName("PK__TAutoEOD__12A7F8920E394E5F");

                entity.ToTable("TAutoEODRegisterLog");

                entity.Property(e => e.TautoSubRegisterLogId).HasColumnName("TAutoSubRegisterLogID");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(200);
            });

            modelBuilder.Entity<TautoSubRegister>(entity =>
            {
                entity.ToTable("TAutoSubRegister");

                entity.Property(e => e.TautoSubRegisterId).HasColumnName("TAutoSubRegisterID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.FeeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDProductBankAccount");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Remarks).IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("date");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdcustBankAccountNavigation)
                    .WithMany(p => p.TautoSubRegisters)
                    .HasForeignKey(d => d.IdcustBankAccount)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoSubRegister_TCustBankAccount");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TautoSubRegisters)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TAutoSubRegister_TCustomer");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TautoSubRegisters)
                    .HasForeignKey(d => d.Idproduct)
                    .HasConstraintName("FK_TAutoSubRegister_TProduct");

                entity.HasOne(d => d.IdproductBankAccountNavigation)
                    .WithMany(p => p.TautoSubRegisters)
                    .HasForeignKey(d => d.IdproductBankAccount)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoSubRegister_TProductBankAccount");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.TautoSubRegisters)
                    .HasForeignKey(d => d.IdsubAccount)
                    .HasConstraintName("FK_TAutoSubRegister_TSubAccount");
            });

            modelBuilder.Entity<TautoSubRegisterGenerate>(entity =>
            {
                entity.ToTable("TAutoSubRegisterGenerate");

                entity.Property(e => e.TautoSubRegisterGenerateId).HasColumnName("TAutoSubRegisterGenerateID");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.TautoSubRegisterId).HasColumnName("TAutoSubRegisterID");

                entity.Property(e => e.TrensactionDate).HasColumnType("date");

                entity.HasOne(d => d.TautoSubRegister)
                    .WithMany(p => p.TautoSubRegisterGenerates)
                    .HasForeignKey(d => d.TautoSubRegisterId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoSubRegisterGenerate_TAutoSubRegister");
            });

            modelBuilder.Entity<TautoSubRegisterLog>(entity =>
            {
                entity.ToTable("TAutoSubRegisterLog");

                entity.Property(e => e.TautoSubRegisterLogId).HasColumnName("TAutoSubRegisterLogID");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).IsUnicode(false);
            });

            modelBuilder.Entity<TautoSubRegisterLogDetail>(entity =>
            {
                entity.ToTable("TAutoSubRegisterLogDetail");

                entity.Property(e => e.TautoSubRegisterLogDetailId).HasColumnName("TAutoSubRegisterLogDetailID");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).IsUnicode(false);

                entity.Property(e => e.TautoSubRegisterId).HasColumnName("TAutoSubRegisterID");

                entity.Property(e => e.TautoSubRegisterLogId).HasColumnName("TAutoSubRegisterLogID");

                entity.Property(e => e.TtransactionId).HasColumnName("TTransactionID");

                entity.HasOne(d => d.TautoSubRegister)
                    .WithMany(p => p.TautoSubRegisterLogDetails)
                    .HasForeignKey(d => d.TautoSubRegisterId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoSubRegisterLogDetail_TAutoSubRegister");

                entity.HasOne(d => d.TautoSubRegisterLog)
                    .WithMany(p => p.TautoSubRegisterLogDetails)
                    .HasForeignKey(d => d.TautoSubRegisterLogId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TAutoSubRegisterLogDetail_TAutoSubRegisterLog");
            });

            modelBuilder.Entity<TautoSubscriptionInstallmentPending>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAutoSubscriptionInstallmentPending");

                entity.Property(e => e.AccountNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovalUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo");

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.FeeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterId).ValueGeneratedOnAdd();

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.Term)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("term");
            });

            modelBuilder.Entity<TautoSubscriptionRegister>(entity =>
            {
                entity.HasKey(e => e.RegisterId)
                    .HasName("PK__TAutoSubscriptio__20A44798");

                entity.ToTable("TAutoSubscriptionRegister");

                entity.HasIndex(e => e.Idcustomer, "IDX_CIFNO");

                entity.HasIndex(e => new { e.Idcustomer, e.Idproduct }, "IDX_CIFNOProductCode");

                entity.HasIndex(e => e.IsActive, "IDX_IsActive");

                entity.HasIndex(e => e.Idproduct, "IDX_ProductCode");

                entity.Property(e => e.AccountNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovalUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.FeeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.LastModifedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TbalanceCustody>(entity =>
            {
                entity.HasKey(e => e.IdbalanceCustody);

                entity.ToTable("TBalanceCustody");

                entity.Property(e => e.IdbalanceCustody).HasColumnName("IDBalanceCustody");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BRANCH_CODE");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.FirstAlocationDate)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("FIRST_ALOCATION_DATE");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.InvestorNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INVESTOR_NO");

                entity.Property(e => e.JointName)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("JOINT_NAME");

                entity.Property(e => e.MailingAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MAILING_ADDRESS");

                entity.Property(e => e.MailingCity)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("MAILING_CITY");

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NATIONALITY");

                entity.Property(e => e.NavDate).HasColumnType("datetime");

                entity.Property(e => e.NavPerUnit).HasColumnName("NAV_PER_UNIT");

                entity.Property(e => e.NoShares).HasColumnName("NO_SHARES");

                entity.Property(e => e.PostCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("POST_CODE");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbancAssuranceAgent>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceAgent)
                    .HasName("PK__TBancAss__F43F052A5D646191");

                entity.ToTable("TBancAssuranceAgent");

                entity.HasIndex(e => e.AgentCode, "IX_TBancAssuranceAgent_AgentCode")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AgentName).IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("date");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName).IsUnicode(false);

                entity.Property(e => e.CodeAgentBranch)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(rtrim(ltrim((isnull([BranchCode],'')+' ')+isnull([AgentName],''))))", false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbancAssuranceBalanceAium>(entity =>
            {
                entity.HasKey(e => e.TbancAssuranceBalanceAiaId)
                    .HasName("PK__TBancAss__18091D33B572BE43");

                entity.ToTable("TBancAssuranceBalanceAIA");

                entity.Property(e => e.TbancAssuranceBalanceAiaId).HasColumnName("TBancAssuranceBalanceAIA_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Cifpayor)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFPayor");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.HolderName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.InsCompCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InsurancedName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.NextPaymentDate).HasColumnType("date");

                entity.Property(e => e.NoRek)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayorName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralBranch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RiskCommenceDate).HasColumnType("date");

                entity.Property(e => e.SettleAcc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spajno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJNo");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubmissionDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TbancAssuranceBalanceCsi>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceCsi)
                    .HasName("PK__TBancAss__73B9C77A6F211A8B");

                entity.ToTable("TBancAssuranceBalanceCSI");

                entity.Property(e => e.IdbancAssuranceBalanceCsi).HasColumnName("IDBancAssuranceBalanceCSI");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.ClientAccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClientName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Ia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IA");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TbancAssuranceBalanceCsl>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceCsl)
                    .HasName("PK__TBancAss__73B9C77914E054B5");

                entity.ToTable("TBancAssuranceBalanceCSL");

                entity.Property(e => e.IdbancAssuranceBalanceCsl).HasColumnName("IDBancAssuranceBalanceCSL");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TbancAssuranceBalanceMpl>(entity =>
            {
                entity.ToTable("TBancAssuranceBalanceMPL");

                entity.Property(e => e.TbancAssuranceBalanceMplid).HasColumnName("TBancAssuranceBalanceMPLID");

                entity.Property(e => e.Address).HasColumnType("text");

                entity.Property(e => e.Area)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.BeneficialOwner)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Cabang)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.DebitAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FundName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.InsurableInterest)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InsuredPerson)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSeller)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastPaymentDate).HasColumnType("date");

                entity.Property(e => e.NamaSeller)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NoHp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO_HP");

                entity.Property(e => e.NoPolis)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoSpaj)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoSPAJ");

                entity.Property(e => e.PaymentMethode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolder)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Regional)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Riders)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SyDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("syDeletedHost");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotalCoimonthly).HasColumnName("TotalCOIMonthly");

                entity.Property(e => e.TotalCormonthly).HasColumnName("TotalCORMonthly");
            });

            modelBuilder.Entity<TbancAssuranceBalanceMpp>(entity =>
            {
                entity.ToTable("TBancAssuranceBalanceMPP");

                entity.Property(e => e.TbancAssuranceBalanceMppid).HasColumnName("TBancAssuranceBalanceMPPID");

                entity.Property(e => e.Address).HasColumnType("text");

                entity.Property(e => e.Area)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.BeneficialOwner)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Cabang)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.DebitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.InsurableInterest)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.InsuredPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSeller)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastPaymentDate).HasColumnType("date");

                entity.Property(e => e.NamaSeller)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NoHp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NO_HP");

                entity.Property(e => e.NoPolis)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentMethode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyAge)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Regional)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SyDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("syDeletedHost");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TbancAssuranceBalanceSunLife>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceSunLife)
                    .HasName("PK__TBancAss__9A58EB40F09ACA33");

                entity.ToTable("TBancAssuranceBalanceSunLife");

                entity.Property(e => e.IdbancAssuranceBalanceSunLife).HasColumnName("IDBancAssuranceBalanceSunLife");

                entity.Property(e => e.BalanceDt).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idrider)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRider");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.NomorRekening)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TbancAssuranceCustomer>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceCustomer)
                    .HasName("PK__TBancAss__65C4A1DF7A9C77DB");

                entity.ToTable("TBancAssuranceCustomer");

                entity.HasIndex(e => e.Idcustomer, "IX_TBancAssuranceRegistration_IDCustomer")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.ReferalPosition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Position");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceAgentNavigation)
                    .WithMany(p => p.TbancAssuranceCustomers)
                    .HasForeignKey(d => d.IdbancAssuranceAgent)
                    .HasConstraintName("FK_TBancAssuranceRegistration_TBancAssuranceAgent");
            });

            modelBuilder.Entity<TbancAssuranceFeeBaseIncomeMonthlyAium>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia);

                entity.ToTable("TBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia).HasColumnName("IDBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.AgLevel).HasColumnName("ag_level");

                entity.Property(e => e.AgName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ag_name");

                entity.Property(e => e.AgenCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("agen_code");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Area2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA_2");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("area_name");

                entity.Property(e => e.Bbc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Bigbang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_1");

                entity.Property(e => e.Code2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_2");

                entity.Property(e => e.Code3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_3");

                entity.Property(e => e.Component)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasColumnName("eff_date");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.Idproduct2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct_2");

                entity.Property(e => e.Insured)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IsDate)
                    .HasColumnType("date")
                    .HasColumnName("is_date");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title");

                entity.Property(e => e.JobTitle2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title_2");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NamaByStaffing)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Nama_By_Staffing");

                entity.Property(e => e.NbRen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NB_REN");

                entity.Property(e => e.Nett2FeeBased).HasColumnName("nett2_Fee_Based");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.NoSp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no_sp");

                entity.Property(e => e.Policy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyAge).HasColumnName("policy_age");

                entity.Property(e => e.PolicyAgeMonth).HasColumnName("policy_age_month");

                entity.Property(e => e.Policyholder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProprcvDate)
                    .HasColumnType("date")
                    .HasColumnName("proprcv_date");

                entity.Property(e => e.Ptd).HasColumnType("date");

                entity.Property(e => e.Rcd).HasColumnType("date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Reg)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RerateDate)
                    .HasColumnType("date")
                    .HasColumnName("rerate_date");

                entity.Property(e => e.SecyComm).HasColumnName("secy_comm");

                entity.Property(e => e.SecyPrem).HasColumnName("secy_prem");

                entity.Property(e => e.Seg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEG");

                entity.Property(e => e.SglComm).HasColumnName("sgl_comm");

                entity.Property(e => e.SglPrem).HasColumnName("sgl_prem");

                entity.Property(e => e.Sub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUB");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ThiyComm).HasColumnName("thiy_comm");

                entity.Property(e => e.ThiyPrem).HasColumnName("thiy_prem");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbancAssuranceFeeBaseIncomeSunlife>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFeeBaseIncomeSunlife);

                entity.ToTable("TBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeSunlife).HasColumnName("IDBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.AajiExpired)
                    .HasColumnType("date")
                    .HasColumnName("AAJI_Expired");

                entity.Property(e => e.AccountReceive)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Afyp).HasColumnName("AFYP");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BasicPremiumIdr).HasColumnName("BasicPremiumIDR");

                entity.Property(e => e.BranchCodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code_Ref");

                entity.Property(e => e.CifV10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF_V10");

                entity.Property(e => e.Fbi).HasColumnName("FBI");

                entity.Property(e => e.Fbinett).HasColumnName("FBINett");

                entity.Property(e => e.FeebaseforBankGross).HasColumnName("FeebaseforBankGROSS");

                entity.Property(e => e.FeebaseforBankNett).HasColumnName("FeebaseforBankNETT");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReport)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPORT");

                entity.Property(e => e.IaAajiExpired)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_Expired");

                entity.Property(e => e.IaAajiLicense)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_License");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.LeadsGenerator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Leads_Generator");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LgAajiLicenseIsb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LG_AAJI_License_ISB");

                entity.Property(e => e.LocationBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Code");

                entity.Property(e => e.LocationBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Name");

                entity.Property(e => e.MainBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Code");

                entity.Property(e => e.MainBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Name");

                entity.Property(e => e.MainProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NbTopUpPremium).HasColumnName("NB_Top_Up_Premium");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.OriginalCurrency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OriginalReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Original_Received_Date");

                entity.Property(e => e.OwnerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OwnerID");

                entity.Property(e => e.Period)
                    .HasColumnType("date")
                    .HasColumnName("PERIOD");

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.Qualified)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUALIFIED");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Received_Date");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SALES_CODE");

                entity.Property(e => e.SegmentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Segment_Code");

                entity.Property(e => e.Segmentasi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SettledDate)
                    .HasColumnType("date")
                    .HasColumnName("Settled_Date");

                entity.Property(e => e.SlfiIaCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Code");

                entity.Property(e => e.SlfiIaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Name");

                entity.Property(e => e.SmpPlan).HasColumnName("SMP_PLAN");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SunlifeWaiverPremiumCi88).HasColumnName("SunlifeWaiverPremiumCI88");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TopUpPremium).HasColumnName("Top_Up_Premium");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.Up).HasColumnName("UP");

                entity.Property(e => e.UpsunlifeAccidentCare).HasColumnName("UPSunlifeAccidentCare");

                entity.Property(e => e.UpsunlifeCriticalCare).HasColumnName("UPSunlifeCriticalCare");

                entity.Property(e => e.UpsunlifeHospitalSurgicalCare)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPSunlifeHospitalSurgicalCare");

                entity.Property(e => e.UpsunlifeMedicalCare).HasColumnName("UPSunlifeMedicalCare");

                entity.Property(e => e.Vat).HasColumnName("VAT");
            });

            modelBuilder.Entity<TbancAssuranceFund>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFund)
                    .HasName("PK__TBancAss__A00C2721D34683F5");

                entity.ToTable("TBancAssuranceFund");

                entity.HasIndex(e => e.FundCode, "IX_TBancAssuranceFund_FundCode")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.FundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Code");

                entity.Property(e => e.FundCurrency).HasColumnName("Fund_Currency");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Name");

                entity.Property(e => e.FundProportion).HasColumnName("Fund_Proportion");

                entity.Property(e => e.FundType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Type");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TbancAssuranceFundBalance>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFundBalance)
                    .HasName("PK__TBancAss__ABC0B4FE59920F46");

                entity.ToTable("TBancAssuranceFundBalance");

                entity.Property(e => e.IdbancAssuranceFundBalance).HasColumnName("IDBancAssuranceFundBalance");

                entity.Property(e => e.BalanceAmount).HasColumnName("Balance_Amount");

                entity.Property(e => e.BalanceUnit).HasColumnName("Balance_Unit");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.NavDate)
                    .HasColumnType("date")
                    .HasColumnName("NAV_Date");

                entity.Property(e => e.ReportDate)
                    .HasColumnType("date")
                    .HasColumnName("Report_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceFundNavigation)
                    .WithMany(p => p.TbancAssuranceFundBalances)
                    .HasForeignKey(d => d.IdbancAssuranceFund)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceFundBalance_TBancAssuranceFund");

                entity.HasOne(d => d.IdbancAssurancePolicyNavigation)
                    .WithMany(p => p.TbancAssuranceFundBalances)
                    .HasForeignKey(d => d.IdbancAssurancePolicy)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceFundBalance_TBancAssurancePolicy");
            });

            modelBuilder.Entity<TbancAssuranceGenerateHistory>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceGenerateHistory);

                entity.ToTable("TBancAssuranceGenerateHistory");

                entity.Property(e => e.IdbancAssuranceGenerateHistory).HasColumnName("IDBancAssuranceGenerateHistory");

                entity.Property(e => e.FileName)
                    .IsUnicode(false)
                    .HasColumnName("File Name");

                entity.Property(e => e.Remarks).IsUnicode(false);
            });

            modelBuilder.Entity<TbancAssurancePartner>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePartner)
                    .HasName("PK__TBancAss__F2697DFEE9F3E777");

                entity.ToTable("TBancAssurancePartner");

                entity.HasIndex(e => e.PartnerCode, "IX_TBancAssurancePartner_Insurance_Partner_Code")
                    .IsUnique();

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.Address1)
                    .IsUnicode(false)
                    .HasColumnName("Address_1");

                entity.Property(e => e.Address2)
                    .IsUnicode(false)
                    .HasColumnName("Address_2");

                entity.Property(e => e.Address3)
                    .IsUnicode(false)
                    .HasColumnName("Address_3");

                entity.Property(e => e.AssurancePartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Assurance_PartnerCode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Email_Address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdpartnerCategory).HasColumnName("IDPartnerCategory");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Phone");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Office_Phone");

                entity.Property(e => e.PartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Code");

                entity.Property(e => e.PartnerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Name");

                entity.Property(e => e.PersonName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Person_Name");

                entity.Property(e => e.PostalCode).HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbancAssurancePolicy>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePolicy);

                entity.ToTable("TBancAssurancePolicy");

                entity.HasIndex(e => e.Idcustomer, "IX_TBancAssurancePolicy_IDCustomer");

                entity.HasIndex(e => e.PolisNo, "IX_TBancAssurancePolicy_Polis_No")
                    .IsUnique();

                entity.HasIndex(e => e.SpajNo, "IX_TBancAssurancePolicy_SPAJ_No")
                    .IsUnique();

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BasicPremium).HasColumnName("Basic_Premium");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_Date");

                entity.Property(e => e.EndOfCoverage)
                    .HasColumnType("date")
                    .HasColumnName("End_of_Coverage");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InforceDate)
                    .HasColumnType("date")
                    .HasColumnName("Inforce_Date");

                entity.Property(e => e.InsuredDob)
                    .HasColumnType("date")
                    .HasColumnName("Insured_Dob");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.InvestPremium).HasColumnName("Invest_Premium");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Cabang");

                entity.Property(e => e.Note)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentFrequency).HasColumnName("Payment_Frequency");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("date")
                    .HasColumnName("Receive_Date");

                entity.Property(e => e.SpajNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJ_No");

                entity.Property(e => e.StatusPolis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Polis");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssurancePolicies)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .HasConstraintName("FK_TBancAssurancePolicy_TBancAssuranceProduct");
            });

            modelBuilder.Entity<TbancAssurancePolicyAium>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePolicyAia)
                    .HasName("PK__TBancAss__3FFD89A31EF56F99");

                entity.ToTable("TBancAssurancePolicyAIA");

                entity.HasIndex(e => new { e.IssuedDate, e.PolisNo }, "IX_TBancAssurancePolicyAIA_IssuedDate_PolisNo")
                    .IsUnique();

                entity.Property(e => e.IdbancAssurancePolicyAia).HasColumnName("IDBancAssurancePolicyAIA");

                entity.Property(e => e.Anp).HasColumnName("ANP");

                entity.Property(e => e.ApprovedSpdate)
                    .HasColumnType("date")
                    .HasColumnName("ApprovedSPDate");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bbcname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BBCName");

                entity.Property(e => e.Bbcpolis)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BBCPolis");

                entity.Property(e => e.CaraBayar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClientFA");

                entity.Property(e => e.ClientRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Distrik)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntrySpdate)
                    .HasColumnType("date")
                    .HasColumnName("EntrySPDate");

                entity.Property(e => e.InitialBranch)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabangRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KodeFA");

                entity.Property(e => e.KodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSpv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KodeSPV");

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mtu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MTU");

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabangRef)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaFa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NamaFA");

                entity.Property(e => e.NamaPemegangPolis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaRef)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaTertanggung)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NiksalesSode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIKSalesSode");

                entity.Property(e => e.NoCin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoCIN");

                entity.Property(e => e.NoRekening)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NoSp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoSP");

                entity.Property(e => e.PaymentFrequency)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyPlan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProposedDate).HasColumnType("date");

                entity.Property(e => e.Ptddate)
                    .HasColumnType("date")
                    .HasColumnName("PTDDate");

                entity.Property(e => e.Rcddate)
                    .HasColumnType("date")
                    .HasColumnName("RCDDate");

                entity.Property(e => e.Rekening)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StatusSurrenderDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tmk)
                    .HasColumnType("date")
                    .HasColumnName("TMK");
            });

            modelBuilder.Entity<TbancAssurancePolicyBalance>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePolicyBalance)
                    .HasName("PK__TBancAss__7CEC246E67077386");

                entity.ToTable("TBancAssurancePolicyBalance");

                entity.Property(e => e.IdbancAssurancePolicyBalance).HasColumnName("IDBancAssurancePolicyBalance");

                entity.Property(e => e.AkumulasiFeeBaseIncome).HasColumnName("Akumulasi_Fee_Base_Income");

                entity.Property(e => e.AkumulasiPremiSejakAwal).HasColumnName("Akumulasi_Premi_Sejak_Awal");

                entity.Property(e => e.BasicPremium).HasColumnName("Basic_Premium");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_Date");

                entity.Property(e => e.EndOfCoverage)
                    .HasColumnType("date")
                    .HasColumnName("End_of_Coverage");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.InforceDate)
                    .HasColumnType("date")
                    .HasColumnName("Inforce_Date");

                entity.Property(e => e.InvestPremium).HasColumnName("Invest_Premium");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Cabang");

                entity.Property(e => e.LastPayment)
                    .HasColumnType("date")
                    .HasColumnName("Last_Payment");

                entity.Property(e => e.NextPaymentDate)
                    .HasColumnType("date")
                    .HasColumnName("Next_Payment_Date");

                entity.Property(e => e.Note)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("date")
                    .HasColumnName("Receive_Date");

                entity.Property(e => e.StatusPolis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Polis");

                entity.Property(e => e.SumInsured).HasColumnName("Sum_Insured");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotPertanggunganDibayar).HasColumnName("Tot_Pertanggungan_Dibayar");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.HasOne(d => d.IdbancAssurancePolicyNavigation)
                    .WithMany(p => p.TbancAssurancePolicyBalances)
                    .HasForeignKey(d => d.IdbancAssurancePolicy)
                    .HasConstraintName("FK_TBancAssurancePolicyBalance_TBancAssurancePolicy");
            });

            modelBuilder.Entity<TbancAssuranceProduct>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProduct)
                    .HasName("PK__TBancAss__894A26F20B946FEC");

                entity.ToTable("TBancAssuranceProduct");

                entity.HasIndex(e => e.ProductCode, "IX_TBancAssuranceProduct_Product_Code")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ActiveFlag).HasColumnName("Active_Flag");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.BusinessModel).HasColumnName("Business_Model");

                entity.Property(e => e.CutOff)
                    .HasColumnType("datetime")
                    .HasColumnName("Cut_Off");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.InceptionDate)
                    .HasColumnType("date")
                    .HasColumnName("Inception_Date");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SemiAnually).HasColumnName("Semi_Anually");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");

                entity.HasOne(d => d.IdbancAssurancePartnerNavigation)
                    .WithMany(p => p.TbancAssuranceProducts)
                    .HasForeignKey(d => d.IdbancAssurancePartner)
                    .HasConstraintName("FK_TBancAssuranceProduct_TBancAssurancePartner");
            });

            modelBuilder.Entity<TbancAssuranceProductBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProductBankAccount);

                entity.ToTable("TBancAssuranceProductBankAccount");

                entity.Property(e => e.IdbancAssuranceProductBankAccount).HasColumnName("IDBancAssuranceProductBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssuranceProductBankAccounts)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceProductBankAccount_TBancAssuranceProduct");
            });

            modelBuilder.Entity<TbancAssuranceProductFee>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProductFee);

                entity.ToTable("TBancAssuranceProductFee");

                entity.Property(e => e.IdbancAssuranceProductFee).HasColumnName("IDBancAssuranceProductFee");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssuranceProductFees)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceProductFee_TBancAssuranceProduct");
            });

            modelBuilder.Entity<TbancAssuranceProductFund>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProductFund);

                entity.ToTable("TBancAssuranceProductFund");

                entity.Property(e => e.IdbancAssuranceProductFund).HasColumnName("IDBancAssuranceProductFund");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceFundNavigation)
                    .WithMany(p => p.TbancAssuranceProductFunds)
                    .HasForeignKey(d => d.IdbancAssuranceFund)
                    .HasConstraintName("FK_TBancAssuranceProductFund_TBancAssuranceFund");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssuranceProductFunds)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceProductFund_TBancAssuranceProduct");
            });

            modelBuilder.Entity<TbancAssuranceProductRider>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProductRider)
                    .HasName("PK__TBancAss__8D4BAFAFDD21D9BE");

                entity.ToTable("TBancAssuranceProductRider");

                entity.Property(e => e.IdbancAssuranceProductRider).HasColumnName("IDBancAssuranceProductRider");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssuranceProductRiders)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceProductRider_TBancAssuranceProduct1");

                entity.HasOne(d => d.IdbancAssuranceRiderNavigation)
                    .WithMany(p => p.TbancAssuranceProductRiders)
                    .HasForeignKey(d => d.IdbancAssuranceRider)
                    .HasConstraintName("FK_TBancAssuranceProductRider_TBancAssuranceRider");
            });

            modelBuilder.Entity<TbancAssuranceReferral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBancAssuranceReferral");

                entity.Property(e => e.Completename)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COMPLETENAME");

                entity.Property(e => e.Coorporatetittle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COORPORATETITTLE");

                entity.Property(e => e.Costcenter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COSTCENTER");

                entity.Property(e => e.Egdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EGDESC");

                entity.Property(e => e.Employeegroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEEGROUP");

                entity.Property(e => e.Employeesubgroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEESUBGROUP");

                entity.Property(e => e.Eselon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESELON");

                entity.Property(e => e.Esgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ESGDESC");

                entity.Property(e => e.IdbancAssuranceReferral)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDBancAssuranceReferral");

                entity.Property(e => e.Jg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JG");

                entity.Property(e => e.Job)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB");

                entity.Property(e => e.Jobabbr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOBABBR");

                entity.Property(e => e.Jobdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("JOBDESC");

                entity.Property(e => e.Kelompokjabatan)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("KELOMPOKJABATAN");

                entity.Property(e => e.Kodebranch)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KODEBRANCH");

                entity.Property(e => e.Mctext)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("MCTEXT");

                entity.Property(e => e.NoTelp1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Organization)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ORGANIZATION");

                entity.Property(e => e.Orgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ORGDESC");

                entity.Property(e => e.Padesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PADESC");

                entity.Property(e => e.Payareadesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYAREADESC");

                entity.Property(e => e.Payrollarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLAREA");

                entity.Property(e => e.Pernr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERNR");

                entity.Property(e => e.Personnelarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELAREA");

                entity.Property(e => e.Personnelsubarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELSUBAREA");

                entity.Property(e => e.Pg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSITION");

                entity.Property(e => e.Positiondesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("POSITIONDESC");

                entity.Property(e => e.Psadesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PSADESC");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TbancAssuranceRegistration>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceRegistration)
                    .HasName("PK__TBancAss__65C4A1DFFE0B34E9");

                entity.ToTable("TBancAssuranceRegistration");

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Name");

                entity.Property(e => e.CustomerCif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Cif");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Name");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Code");

                entity.Property(e => e.SalesName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TbancAssuranceRegistrationDetail>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceRegistrationDetail)
                    .HasName("PK__TBancAss__AE705DD76EB9141F");

                entity.ToTable("TBancAssuranceRegistrationDetail");

                entity.Property(e => e.IdbancAssuranceRegistrationDetail).HasColumnName("IDBancAssuranceRegistrationDetail");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.InsuranceCompany)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insurance_Company");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RiderPremium)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TbancAssuranceRider>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceRider);

                entity.ToTable("TBancAssuranceRider");

                entity.HasIndex(e => e.RiderCode, "IX_TBancAssuranceRider_Rider_Code")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Code");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TbancAssuranceRiderPremi>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceRiderPremi)
                    .HasName("PK__TBancAss__F2E8641710820115");

                entity.ToTable("TBancAssuranceRiderPremi");

                entity.Property(e => e.IdbancAssuranceRiderPremi).HasColumnName("IDBancAssuranceRiderPremi");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UangPertanggungan).HasColumnName("Uang_Pertanggungan");

                entity.HasOne(d => d.IdbancAssurancePolicyNavigation)
                    .WithMany(p => p.TbancAssuranceRiderPremis)
                    .HasForeignKey(d => d.IdbancAssurancePolicy)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRiderPremi_TBancAssurancePolicy");

                entity.HasOne(d => d.IdbancAssuranceRiderNavigation)
                    .WithMany(p => p.TbancAssuranceRiderPremis)
                    .HasForeignKey(d => d.IdbancAssuranceRider)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRiderPremi_TBancAssuranceRider");
            });

            modelBuilder.Entity<TbancAssuranceSettlementResponseHistory>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSettlementResponseHistory)
                    .HasName("PK__TBancAss__54101FD03CDC7927");

                entity.ToTable("TBancAssuranceSettlementResponseHistory");

                entity.Property(e => e.IdbancAssuranceSettlementResponseHistory).HasColumnName("IDBancAssuranceSettlementResponseHistory");

                entity.Property(e => e.BulanData)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Bulan_Data");

                entity.Property(e => e.KodeBiller)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Biller");

                entity.Property(e => e.Nominal)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.RekeningDebit)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rekening_Debit");

                entity.Property(e => e.RekeningTujuan)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rekening_Tujuan");

                entity.Property(e => e.StatusTrans)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Status_Trans");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.TransDate)
                    .HasColumnType("date")
                    .HasColumnName("Trans_Date");
            });

            modelBuilder.Entity<TbancAssuranceSpaj>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSpaj)
                    .HasName("PK__TBancAss__AE705DD78D3BDDDC");

                entity.ToTable("TBancAssuranceSPAJ");

                entity.HasIndex(e => e.SpajNo, "IX_TBancAssuranceRegistrationDetail_SPAJ_No")
                    .IsUnique();

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.AgentId).HasColumnName("agentID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.PremiumFrequency).HasColumnName("Premium_frequency");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SPAJ_No");

                entity.Property(e => e.Spajstatus)
                    .IsUnicode(false)
                    .HasColumnName("SPAJStatus");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.HasOne(d => d.IdbancAssuranceProductNavigation)
                    .WithMany(p => p.TbancAssuranceSpajs)
                    .HasForeignKey(d => d.IdbancAssuranceProduct)
                    .HasConstraintName("FK_TBancAssuranceRegistrationDetail_TBancAssuranceProduct");
            });

            modelBuilder.Entity<TbancAssuranceSpajfund>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSpajfund)
                    .HasName("PK_TBancAssuranceRegistrationFund");

                entity.ToTable("TBancAssuranceSPAJFund");

                entity.Property(e => e.IdbancAssuranceSpajfund).HasColumnName("IDBancAssuranceSPAJFund");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.NavDate)
                    .HasColumnType("date")
                    .HasColumnName("NAV_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceFundNavigation)
                    .WithMany(p => p.TbancAssuranceSpajfunds)
                    .HasForeignKey(d => d.IdbancAssuranceFund)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRegistrationFund_TBancAssuranceFund");

                entity.HasOne(d => d.IdbancAssuranceSpajNavigation)
                    .WithMany(p => p.TbancAssuranceSpajfunds)
                    .HasForeignKey(d => d.IdbancAssuranceSpaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRegistrationFund_TBancAssuranceRegistrationDetail");
            });

            modelBuilder.Entity<TbancAssuranceSpajrider>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSpajrider)
                    .HasName("PK_TBancAssuranceRegistrationRider");

                entity.ToTable("TBancAssuranceSPAJRider");

                entity.Property(e => e.IdbancAssuranceSpajrider).HasColumnName("IDBancAssuranceSPAJRider");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.HasOne(d => d.IdbancAssuranceRiderNavigation)
                    .WithMany(p => p.TbancAssuranceSpajriders)
                    .HasForeignKey(d => d.IdbancAssuranceRider)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRegistrationRider_TBancAssuranceRider");

                entity.HasOne(d => d.IdbancAssuranceSpajNavigation)
                    .WithMany(p => p.TbancAssuranceSpajriders)
                    .HasForeignKey(d => d.IdbancAssuranceSpaj)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceRegistrationRider_TBancAssuranceRegistrationDetail");
            });

            modelBuilder.Entity<TbancAssuranceTransaction>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceTransaction)
                    .HasName("PK__TBancAss__6103A3B4ED0A09B6");

                entity.ToTable("TBancAssuranceTransaction");

                entity.Property(e => e.IdbancAssuranceTransaction).HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BillerCode)
                    .HasMaxLength(100)
                    .HasColumnName("Biller_Code");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Currency_Code");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.KodeBiller)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Biller");

                entity.Property(e => e.PaymentNo).HasColumnName("Payment_No");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Reference_No");

                entity.Property(e => e.SettlementAmount).HasColumnName("Settlement_Amount");

                entity.Property(e => e.SettlementDate)
                    .HasColumnType("date")
                    .HasColumnName("Settlement_Date");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDate1)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");

                entity.HasOne(d => d.IdbancAssurancePolicyNavigation)
                    .WithMany(p => p.TbancAssuranceTransactions)
                    .HasForeignKey(d => d.IdbancAssurancePolicy)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TBancAssuranceTransaction_TBancAssurancePolicy1");
            });

            modelBuilder.Entity<TbancassuranceBalanceManulife>(entity =>
            {
                entity.HasKey(e => e.IdbancassuranceBalanceManulife);

                entity.ToTable("TBancassuranceBalanceManulife");

                entity.Property(e => e.IdbancassuranceBalanceManulife).HasColumnName("IDBancassuranceBalanceManulife");

                entity.Property(e => e.Cifv10)
                    .HasMaxLength(14)
                    .HasColumnName("CIFV10")
                    .IsFixedLength();

                entity.Property(e => e.Currency)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.JatuhTempoPolis).HasColumnType("date");

                entity.Property(e => e.Navcurrent).HasColumnName("NAVCurrent");

                entity.Property(e => e.Navopen).HasColumnName("NAVOpen");

                entity.Property(e => e.PemegangPolis)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Produk)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubmittedDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TanggalSaldo).HasColumnType("date");

                entity.Property(e => e.Tertanggung)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TbankAccount>(entity =>
            {
                entity.HasKey(e => new { e.Idbank, e.AccountNo });

                entity.ToTable("TBankAccount");

                entity.Property(e => e.Idbank)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDBank");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdaccountBankType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDAccountBankType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency")
                    .HasDefaultValueSql("('IDR')");
            });

            modelBuilder.Entity<Tblokir>(entity =>
            {
                entity.HasKey(e => e.Idblokir);

                entity.ToTable("TBlokir");

                entity.Property(e => e.Idblokir)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBlokir");

                entity.Property(e => e.AuthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.AuthUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.TipeBlokir)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UnitBlokir).HasDefaultValueSql("((0))");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdstatusNavigation)
                    .WithMany(p => p.Tblokirs)
                    .HasForeignKey(d => d.Idstatus)
                    .HasConstraintName("FK_TBlokir_TRefStatus");
            });

            modelBuilder.Entity<TblokirHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TBlokirHistory");

                entity.Property(e => e.AuthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.AuthUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.TipeBlokir)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('permanen')");

                entity.Property(e => e.UnitBlokir).HasDefaultValueSql("((0))");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<Tbroker>(entity =>
            {
                entity.HasKey(e => e.CodeBroker)
                    .HasName("PK_TBroker24")
                    .IsClustered(false);

                entity.ToTable("TBroker");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1980')");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Email)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Employee).HasDefaultValueSql("((0))");

                entity.Property(e => e.Fax)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomePhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCity)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCountry)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailZip)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Mothername)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('MA')")
                    .HasComment("Possible values: MALE or FEMALE");

                entity.Property(e => e.TypeBroker)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('INDIVIDUAL')")
                    .HasComment("Possible values: INDIVIDUAL or INSTITUTION");
            });

            modelBuilder.Entity<TcallbackCustomerHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCallbackCustomerHistory");

                entity.Property(e => e.CallbackStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.KycCounter).HasColumnName("KYC_Counter");

                entity.Property(e => e.PicCallCenter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PIC_CallCenter");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedTime).HasColumnType("datetime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysRecStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysUploadBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysUploadHost)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SysUploadTime).HasColumnType("datetime");

                entity.Property(e => e.TcallbackCustomerHistoryId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TCallbackCustomerHistoryID");
            });

            modelBuilder.Entity<Tcompany>(entity =>
            {
                entity.HasKey(e => e.Idcompany);

                entity.ToTable("TCompany");

                entity.HasIndex(e => e.CompanyCode, "IX_TCompany")
                    .IsUnique();

                entity.Property(e => e.Idcompany).HasColumnName("IDCompany");

                entity.Property(e => e.Address1)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeAgenPenjual)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TrefSinvestParticipantTypeId).HasColumnName("TRefSInvestParticipantTypeID");

                entity.HasOne(d => d.TrefSinvestParticipantType)
                    .WithMany(p => p.Tcompanies)
                    .HasForeignKey(d => d.TrefSinvestParticipantTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCompany_TCompany");
            });

            modelBuilder.Entity<Tconfig>(entity =>
            {
                entity.ToTable("TConfig");

                entity.HasIndex(e => e.Key, "IX_TConfig")
                    .IsUnique();

                entity.Property(e => e.TconfigId).HasColumnName("TConfigID");

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Key)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("('SYSTEM')");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.Value)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.HasOne(d => d.TconfigDataType)
                    .WithMany(p => p.Tconfigs)
                    .HasForeignKey(d => d.TconfigDataTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TConfig_TConfigDataType");
            });

            modelBuilder.Entity<TconfigBtpn>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TConfigBTPN");

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Key)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.TconfigId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TConfigID");

                entity.Property(e => e.Value)
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TconfigDataType>(entity =>
            {
                entity.ToTable("TConfigDataType");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.DataTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tcoupon>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.Couponseq });

                entity.ToTable("TCoupon");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CouponRate).HasDefaultValueSql("((0))");

                entity.Property(e => e.Interval)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.RateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");
            });

            modelBuilder.Entity<TcouponFreq>(entity =>
            {
                entity.ToTable("TCouponFreq");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");

                entity.Property(e => e.CouponFreqCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tcpfquotum>(entity =>
            {
                entity.HasKey(e => e.TcpfquotaId);

                entity.ToTable("TCPFQuota");

                entity.Property(e => e.TcpfquotaId).HasColumnName("TCPFQuotaID");

                entity.Property(e => e.AgentIdfrom).HasColumnName("AgentIDFrom");

                entity.Property(e => e.AgentIdto).HasColumnName("AgentIDTo");

                entity.Property(e => e.CpfquotaTrxType).HasColumnName("CPFQuotaTrxType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.Tcpfquota)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCPFQuota_TProduct");
            });

            modelBuilder.Entity<TcustBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdcustBankAccount)
                    .HasName("PK__TCustBan__E154EE2629660CD0");

                entity.ToTable("TCustBankAccount");

                entity.HasIndex(e => new { e.Idcustomer, e.AccountNo }, "IX_TCustBankAccount");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsMandatory).HasDefaultValueSql("((0))");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdaccountBankTypeNavigation)
                    .WithMany(p => p.TcustBankAccounts)
                    .HasForeignKey(d => d.IdaccountBankType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustBankAccount_TRefAccountBankType");

                entity.HasOne(d => d.IdbankBranchNavigation)
                    .WithMany(p => p.TcustBankAccounts)
                    .HasForeignKey(d => d.IdbankBranch)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustBankAccount_TRefBankBranch");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TcustBankAccounts)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustBankAccount_TRefCurrency");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustBankAccounts)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustBankAccount_TCustomer");
            });

            modelBuilder.Entity<TcustBankAccountProduct>(entity =>
            {
                entity.ToTable("TCustBankAccountProduct");

                entity.HasIndex(e => e.AccountNo, "IDX_CBAPAccountNo");

                entity.HasIndex(e => e.ProductCode, "IDX_CBAPProductCode");

                entity.HasIndex(e => e.UnitHolderIdno, "IDX_CBAPUnitHolderIDNo");

                entity.HasIndex(e => new { e.UnitHolderIdno, e.ProductCode, e.AccountNo, e.Sequence }, "IDX_CBAP_IDX1");

                entity.HasIndex(e => new { e.UnitHolderIdno, e.ProductCode, e.AccountNo }, "IDX_CBAP_IDX2");

                entity.HasIndex(e => new { e.UnitHolderIdno, e.ProductCode, e.AccountNo }, "UniqAccount")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('sys')");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Sequence).HasDefaultValueSql("((0))");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TcustCifhistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustCIFHistory");

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo");

                entity.Property(e => e.SetDate).HasColumnType("datetime");

                entity.Property(e => e.SetUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TcustPerson>(entity =>
            {
                entity.HasKey(e => new { e.UnitHolderIdno, e.NamePerson });

                entity.ToTable("TCustPerson");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NamePerson)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.PhonePerson)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TypePerson)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TcustProfile>(entity =>
            {
                entity.HasKey(e => new { e.UnitHolderIdNo, e.QuestionId });

                entity.ToTable("TCustProfile");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.OptionId).HasColumnName("OptionID");
            });

            modelBuilder.Entity<TcustProfileAnswer>(entity =>
            {
                entity.HasKey(e => e.IdcustProfileAnswer)
                    .HasName("PK__TCustPro__53B46EBF4A3CF0B6");

                entity.ToTable("TCustProfileAnswer");

                entity.Property(e => e.IdcustProfileAnswer).HasColumnName("IDCustProfileAnswer");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustProfileAnswers)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustProfileAnswer_TCustomer");

                entity.HasOne(d => d.QuestionOption)
                    .WithMany(p => p.TcustProfileAnswers)
                    .HasForeignKey(d => d.QuestionOptionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustProfileAnswer_TRefProfileQuestionOption");
            });

            modelBuilder.Entity<TcustProfileExt>(entity =>
            {
                entity.HasKey(e => e.UnitHolderIdno);

                entity.ToTable("TCustProfileExt");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.BatchCode)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("datetime");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.IdCustomer)
                    .HasColumnName("idCustomer")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.InsuranceDateFinish).HasColumnType("datetime");

                entity.Property(e => e.InsuranceDateStart).HasColumnType("datetime");

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.JobName)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.NextPostingDate).HasColumnType("datetime");

                entity.Property(e => e.PaidToDate).HasColumnType("datetime");

                entity.Property(e => e.PercentageRd).HasColumnName("PercentageRD");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PolisStatus)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.PostingDate).HasColumnType("datetime");

                entity.Property(e => e.PremiumRd).HasColumnName("PremiumRD");

                entity.Property(e => e.PremiumType)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RecordCode)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.UserProfile)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tcustomer>(entity =>
            {
                entity.HasKey(e => e.Idcustomer);

                entity.ToTable("TCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Aidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AIDNo");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Bcnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCNumber");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1970')");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('R')");

                entity.Property(e => e.CloseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N/A')");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocAkta)
                    .HasDefaultValueSql("('1')")
                    .HasComment("1 Mean OK, Null otherwise");

                entity.Property(e => e.DocAttorney)
                    .HasDefaultValueSql("('1')")
                    .HasComment("1 Mean OK, Null otherwise");

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("('1')")
                    .HasComment("1 Mean OK, NULL otherwise");

                entity.Property(e => e.DocNotary)
                    .HasDefaultValueSql("('1')")
                    .HasComment("1 Mean OK, Null otherwise");

                entity.Property(e => e.DocNpwp)
                    .HasColumnName("DocNPWP")
                    .HasDefaultValueSql("('1')")
                    .HasComment("1 Mean OK, Null otherwise");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EstablishDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false)
                    .HasComputedColumnSql("(rtrim(ltrim((rtrim(ltrim((isnull([FirstName],'')+' ')+isnull([MiddleName],'')))+' ')+isnull([LastName],''))))", false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("('RE')");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorExpiredDateOfSupplementaryDocs).HasColumnType("datetime");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('I')")
                    .HasComment("Possible values are \"INDIVIDUAL\" AND \"CORPORATE\"");

                entity.Property(e => e.InvestorTypeOfSupplementaryDocs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsCorpBond).HasColumnName("isCorpBond");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.IsGovBond).HasColumnName("isGovBond");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.IsMf).HasColumnName("isMF");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MinUnitHold).HasDefaultValueSql("('0')");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName)
                    .HasMaxLength(375)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OpDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OpDateCorpBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateGovBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateMf)
                    .HasColumnType("datetime")
                    .HasColumnName("OpDateMF");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Sidcorp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDCorp");

                entity.Property(e => e.SidcorpGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDCorpGeneratedDate");

                entity.Property(e => e.SidgeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGeneratedDate");

                entity.Property(e => e.Sidgov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDGov");

                entity.Property(e => e.SidgovGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGovGeneratedDate");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SourceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNoStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubRekNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.HasOne(d => d.Profile)
                    .WithMany(p => p.Tcustomers)
                    .HasForeignKey(d => d.ProfileId)
                    .HasConstraintName("FK_TCustomer_TRefProfile");
            });

            modelBuilder.Entity<Tcustomer20200901Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomer_20200901_BAK");

                entity.Property(e => e.Aidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AIDNo");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Bcnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCNumber");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.Idcustomer)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorExpiredDateOfSupplementaryDocs).HasColumnType("datetime");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorTypeOfSupplementaryDocs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsCorpBond).HasColumnName("isCorpBond");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.IsGovBond).HasColumnName("isGovBond");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.IsMf).HasColumnName("isMF");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.OpDateCorpBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateGovBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateMf)
                    .HasColumnType("datetime")
                    .HasColumnName("OpDateMF");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Sidcorp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDCorp");

                entity.Property(e => e.SidcorpGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDCorpGeneratedDate");

                entity.Property(e => e.SidgeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGeneratedDate");

                entity.Property(e => e.Sidgov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDGov");

                entity.Property(e => e.SidgovGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGovGeneratedDate");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNoStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubRekNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TcustomerAddress>(entity =>
            {
                entity.HasKey(e => e.IdcustomerAddress)
                    .HasName("PK__TCustome__9AE62CD839476EDE");

                entity.ToTable("TCustomerAddress");

                entity.Property(e => e.IdcustomerAddress).HasColumnName("IDCustomerAddress");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DistanceToBranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.District)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Neighborhood)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneExtension)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubDistrict)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerAddresses)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerAddress_TCustomer");
            });

            modelBuilder.Entity<TcustomerAddress20200921Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerAddress_20200921_BAK");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DistanceToBranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.District)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerAddress)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDCustomerAddress");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Neighborhood)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneExtension)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubDistrict)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TcustomerAuthContact>(entity =>
            {
                entity.HasKey(e => e.IdcustomerAuthContact);

                entity.ToTable("TCustomerAuthContact");

                entity.Property(e => e.IdcustomerAuthContact).HasColumnName("IDCustomerAuthContact");

                entity.Property(e => e.Address)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('SYSTEM')");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(767)
                    .IsUnicode(false)
                    .HasComputedColumnSql("((isnull([FirstName]+' ','')+isnull([MiddleName]+' ',''))+isnull([LastName],''))", false);

                entity.Property(e => e.IdauthorizationType).HasColumnName("IDAuthorizationType");

                entity.Property(e => e.Idcity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCity");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer)
                    .HasColumnName("IDCustomer")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idprovinsi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDProvinsi");

                entity.Property(e => e.IdregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IDRegistrationDate");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoID");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Npwpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPDate");

                entity.Property(e => e.OfficeNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerAuthContacts)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerAuthContact_TCustomer");
            });

            modelBuilder.Entity<TcustomerBod>(entity =>
            {
                entity.ToTable("TCustomerBOD");

                entity.Property(e => e.TcustomerBodid).HasColumnName("TCustomerBODID");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerBods)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerBOD_TCustomer");
            });

            modelBuilder.Entity<TcustomerCardInformation>(entity =>
            {
                entity.HasKey(e => e.IdtypeCard);

                entity.ToTable("TCustomerCardInformation");

                entity.Property(e => e.IdtypeCard)
                    .ValueGeneratedNever()
                    .HasColumnName("IDTypeCard");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExpiredCardDate).HasColumnType("datetime");

                entity.Property(e => e.Idcard)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDCard");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegisteredCardDate).HasColumnType("datetime");

                entity.Property(e => e.TypeCard)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerCardInformations)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerCardInformation_TCustomer");
            });

            modelBuilder.Entity<TcustomerCif>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerCIF");

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TcustomerCorporateCardHolder>(entity =>
            {
                entity.HasKey(e => e.IdCardHolder);

                entity.ToTable("TCustomerCorporateCardHolder");

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.KitasexpiredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KITASExpiredDate");

                entity.Property(e => e.Kitasno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KITASNo");

                entity.Property(e => e.KtpexpiredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KTPExpiredDate");

                entity.Property(e => e.Ktpno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KTPNo");

                entity.Property(e => e.LastName)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdateUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Npwpno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NPWPNo");

                entity.Property(e => e.NpwpregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPRegisterDate");

                entity.Property(e => e.PassportExpiredDate).HasColumnType("datetime");

                entity.Property(e => e.PassportNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SkdexpiredDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpiredDate");

                entity.Property(e => e.Skdno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDNo");

                entity.HasOne(d => d.IdCustomerNavigation)
                    .WithMany(p => p.TcustomerCorporateCardHolders)
                    .HasForeignKey(d => d.IdCustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerCorporateCardHolder_TCustomer");
            });

            modelBuilder.Entity<TcustomerCustody>(entity =>
            {
                entity.HasKey(e => e.IdcustomerCustody);

                entity.ToTable("TCustomerCustody");

                entity.Property(e => e.IdcustomerCustody).HasColumnName("IDCustomerCustody");

                entity.Property(e => e.Cifno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdbankCustodyNavigation)
                    .WithMany(p => p.TcustomerCustodies)
                    .HasForeignKey(d => d.IdbankCustody)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerCustody_TRefBankCustody");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerCustodies)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerCustody_TCustomer");
            });

            modelBuilder.Entity<TcustomerDocument>(entity =>
            {
                entity.HasKey(e => e.IdcustomerDocument)
                    .HasName("PK__TCustome__A8B957654CBA3605");

                entity.ToTable("TCustomerDocuments");

                entity.Property(e => e.IdcustomerDocument).HasColumnName("IDCustomerDocument");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerDocuments)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerDocuments_TCustomer");
            });

            modelBuilder.Entity<TcustomerFwextUh>(entity =>
            {
                entity.HasKey(e => new { e.UnitHolderIdno, e.FwPrefix });

                entity.ToTable("TCustomerFWExtUH");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TcustomerHeir>(entity =>
            {
                entity.HasKey(e => e.IdcustomerHeir);

                entity.ToTable("TCustomerHeir");

                entity.Property(e => e.IdcustomerHeir).HasColumnName("IDCustomerHeir");

                entity.Property(e => e.Address)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('N/A')");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Relationship)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerHeirs)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerHeir_TCustomer");
            });

            modelBuilder.Entity<TcustomerHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerHistory");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.AuthPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.AuthPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1970')");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BirthPlace1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ContPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ContPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DocAkta).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocAttorney).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocNotary).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocNpwp)
                    .HasColumnName("DocNPWP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.EstablishDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('11111')");

                entity.Property(e => e.IdaimsAndObjectives).HasColumnName("IDAimsAndObjectives");

                entity.Property(e => e.IdaimsAndObjectives1).HasColumnName("IDAimsAndObjectives1");

                entity.Property(e => e.IdaimsAndObjectivesGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDAimsAndObjectivesGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdbankCustody)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustody")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcharacteristic).HasColumnName("IDCharacteristic");

                entity.Property(e => e.Idcharacteristic1).HasColumnName("IDCharacteristic1");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity11)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity11");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.Idcity21)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity21");

                entity.Property(e => e.IdcompanyType).HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Iddomisili).HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation).HasColumnName("IDEducation");

                entity.Property(e => e.Ideducation1).HasColumnName("IDEducation1");

                entity.Property(e => e.IdeducationGroup).HasColumnName("IDEducationGroup");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.Idincome1).HasColumnName("IDIncome1");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.IdnationalityAria).HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdoccupationAria).HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idreligi).HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceOfFunds).HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFunds1).HasColumnName("IDSourceOfFunds1");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSourceOfFundsGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("('KTP')");

                entity.Property(e => e.IdtypeIdentity).HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('I')");

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.LastName1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.LogDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.MailAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCity)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailZip)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('11111')");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MinTimePeriod).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinUnitHold).HasDefaultValueSql("((0))");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OpDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.Skd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skd1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SKD1");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('SIAR2004')");

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SourceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TcustomerIndividual>(entity =>
            {
                entity.HasKey(e => e.Idcustomer);

                entity.ToTable("TCustomerIndividual");

                entity.Property(e => e.Idcustomer)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomer");

                entity.Property(e => e.AgamaId).HasColumnName("AgamaID");

                entity.Property(e => e.AlamatById).HasColumnName("AlamatByID");

                entity.Property(e => e.AlamatKonfirmasiId).HasColumnName("AlamatKonfirmasiID");

                entity.Property(e => e.AlamatKorespondenId).HasColumnName("AlamatKorespondenID");

                entity.Property(e => e.CityIdbyId).HasColumnName("CityIDByID");

                entity.Property(e => e.CityIdbyStay).HasColumnName("CityIDByStay");

                entity.Property(e => e.CorrespondentCityId).HasColumnName("CorrespondentCityID");

                entity.Property(e => e.CorrespondentRtrw).HasColumnName("CorrespondentRTRW");

                entity.Property(e => e.Idtype).HasColumnName("IDType");

                entity.Property(e => e.JenisKelaminId).HasColumnName("JenisKelaminID");

                entity.Property(e => e.KewarganegaraanId).HasColumnName("KewarganegaraanID");

                entity.Property(e => e.KodePosById).HasColumnName("KodePosByID");

                entity.Property(e => e.Nik).HasColumnName("NIK");

                entity.Property(e => e.NoHp).HasColumnName("NoHP");

                entity.Property(e => e.NoId).HasColumnName("NoID");

                entity.Property(e => e.Npwp).HasColumnName("NPWP");

                entity.Property(e => e.NumberOfDependent).HasDefaultValueSql("((0))");

                entity.Property(e => e.OccupiedDuration).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.PendidikanId).HasColumnName("PendidikanID");

                entity.Property(e => e.ResidenceStatusId).HasColumnName("ResidenceStatusID");

                entity.Property(e => e.RtrwbyId).HasColumnName("RTRWByID");

                entity.Property(e => e.StatusPernikahanId).HasColumnName("StatusPernikahanID");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TanggalKadaluarsaId)
                    .HasColumnType("datetime")
                    .HasColumnName("TanggalKadaluarsaID");

                entity.Property(e => e.TanggalLahir).HasColumnType("datetime");

                entity.Property(e => e.TanggalRegistrasi).HasColumnType("datetime");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithOne(p => p.TcustomerIndividual)
                    .HasForeignKey<TcustomerIndividual>(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerIndividual_TCustomer");
            });

            modelBuilder.Entity<TcustomerInstitusi>(entity =>
            {
                entity.HasKey(e => e.Idcustomer);

                entity.ToTable("TCustomerInstitusi");

                entity.Property(e => e.Idcustomer)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomer");

                entity.Property(e => e.BentukBadanHukumId).HasColumnName("BentukBadanHukumID");

                entity.Property(e => e.BidangUsahaId).HasColumnName("BidangUsahaID");

                entity.Property(e => e.DomisiliHukumId).HasColumnName("DomisiliHukumID");

                entity.Property(e => e.KarakteristikId).HasColumnName("KarakteristikID");

                entity.Property(e => e.KotaKantorPusatId).HasColumnName("KotaKantorPusatID");

                entity.Property(e => e.KotaKorespondenId).HasColumnName("KotaKorespondenID");

                entity.Property(e => e.NoTdp).HasColumnName("NoTDP");

                entity.Property(e => e.Npwp).HasColumnName("NPWP");

                entity.Property(e => e.OmzetId).HasColumnName("OmzetID");

                entity.Property(e => e.RtrwkantorPusat).HasColumnName("RTRWKantorPusat");

                entity.Property(e => e.Rtrwkoresponden).HasColumnName("RTRWKoresponden");

                entity.Property(e => e.Siup).HasColumnName("SIUP");

                entity.Property(e => e.StatusGedungKantorPusatId).HasColumnName("StatusGedungKantorPusatID");

                entity.Property(e => e.SumberDanaId).HasColumnName("SumberDanaID");

                entity.Property(e => e.TempatPendirianId).HasColumnName("TempatPendirianID");

                entity.Property(e => e.TglBerdiri).HasColumnType("datetime");

                entity.Property(e => e.TglRegSkd)
                    .HasColumnType("datetime")
                    .HasColumnName("TglRegSKD");

                entity.Property(e => e.TglRegTdp)
                    .HasColumnType("datetime")
                    .HasColumnName("TglRegTDP");

                entity.Property(e => e.TglRegistrasi).HasColumnType("datetime");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithOne(p => p.TcustomerInstitusi)
                    .HasForeignKey<TcustomerInstitusi>(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerInstitusi_TCustomer");
            });

            modelBuilder.Entity<TcustomerInvestor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerInvestor");

                entity.Property(e => e.Cifno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIFNO");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");
            });

            modelBuilder.Entity<TcustomerModelRiskProfileMapping>(entity =>
            {
                entity.ToTable("TCustomerModelRiskProfileMapping");

                entity.HasIndex(e => new { e.CustomerProfileId, e.ModelProfileId }, "IX_TCustomerModelRiskProfileMapping")
                    .IsUnique();

                entity.Property(e => e.TcustomerModelRiskProfileMappingId).HasColumnName("TCustomerModelRiskProfileMappingID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ModelProfileId).HasColumnName("Model_ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TcustomerNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerNew");

                entity.Property(e => e.Column0)
                    .HasMaxLength(50)
                    .HasColumnName("Column 0");

                entity.Property(e => e.Column1)
                    .HasMaxLength(50)
                    .HasColumnName("Column 1");

                entity.Property(e => e.Column10)
                    .HasMaxLength(50)
                    .HasColumnName("Column 10");

                entity.Property(e => e.Column2)
                    .HasMaxLength(50)
                    .HasColumnName("Column 2");

                entity.Property(e => e.Column3)
                    .HasMaxLength(50)
                    .HasColumnName("Column 3");

                entity.Property(e => e.Column4)
                    .HasMaxLength(50)
                    .HasColumnName("Column 4");

                entity.Property(e => e.Column5)
                    .HasMaxLength(50)
                    .HasColumnName("Column 5");

                entity.Property(e => e.Column6)
                    .HasMaxLength(50)
                    .HasColumnName("Column 6");

                entity.Property(e => e.Column7)
                    .HasMaxLength(50)
                    .HasColumnName("Column 7");

                entity.Property(e => e.Column8)
                    .HasMaxLength(50)
                    .HasColumnName("Column 8");

                entity.Property(e => e.Column9)
                    .HasMaxLength(50)
                    .HasColumnName("Column 9");
            });

            modelBuilder.Entity<TcustomerOwnership>(entity =>
            {
                entity.HasKey(e => e.IdcustomerOwnership);

                entity.ToTable("TCustomerOwnership");

                entity.Property(e => e.IdcustomerOwnership).HasColumnName("IDCustomerOwnership");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerOwnerships)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerOwnership_TCustomer");
            });

            modelBuilder.Entity<TcustomerProductRekeningMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerProductRekeningMapping");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerProductRekeningMapping)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TcustomerProductRiskProfileMapping>(entity =>
            {
                entity.ToTable("TCustomerProductRiskProfileMapping");

                entity.HasIndex(e => new { e.CustomerProfileId, e.ProductProfileId }, "IX_TCustomerProductRiskProfileMapping")
                    .IsUnique();

                entity.Property(e => e.TcustomerProductRiskProfileMappingId).HasColumnName("TCustomerProductRiskProfileMappingID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ProductProfileId).HasColumnName("Product_ProfileID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TcustomerRegInvestmentPlan>(entity =>
            {
                entity.ToTable("TCustomerRegInvestmentPlan");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BreakDate).HasColumnType("date");

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.MaturityDate)
                    .HasColumnType("date")
                    .HasComputedColumnSql("(dateadd(day,[DebitDate]-datepart(day,[RegDate]),dateadd(month,[Tenor]+case when datepart(day,[RegDate])>=[DebitDate] then (0) else (-1) end,[RegDate])))", false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerRegInvestmentPlans)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRegInvestmentPlan_TCustomer");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TcustomerRegInvestmentPlans)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRegInvestmentPlan_TProduct");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.TcustomerRegInvestmentPlans)
                    .HasForeignKey(d => d.IdsubAccount)
                    .HasConstraintName("FK_TCustomerRegInvestmentPlan_TSubAccount");

                entity.HasOne(d => d.TregularInvestmentPlan)
                    .WithMany(p => p.TcustomerRegInvestmentPlans)
                    .HasForeignKey(d => d.TregularInvestmentPlanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRegInvestmentPlan_TRegularInvestmentPlan");
            });

            modelBuilder.Entity<TcustomerReport>(entity =>
            {
                entity.ToTable("TCustomerReport");

                entity.Property(e => e.TcustomerReportId).HasColumnName("TCustomerReportID");

                entity.Property(e => e.ReportName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReportPath)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");
            });

            modelBuilder.Entity<TcustomerReportTemplate>(entity =>
            {
                entity.ToTable("TCustomerReportTemplate");

                entity.HasIndex(e => e.TcustomerReportId, "IX_TCustomerReportTemplate")
                    .IsUnique();

                entity.Property(e => e.TcustomerReportTemplateId).HasColumnName("TCustomerReportTemplateID");

                entity.Property(e => e.BodyText)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Subject)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcustomerReportId).HasColumnName("TCustomerReportID");

                entity.HasOne(d => d.TcustomerReport)
                    .WithOne(p => p.TcustomerReportTemplate)
                    .HasForeignKey<TcustomerReportTemplate>(d => d.TcustomerReportId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerReportTemplate_TCustomerReport");
            });

            modelBuilder.Entity<TcustomerRiskProfile>(entity =>
            {
                entity.ToTable("TCustomerRiskProfile");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ProfileId)
                    .HasColumnName("ProfileID")
                    .HasComputedColumnSql("([DBO].[fnCalculateRiskProfileID]([TCustomerRiskProfileID]))", false);

                entity.Property(e => e.ProfileScore).HasComputedColumnSql("([dbo].[fnCalculateRiskProfileScore]([TCustomerRiskProfileID]))", false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerRiskProfiles)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRiskProfile_TCustomer");
            });

            modelBuilder.Entity<TcustomerRiskProfileAnswer>(entity =>
            {
                entity.ToTable("TCustomerRiskProfileAnswer");

                entity.HasIndex(e => new { e.TcustomerRiskProfileId, e.QuestionId }, "IX_TCustomerRiskProfileAnswer")
                    .IsUnique();

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.TcustomerRiskProfileAnswers)
                    .HasForeignKey(d => d.QuestionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswer_TRefProfileQuestion");

                entity.HasOne(d => d.QuestionOption)
                    .WithMany(p => p.TcustomerRiskProfileAnswers)
                    .HasForeignKey(d => d.QuestionOptionId)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswer_TRefProfileQuestionOption");

                entity.HasOne(d => d.TcustomerRiskProfile)
                    .WithMany(p => p.TcustomerRiskProfileAnswers)
                    .HasForeignKey(d => d.TcustomerRiskProfileId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswer_TCustomerRiskProfile");
            });

            modelBuilder.Entity<TcustomerRiskProfileAnswerTemp>(entity =>
            {
                entity.ToTable("TCustomerRiskProfileAnswerTemp");

                entity.HasIndex(e => new { e.TcustomerRiskProfileTempId, e.QuestionId }, "IX_TCustomerRiskProfileAnswerTemp")
                    .IsUnique();

                entity.Property(e => e.TcustomerRiskProfileAnswerTempId).HasColumnName("TCustomerRiskProfileAnswerTempID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcustomerRiskProfileTempId).HasColumnName("TCustomerRiskProfileTempID");

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.TcustomerRiskProfileAnswerTemps)
                    .HasForeignKey(d => d.QuestionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswerTemp_TRefProfileQuestion");

                entity.HasOne(d => d.QuestionOption)
                    .WithMany(p => p.TcustomerRiskProfileAnswerTemps)
                    .HasForeignKey(d => d.QuestionOptionId)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswerTemp_TRefProfileQuestionOption");

                entity.HasOne(d => d.TcustomerRiskProfileTemp)
                    .WithMany(p => p.TcustomerRiskProfileAnswerTemps)
                    .HasForeignKey(d => d.TcustomerRiskProfileTempId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerRiskProfileAnswerTemp_TCustomerRiskProfile");
            });

            modelBuilder.Entity<TcustomerRiskProfileTemp>(entity =>
            {
                entity.ToTable("TCustomerRiskProfileTemp");

                entity.Property(e => e.TcustomerRiskProfileTempId).HasColumnName("TCustomerRiskProfileTempID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ProfileId)
                    .HasColumnName("ProfileID")
                    .HasComputedColumnSql("([DBO].[fnCalculateRiskProfileTempID]([TCustomerRiskProfileTempID]))", false);

                entity.Property(e => e.ProfileScore).HasComputedColumnSql("([dbo].[fnCalculateRiskProfileTempScore]([TCustomerRiskProfileTempID]))", false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TcustomerSalesHistory>(entity =>
            {
                entity.HasKey(e => e.IdSalesHistory);

                entity.ToTable("TCustomerSalesHistory");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.MarketingLevel)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCustomerNavigation)
                    .WithMany(p => p.TcustomerSalesHistories)
                    .HasForeignKey(d => d.IdCustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerSalesHistory_TCustomer");

                entity.HasOne(d => d.IdSalesNavigation)
                    .WithMany(p => p.TcustomerSalesHistories)
                    .HasForeignKey(d => d.IdSales)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerSalesHistory_TAgent");

                entity.HasOne(d => d.MarketingLevelNavigation)
                    .WithMany(p => p.TcustomerSalesHistories)
                    .HasForeignKey(d => d.MarketingLevel)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TCustomerSalesHistory_TMarketingLevel");
            });

            modelBuilder.Entity<TcustomerShareholder>(entity =>
            {
                entity.ToTable("TCustomerShareholder");

                entity.Property(e => e.TcustomerShareholderId).HasColumnName("TCustomerShareholderID");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TcustomerShareholders)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TCustomerShareholder_TCustomer");
            });

            modelBuilder.Entity<TcustomerSource>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomer_Source");

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.AuthPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.AuthPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo");

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ContPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.ContPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FullName2)
                    .HasMaxLength(126)
                    .IsUnicode(false);

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.HomePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankCustody)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.Idreligion)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDReligion");

                entity.Property(e => e.Idscan).HasColumnName("IDScan");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MailAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MailCity)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.MailCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.MailZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Skd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TcustomerTemporary>(entity =>
            {
                entity.HasKey(e => e.Idcustomer);

                entity.ToTable("TCustomerTEMPORARY");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedDate1)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.AuthPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.AuthPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.BirthDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Cifno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('R')");

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('admin')");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ContPersonName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ContPersonPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DocAkta)
                    .HasDefaultValueSql("((0))")
                    .HasComment("");

                entity.Property(e => e.DocAttorney).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DocNotary).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocNpwp)
                    .HasColumnName("DocNPWP")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FullName)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fwPrefix");

                entity.Property(e => e.FwPrefix1)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdbankCustody)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustody")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcharacteristic).HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType).HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Iddomisili).HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation).HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup).HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationGroup1).HasColumnName("IDEducationGroup1");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("('INA')");

                entity.Property(e => e.IdnationalityAria).HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idobjectives).HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDObjectivesGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdoccupationAria).HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idreligi).HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceOfFunds).HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSourceOfFundsGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship")
                    .HasDefaultValueSql("('C')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("('OPEN')");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("('KTP')");

                entity.Property(e => e.IdtypeIdentity).HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('I')");

                entity.Property(e => e.LastName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MailAddress)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCity)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailCountry)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MailZip)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MinTimePeriod).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinUnitHold).HasDefaultValueSql("((0))");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MotherName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.ParentCustomer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.RecCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreatedDate).HasColumnType("datetime");

                entity.Property(e => e.RecModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ReligiCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('MA')")
                    .HasComment("MA Mean MALE, FE MEAN FEMALE");

                entity.Property(e => e.Skd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SourceDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TcustomerTransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TCustomerTransaction");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDPRoduct");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TdataChangePending>(entity =>
            {
                entity.HasKey(e => new { e.DataChangeId, e.ChangeType, e.ApprovalId })
                    .HasName("PK_DataChangeID");

                entity.ToTable("TDataChange_Pending");

                entity.Property(e => e.DataChangeId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("DataChangeID");

                entity.Property(e => e.ChangeType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ApprovalId).HasColumnName("ApprovalID");

                entity.Property(e => e.FieldName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldNewValue)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.FieldOldValue)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Pkfield)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PKField");

                entity.Property(e => e.Pkvalue)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PKValue");

                entity.Property(e => e.RecCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecCreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TdistributedIncomeDatum>(entity =>
            {
                entity.HasKey(e => e.TdistributedIncomeDataId);

                entity.ToTable("TDistributedIncomeData");

                entity.HasIndex(e => new { e.Idproduct, e.CumDate }, "IX_TDistributedIncomeData_Cum")
                    .IsUnique();

                entity.HasIndex(e => new { e.Idproduct, e.ExDate }, "IX_TDistributedIncomeData_Ex")
                    .IsUnique();

                entity.Property(e => e.TdistributedIncomeDataId).HasColumnName("TDistributedIncomeDataID");

                entity.Property(e => e.CumDate).HasColumnType("date");

                entity.Property(e => e.ExDate).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.InputDate).HasColumnType("date");

                entity.Property(e => e.PaymentDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TdistributedIncomeData)
                    .HasForeignKey(d => d.Idproduct)
                    .HasConstraintName("FK_TDistributedIncomeData_TProduct");
            });

            modelBuilder.Entity<Tdividend>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.DividendDate });

                entity.ToTable("TDividend");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DividendDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Approved_By");

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Approved_Date");

                entity.Property(e => e.BatchId)
                    .HasColumnType("numeric(9, 0)")
                    .HasColumnName("Batch_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Currency).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.DateOpen)
                    .HasColumnType("datetime")
                    .HasColumnName("Date_Open");

                entity.Property(e => e.DividendAmount)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("Dividend_Amount");

                entity.Property(e => e.DividendId)
                    .HasColumnType("numeric(9, 0)")
                    .HasColumnName("Dividend_ID");

                entity.Property(e => e.DividendRate)
                    .HasColumnType("numeric(13, 0)")
                    .HasColumnName("Dividend_Rate");

                entity.Property(e => e.DividendUnits)
                    .HasColumnType("numeric(9, 0)")
                    .HasColumnName("Dividend_Units");

                entity.Property(e => e.Epu)
                    .HasColumnName("EPU")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsProcessedYn)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("isProcessed_yn")
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.OutstandingUnits)
                    .HasColumnType("numeric(9, 0)")
                    .HasColumnName("Outstanding_Units");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.ProcessDate)
                    .HasColumnType("datetime")
                    .HasColumnName("processDate");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("processUser");

                entity.Property(e => e.RecordingDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.XDate)
                    .HasColumnType("datetime")
                    .HasColumnName("X_Date");
            });

            modelBuilder.Entity<TdividendRate>(entity =>
            {
                entity.HasKey(e => e.DrId);

                entity.ToTable("TDividendRate");

                entity.Property(e => e.DrId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DR_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.DrDate)
                    .HasColumnType("datetime")
                    .HasColumnName("DR_Date");

                entity.Property(e => e.DrStatus)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("DR_Status");

                entity.Property(e => e.DrValue)
                    .HasColumnType("numeric(18, 13)")
                    .HasColumnName("DR_Value");

                entity.Property(e => e.MfId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MF_ID");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SupervisorId)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Supervisor_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");
            });

            modelBuilder.Entity<TdividendSaldo>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.DividendDate, e.UnitHolderIdno });

                entity.ToTable("TDividendSaldo");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DividendDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AmountDiv).HasDefaultValueSql("((0))");

                entity.Property(e => e.IdAccountBankType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idAccountBankType");

                entity.Property(e => e.IdBank)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("idBank");

                entity.Property(e => e.IdBankBranch).HasColumnName("idBankBranch");

                entity.Property(e => e.IdCurrency)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("idCurrency");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsPosted)
                    .HasColumnName("isPosted")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SaldoStart).HasDefaultValueSql("((0))");

                entity.Property(e => e.UnitDiv).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.IddividendInvestNavigation)
                    .WithMany(p => p.TdividendSaldos)
                    .HasForeignKey(d => d.IddividendInvest)
                    .HasConstraintName("FK_TDividendSaldo_TRefInvest");

                entity.HasOne(d => d.Tdividend)
                    .WithMany(p => p.TdividendSaldos)
                    .HasForeignKey(d => new { d.ProductCode, d.DividendDate })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TDividendSaldo_TDividend");
            });

            modelBuilder.Entity<TdividendSummary>(entity =>
            {
                entity.HasKey(e => e.IddividendSummary)
                    .HasName("PK__TDividendSummary__6FE2AB5A");

                entity.ToTable("TDividendSummary");

                entity.HasIndex(e => e.DateExecuted, "IDX_TDIVDateExecuted");

                entity.HasIndex(e => e.DateRecorded, "IDX_TDIVDateRecorded");

                entity.HasIndex(e => e.DividendStatus, "IDX_TDIVDividendStatus");

                entity.HasIndex(e => e.Idproduct, "IDX_TDIVProductCode");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateExecuted).HasColumnType("datetime");

                entity.Property(e => e.DateRecorded).HasColumnType("datetime");

                entity.Property(e => e.DateReinvested).HasColumnType("datetime");

                entity.Property(e => e.DateSettled).HasColumnType("datetime");

                entity.Property(e => e.DividendStatus)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DividendType)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EntryMode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecIsActive).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TdividendSummaries)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TDividendSummary_TProduct");
            });

            modelBuilder.Entity<TdualApprovalExample>(entity =>
            {
                entity.ToTable("TDualApprovalExample");

                entity.HasIndex(e => e.Code, "IX_TDualApprovalExample")
                    .IsUnique();

                entity.Property(e => e.TdualApprovalExampleId).HasColumnName("TDualApprovalExampleID");

                entity.Property(e => e.Code)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TdueDate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TDueDate");

                entity.Property(e => e.DueDate).HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");
            });

            modelBuilder.Entity<TempMonthlyStatementGenerate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TempMonthlyStatementGenerate");

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdCurrency)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoUrut).ValueGeneratedOnAdd();

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TanggalAwal).HasColumnType("datetime");

                entity.Property(e => e.TransType)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TempTcustomerRegInvestmentPlan>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Temp_TCustomerRegInvestmentPlan");

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BreakDate).HasColumnType("date");

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("date");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRegInvestmentPlanId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<Tempbalance>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Tempbalance");
            });

            modelBuilder.Entity<TendOfDay>(entity =>
            {
                entity.ToTable("TEndOfDay");

                entity.HasIndex(e => new { e.Idproduct, e.Navdate, e.IndexHelper }, "IX_TEndOfDay")
                    .IsUnique();

                entity.Property(e => e.TendOfDayId).HasColumnName("TEndOfDayID");

                entity.Property(e => e.EoderrorMessage).HasColumnName("EODErrorMessage");

                entity.Property(e => e.Eodremarks)
                    .HasMaxLength(512)
                    .IsUnicode(false)
                    .HasColumnName("EODRemarks");

                entity.Property(e => e.EodtrxCount).HasColumnName("EODTrxCount");

                entity.Property(e => e.EodtrxFailCount).HasColumnName("EODTrxFailCount");

                entity.Property(e => e.EodtrxSuccessCount).HasColumnName("EODTrxSuccessCount");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IndexHelper).HasComputedColumnSql("(case when [sysIsDeleted]=(1) then [TEndOfDayID] else (0) end)", true);

                entity.Property(e => e.IsAutoEod)
                    .HasColumnName("IsAutoEOD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsDeleted).HasColumnName("sysIsDeleted");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.UndoRemarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TendOfDays)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TEndOfDay_TProduct");
            });

            modelBuilder.Entity<Teoddate>(entity =>
            {
                entity.HasKey(e => e.SystemDate);

                entity.ToTable("TEODDate");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");
            });

            modelBuilder.Entity<TexchangeRate>(entity =>
            {
                entity.ToTable("TExchangeRate");

                entity.HasIndex(e => new { e.Erdate, e.TcurrencyId, e.CcurrencyId }, "IX_TExchangeRate")
                    .IsUnique();

                entity.Property(e => e.TexchangeRateId).HasColumnName("TExchangeRateID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.HasOne(d => d.Ccurrency)
                    .WithMany(p => p.TexchangeRateCcurrencies)
                    .HasForeignKey(d => d.CcurrencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExchangeRate_TRefCurrency_Comm");

                entity.HasOne(d => d.Tcurrency)
                    .WithMany(p => p.TexchangeRateTcurrencies)
                    .HasForeignKey(d => d.TcurrencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExchangeRate_TRefCurrency_Term");
            });

            modelBuilder.Entity<TexchangeRateByProduct>(entity =>
            {
                entity.ToTable("TExchangeRateByProduct");

                entity.HasIndex(e => new { e.Idproduct, e.Erdate, e.CcurrencyId, e.TcurrencyId }, "IX_TExchangeRateByProduct")
                    .IsUnique();

                entity.Property(e => e.TexchangeRateByProductId).HasColumnName("TExchangeRateByProductID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.HasOne(d => d.Ccurrency)
                    .WithMany(p => p.TexchangeRateByProductCcurrencies)
                    .HasForeignKey(d => d.CcurrencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExchangeRateByProduct_TRefCurrency_Comm");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TexchangeRateByProducts)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExchangeRateByProduct_TProduct");

                entity.HasOne(d => d.Tcurrency)
                    .WithMany(p => p.TexchangeRateByProductTcurrencies)
                    .HasForeignKey(d => d.TcurrencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExchangeRateByProduct_TRefCurrency_Term");
            });

            modelBuilder.Entity<TextBtpnRtgssettlement>(entity =>
            {
                entity.ToTable("TExt_BTPN_RTGSSettlement");

                entity.Property(e => e.TextBtpnRtgssettlementId).HasColumnName("TExt_BTPN_RTGSSettlementID");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.KseibankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KSEIBankAccount");

                entity.Property(e => e.ProductBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TextBtpnRtgssettlementStatusId).HasColumnName("TExt_BTPN_RTGSSettlement_StatusID");

                entity.HasOne(d => d.TextBtpnRtgssettlementStatus)
                    .WithMany(p => p.TextBtpnRtgssettlements)
                    .HasForeignKey(d => d.TextBtpnRtgssettlementStatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExt_BTPN_RTGSSettlement_TExt_BTPN_RTGSSettlement_Status");
            });

            modelBuilder.Entity<TextBtpnRtgssettlementLog>(entity =>
            {
                entity.ToTable("TExt_BTPN_RTGSSettlementLog");

                entity.Property(e => e.TextBtpnRtgssettlementLogId).HasColumnName("TExt_BTPN_RTGSSettlementLogID");

                entity.Property(e => e.KseibankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KSEIBankAccount");

                entity.Property(e => e.PaymentRefrence).IsUnicode(false);

                entity.Property(e => e.ProcessingCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefNo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseCode).IsUnicode(false);

                entity.Property(e => e.ResponseDesc).IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.TextBtpnRtgssettlementId).HasColumnName("TExt_BTPN_RTGSSettlementID");
            });

            modelBuilder.Entity<TextBtpnRtgssettlementStatus>(entity =>
            {
                entity.ToTable("TExt_BTPN_RTGSSettlement_Status");

                entity.Property(e => e.TextBtpnRtgssettlementStatusId)
                    .ValueGeneratedNever()
                    .HasColumnName("TExt_BTPN_RTGSSettlement_StatusID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TextBtpnRtgssettlementTransaction>(entity =>
            {
                entity.ToTable("TExt_BTPN_RTGSSettlementTransaction");

                entity.Property(e => e.TextBtpnRtgssettlementTransactionId).HasColumnName("TExt_BTPN_RTGSSettlementTransactionID");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.TextBtpnRtgssettlementId).HasColumnName("TExt_BTPN_RTGSSettlementID");

                entity.HasOne(d => d.TextBtpnRtgssettlement)
                    .WithMany(p => p.TextBtpnRtgssettlementTransactions)
                    .HasForeignKey(d => d.TextBtpnRtgssettlementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExt_BTPN_RTGSSettlementTransaction_TExt_BTPN_RTGSSettlement");
            });

            modelBuilder.Entity<TextCimbBatchLog>(entity =>
            {
                entity.ToTable("TExt_CIMB_BatchLog");

                entity.Property(e => e.TextCimbBatchLogId).HasColumnName("TExt_CIMB_BatchLogID");

                entity.Property(e => e.BatchType)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedTime).HasColumnType("datetime");

                entity.Property(e => e.DestPath)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Direction)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Exception).IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ReceiverHost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SenderHost)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TextCimbBatchLogDebitFail>(entity =>
            {
                entity.ToTable("TExt_CIMB_BatchLog_DebitFail");

                entity.Property(e => e.TextCimbBatchLogDebitFailId).HasColumnName("TExt_CIMB_BatchLog_DebitFailID");

                entity.Property(e => e.CreatedTime).HasColumnType("datetime");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerRegInvestmentPlan).HasColumnName("IDCustomerRegInvestmentPlan");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TextCimbCustomerRegInvPlanLog>(entity =>
            {
                entity.HasKey(e => e.IdtextCimbCustomerRegInvPlanLog)
                    .HasName("PK__TExt_CIM__02ED4A9E62D7596A");

                entity.ToTable("TExt_CIMB_CustomerRegInvPlan_LOG");

                entity.Property(e => e.IdtextCimbCustomerRegInvPlanLog).HasColumnName("IDTExt_CIMB_CustomerRegInvPlan_LOG");

                entity.Property(e => e.ErrorMessage)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratedDate).HasColumnType("date");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_name())");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");
            });

            modelBuilder.Entity<TextCimbEsbjourSeqNum>(entity =>
            {
                entity.ToTable("TExt_CIMB_ESBJourSeqNum");

                entity.Property(e => e.TextCimbEsbjourSeqNumId).HasColumnName("TExt_CIMB_ESBJourSeqNumID");

                entity.Property(e => e.Date).HasColumnType("date");
            });

            modelBuilder.Entity<TExt_Victoria_APILog>(entity =>
            {
                entity.HasKey(e => e.TesblogId)
                    .HasName("PK_TESBLog");

                entity.ToTable("TExt_Victoria_APILog");

                entity.Property(e => e.TesblogId).HasColumnName("TESBLogID");

                entity.Property(e => e.AppModul)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChannelId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ChannelID");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Direction)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Exception).IsUnicode(false);

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.RequestData).IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseData).IsUnicode(false);

                entity.Property(e => e.ResponseDescription)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RqUid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RqUID");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<TextCimbJobLog>(entity =>
            {
                entity.HasKey(e => e.IdjobLog)
                    .HasName("PK__Text_CIM__073DC6992ED560DC");

                entity.ToTable("Text_CIMB_JobLog");

                entity.Property(e => e.IdjobLog).HasColumnName("IDJobLog");

                entity.Property(e => e.Exception).IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdsubAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.ModuleName).IsUnicode(false);

                entity.Property(e => e.Remark).IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy).IsUnicode(false);

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<TextHighNetwork>(entity =>
            {
                entity.ToTable("TExt_HighNetwork");

                entity.HasIndex(e => e.EffectiveDate, "IX_TExt_HighNetwork")
                    .IsUnique();

                entity.Property(e => e.TextHighNetworkId).HasColumnName("TExt_HighNetworkID");

                entity.Property(e => e.Aumdate)
                    .HasColumnType("date")
                    .HasColumnName("AUMDate");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TextHighNetworkCustomer>(entity =>
            {
                entity.ToTable("TExt_HighNetworkCustomer");

                entity.HasIndex(e => new { e.TextHighNetworkId, e.Idcustomer }, "IX_TExt_HighNetworkCustomer")
                    .IsUnique();

                entity.Property(e => e.TextHighNetworkCustomerId).HasColumnName("TExt_HighNetworkCustomerID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TextHighNetworkId).HasColumnName("TExt_HighNetworkID");

                entity.Property(e => e.TotalAum).HasColumnName("TotalAUM");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TextHighNetworkCustomers)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TExt_HighNetworkCustomer_TCustomer");

                entity.HasOne(d => d.TextHighNetwork)
                    .WithMany(p => p.TextHighNetworkCustomers)
                    .HasForeignKey(d => d.TextHighNetworkId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExt_HighNetworkCustomer_TExt_HighNetwork");
            });

            modelBuilder.Entity<TextMailTemplate>(entity =>
            {
                entity.ToTable("TExt_MailTemplate");

                entity.Property(e => e.TextMailTemplateId).HasColumnName("TExt_MailTemplateID");

                entity.Property(e => e.Header)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.HeaderEng)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Subject)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TemplateKey)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TsendMailAccountId).HasColumnName("TSendMailAccountID");
            });

            modelBuilder.Entity<TextMailTemplateAttachment>(entity =>
            {
                entity.ToTable("TExt_MailTemplateAttachment");

                entity.Property(e => e.TextMailTemplateAttachmentId).HasColumnName("TExt_MailTemplateAttachmentID");

                entity.Property(e => e.AttachmentValue).IsUnicode(false);

                entity.Property(e => e.FileFormat)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.FromDbfileName)
                    .IsUnicode(false)
                    .HasColumnName("FromDBFileName");

                entity.Property(e => e.Rdlparameters)
                    .IsUnicode(false)
                    .HasColumnName("RDLParameters");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TextMailTemplateId).HasColumnName("TExt_MailTemplateID");

                entity.HasOne(d => d.TextMailTemplate)
                    .WithMany(p => p.TextMailTemplateAttachments)
                    .HasForeignKey(d => d.TextMailTemplateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TExt_MailTemplateAttachment_TExt_MailTemplate");
            });

            modelBuilder.Entity<TextMailTemplateParameter>(entity =>
            {
                entity.HasKey(e => e.MailTemplateParamId)
                    .HasName("PK_MailTemplateParamID");

                entity.ToTable("TExt_MailTemplateParameter");

                entity.Property(e => e.MailTemplateParamId).HasColumnName("MailTemplateParamID");

                entity.Property(e => e.ParamName).IsUnicode(false);

                entity.Property(e => e.ParamTable)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParamValue).IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TextMailTemplateId).HasColumnName("TExt_MailTemplateID");

                entity.HasOne(d => d.TextMailTemplate)
                    .WithMany(p => p.TextMailTemplateParameters)
                    .HasForeignKey(d => d.TextMailTemplateId)
                    .HasConstraintName("FK_TExt_MailTemplateParameter_TExt_MailTemplate");
            });

            modelBuilder.Entity<TextMegaBatchLog>(entity =>
            {
                entity.ToTable("TExt_MEGA_BatchLog");

                entity.Property(e => e.TextMegaBatchLogId).HasColumnName("TExt_MEGA_BatchLogID");

                entity.Property(e => e.BatchType)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedTime).HasColumnType("datetime");

                entity.Property(e => e.DestPath)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.Direction)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Exception).IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LogMessage)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.ReceiverHost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SenderHost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(host_name())");
            });

            modelBuilder.Entity<TextMegaEsbjourSeqNum>(entity =>
            {
                entity.ToTable("TExt_MEGA_ESBJourSeqNum");

                entity.Property(e => e.TextMegaEsbjourSeqNumId).HasColumnName("TExt_MEGA_ESBJourSeqNumID");

                entity.Property(e => e.Date).HasColumnType("date");
            });

            modelBuilder.Entity<TextMegaEsblog>(entity =>
            {
                entity.HasKey(e => e.TesblogId)
                    .HasName("PK_TExt_MEGA_TESBLog");

                entity.ToTable("TExt_MEGA_ESBLog");

                entity.Property(e => e.TesblogId).HasColumnName("TESBLogID");

                entity.Property(e => e.AppModul)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChannelId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ChannelID");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Direction)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Exception).IsUnicode(false);

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.RequestData).IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseData).IsUnicode(false);

                entity.Property(e => e.ResponseDescription)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.RqUid)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RqUID");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<TextNobuIntConnectionLog>(entity =>
            {
                entity.ToTable("TExt_NOBU_INT_ConnectionLog");

                entity.Property(e => e.TextNobuIntConnectionLogId).HasColumnName("TExt_NOBU_INT_ConnectionLogID");

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(8000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TextUigenwebService>(entity =>
            {
                entity.HasKey(e => e.TextUigenwebServiceId);

                entity.ToTable("TExt_UIGENWebService");

                entity.Property(e => e.TextUigenwebServiceId).HasColumnName("TExt_UIGENWebServiceID");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AuditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.AuditTime).HasColumnType("datetime");

                entity.Property(e => e.AuditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MethodName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("methodName");

                entity.Property(e => e.OutputMessage)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.RequestBody)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("requestBody");

                entity.Property(e => e.ResponseText)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("responseText");

                entity.Property(e => e.SoapAction)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SpName)
                    .HasMaxLength(512)
                    .HasColumnName("spName");

                entity.Property(e => e.Url)
                    .HasMaxLength(1000)
                    .IsUnicode(false)
                    .HasColumnName("URL");
            });

            modelBuilder.Entity<Tfee>(entity =>
            {
                entity.HasKey(e => e.FeeId)
                    .HasName("PK__TFee__552D1E70");

                entity.ToTable("TFee");

                entity.Property(e => e.FeeId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("FEE_ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.LowerBound)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("Lower_Bound");

                entity.Property(e => e.MfId)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("MF_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Percentage).HasColumnType("numeric(18, 4)");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.UpperBound)
                    .HasColumnType("numeric(18, 4)")
                    .HasColumnName("Upper_Bound");
            });

            modelBuilder.Entity<TfeeAgent>(entity =>
            {
                entity.HasKey(e => new { e.CodeAgent, e.ProductCode, e.Navdate });

                entity.ToTable("TFeeAgent");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.FeePpn).HasColumnName("FeePPN");

                entity.Property(e => e.FeeTxRed).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeTxSubs).HasDefaultValueSql("((0))");

                entity.Property(e => e.MfeeOther)
                    .HasColumnName("MFeeOther")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MfeeShare)
                    .HasColumnName("MFeeShare")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MfeeTotal)
                    .HasColumnName("MFeeTotal")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.MfeeTotal1).HasColumnName("MFeeTotal1");

                entity.Property(e => e.Mfeeotheradj).HasColumnName("mfeeotheradj");

                entity.Property(e => e.Mfeeshareadj).HasColumnName("mfeeshareadj");

                entity.Property(e => e.SaldoDate).HasColumnType("datetime");

                entity.Property(e => e.SaldoUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.SfeeShare).HasColumnName("SFeeShare");

                entity.Property(e => e.TotalFundIdr).HasColumnName("TotalFundIDR");
            });

            modelBuilder.Entity<TfeeAgentNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TFeeAgentNew");

                entity.HasIndex(e => new { e.FeeDateInt, e.ProductCode, e.CodeAgent }, "IX_TFeeAgentNew")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Aum).HasColumnName("AUM");

                entity.Property(e => e.Aumdisplay).HasColumnName("AUMDisplay");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FeeDate).HasColumnType("datetime");

                entity.Property(e => e.FeeDateInt).HasComputedColumnSql("(datediff(day,(0),[FeeDate]))", true);

                entity.Property(e => e.MfeeShare).HasColumnName("MFeeShare");

                entity.Property(e => e.MfeeTotal).HasColumnName("MFeeTotal");

                entity.Property(e => e.NavperUnitAum).HasColumnName("NAVPerUnitAUM");

                entity.Property(e => e.NavperUnitDisplay).HasColumnName("NAVPerUnitDisplay");

                entity.Property(e => e.PembelianRd).HasColumnName("PembelianRD");

                entity.Property(e => e.PenjualanRd).HasColumnName("PenjualanRD");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitCustAum).HasColumnName("UnitCustAUM");
            });

            modelBuilder.Entity<TfeeBroker>(entity =>
            {
                entity.HasKey(e => new { e.CodeBroker, e.ProductCode, e.Navdate });

                entity.ToTable("TFeeBroker");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.FeePpn).HasColumnName("FeePPN");

                entity.Property(e => e.MfeeOther).HasColumnName("MFeeOther");

                entity.Property(e => e.MfeeShare).HasColumnName("MFeeShare");

                entity.Property(e => e.MfeeTotal).HasColumnName("MFeeTotal");

                entity.Property(e => e.SaldoDate).HasColumnType("datetime");

                entity.Property(e => e.SfeeShare).HasColumnName("SFeeShare");
            });

            modelBuilder.Entity<TfeeCustomer>(entity =>
            {
                entity.HasKey(e => new { e.Navdate, e.UnitholderIdNo, e.ProductCode });

                entity.ToTable("TFeeCustomer");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.UnitholderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FeePpn).HasColumnName("FeePPN");

                entity.Property(e => e.MfeeOther).HasColumnName("MFeeOther");

                entity.Property(e => e.MfeeShare).HasColumnName("MFeeShare");

                entity.Property(e => e.MfeeTotal).HasColumnName("MFeeTotal");

                entity.Property(e => e.SaldoDate).HasColumnType("datetime");

                entity.Property(e => e.SfeeShare).HasColumnName("SFeeShare");
            });

            modelBuilder.Entity<TfieldList>(entity =>
            {
                entity.HasKey(e => e.FieldId)
                    .HasName("PK__TFieldList__371376FB");

                entity.ToTable("TFieldList");

                entity.Property(e => e.FieldId).HasColumnName("FieldID");

                entity.Property(e => e.ControlName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmptyMessage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmptyMessageAlt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldAlias)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldAliasAlt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldDescription)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FieldName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FieldVisible).HasDefaultValueSql("((1))");

                entity.Property(e => e.FormName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MandatoryFlag).HasDefaultValueSql("((0))");

                entity.Property(e => e.MandatoryMark)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RecAttribute1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecAttribute2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecAttribute3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecCreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.TableId).HasColumnName("TableID");

                entity.HasOne(d => d.Table)
                    .WithMany(p => p.TfieldLists)
                    .HasForeignKey(d => d.TableId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TFieldListTableID");
            });

            modelBuilder.Entity<TfileList>(entity =>
            {
                entity.HasKey(e => e.FileName);

                entity.ToTable("TFileList");

                entity.Property(e => e.FileName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FilePath).IsUnicode(false);

                entity.Property(e => e.IdList)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("idList");

                entity.Property(e => e.IsDownload).HasColumnName("isDownload");

                entity.Property(e => e.TrxDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TfnCoreImssiarAgentMovementGetAgentForTransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TfnCore_IMSSIAR_AgentMovement_GetAgentForTransaction");

                entity.HasIndex(e => new { e.EffectiveDate, e.TreeCode2 }, "IX_TfnCore_IMSSIAR_AgentMovement_GetAgentForTransaction");

                entity.Property(e => e.BranchAgentId).HasColumnName("BranchAgentID");

                entity.Property(e => e.BranchCodeAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BranchLevelId).HasColumnName("BranchLevelID");

                entity.Property(e => e.BranchNameAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BranchTreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.SalesAgentId).HasColumnName("SalesAgentID");

                entity.Property(e => e.SalesCodeAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalesLevelId).HasColumnName("SalesLevelID");

                entity.Property(e => e.SalesNameAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalesTreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeaderAgentId).HasColumnName("TeamLeaderAgentID");

                entity.Property(e => e.TeamLeaderCodeAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeaderLevelId).HasColumnName("TeamLeaderLevelID");

                entity.Property(e => e.TeamLeaderNameAgent)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TeamLeaderTreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TftDb>(entity =>
            {
                entity.HasKey(e => e.Tdbid);

                entity.ToTable("TFT_DB");

                entity.HasIndex(e => e.Name, "IX_TFT_DB_Name")
                    .IsUnique();

                entity.HasIndex(e => e.Dbno, "IX_TFT_DB_No")
                    .IsUnique();

                entity.Property(e => e.Tdbid).HasColumnName("TDBID");

                entity.Property(e => e.ConnectionString)
                    .HasMaxLength(5120)
                    .IsUnicode(false);

                entity.Property(e => e.Dbno).HasColumnName("DBNo");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TftFileTemplate>(entity =>
            {
                entity.HasKey(e => e.TfileTemplateId);

                entity.ToTable("TFT_FileTemplate");

                entity.HasIndex(e => e.TemplateName, "IX_TFT_FileTemplate")
                    .IsUnique();

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.Property(e => e.AllowedFileExtensions)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Delimiter)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SheetName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TextQualifier)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TrefFileFormatId).HasColumnName("TRefFileFormatID");
            });

            modelBuilder.Entity<TftFileTemplateColumn>(entity =>
            {
                entity.HasKey(e => e.TfileTemplateColumnId);

                entity.ToTable("TFT_FileTemplateColumn");

                entity.HasIndex(e => new { e.TfileTemplateId, e.ColumnName }, "IX_TFT_FileTemplateColumn_ColName")
                    .IsUnique();

                entity.HasIndex(e => new { e.TfileTemplateId, e.SeqNo }, "IX_TFT_FileTemplateColumn_SeqNo")
                    .IsUnique();

                entity.Property(e => e.TfileTemplateColumnId).HasColumnName("TFileTemplateColumnID");

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Culture)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultValue)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StrRegexValidation1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.StrRegexValidation1ErrMsg)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.Property(e => e.TrefColumnDataTypeId).HasColumnName("TRefColumnDataTypeID");

                entity.Property(e => e.TtransLookupId).HasColumnName("TTransLookupID");

                entity.HasOne(d => d.TfileTemplate)
                    .WithMany(p => p.TftFileTemplateColumns)
                    .HasForeignKey(d => d.TfileTemplateId)
                    .HasConstraintName("FK_TFT_FileTemplateColumn_TFT_FileTemplate");

                entity.HasOne(d => d.TtransLookup)
                    .WithMany(p => p.TftFileTemplateColumns)
                    .HasForeignKey(d => d.TtransLookupId)
                    .HasConstraintName("FK_TFT_FileTemplateColumn_TFT_TransLookup");
            });

            modelBuilder.Entity<TftFileTemplateSample>(entity =>
            {
                entity.HasKey(e => e.TfileTemplateSampleId);

                entity.ToTable("TFT_FileTemplateSample");

                entity.HasIndex(e => new { e.TfileTemplateId, e.Name }, "IX_TFT_FileTemplateSample")
                    .IsUnique();

                entity.Property(e => e.TfileTemplateSampleId).HasColumnName("TFileTemplateSampleID");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.HasOne(d => d.TfileTemplate)
                    .WithMany(p => p.TftFileTemplateSamples)
                    .HasForeignKey(d => d.TfileTemplateId)
                    .HasConstraintName("FK_TFT_FileTemplateSample_TFT_FileTemplate");
            });

            modelBuilder.Entity<TftMailQueue20210303>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TFT_MailQueue_20210303");

                entity.Property(e => e.ErrorLog).IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.LastAttachmentBeginTime).HasColumnType("datetime");

                entity.Property(e => e.LastSendBeginTime).HasColumnType("datetime");

                entity.Property(e => e.LastSendEndTime).HasColumnType("datetime");

                entity.Property(e => e.MailBcc)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("MailBCC");

                entity.Property(e => e.MailCc)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("MailCC");

                entity.Property(e => e.MailTo)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ReplyTo)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Subject)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TmailQueueId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TMailQueueID");

                entity.Property(e => e.TsendMailAccountId).HasColumnName("TSendMailAccountID");
            });

            modelBuilder.Entity<TftTarget>(entity =>
            {
                entity.HasKey(e => e.TtargetId);

                entity.ToTable("TFT_Target");

                entity.HasIndex(e => e.TargetName, "IX_TFT_Target")
                    .IsUnique();

                entity.Property(e => e.TtargetId).HasColumnName("TTargetID");

                entity.Property(e => e.IdcolumnName)
                    .HasMaxLength(256)
                    .HasColumnName("IDColumnName");

                entity.Property(e => e.ObjectName).HasMaxLength(256);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TargetDbno).HasColumnName("TargetDBNo");

                entity.Property(e => e.TargetName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.HasOne(d => d.TargetDbnoNavigation)
                    .WithMany(p => p.TftTargets)
                    .HasPrincipalKey(p => p.Dbno)
                    .HasForeignKey(d => d.TargetDbno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TFT_Target_TFT_DB");
            });

            modelBuilder.Entity<TftTargetParameter>(entity =>
            {
                entity.HasKey(e => e.TtargetParameterId);

                entity.ToTable("TFT_TargetParameter");

                entity.HasIndex(e => new { e.TtargetId, e.ParameterName }, "IX_TFT_TargetParameter")
                    .IsUnique();

                entity.HasIndex(e => new { e.TtargetId, e.SeqNo }, "IX_TFT_TargetParameter_1")
                    .IsUnique();

                entity.Property(e => e.TtargetParameterId).HasColumnName("TTargetParameterID");

                entity.Property(e => e.IsComputed).HasColumnName("is_computed");

                entity.Property(e => e.IsIdentity).HasColumnName("is_identity");

                entity.Property(e => e.IsNullable).HasColumnName("is_nullable");

                entity.Property(e => e.MaxLength).HasColumnName("max_length");

                entity.Property(e => e.ParameterName).HasMaxLength(256);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TtargetId).HasColumnName("TTargetID");

                entity.Property(e => e.UserTypeId).HasColumnName("user_type_id");

                entity.HasOne(d => d.Ttarget)
                    .WithMany(p => p.TftTargetParameters)
                    .HasForeignKey(d => d.TtargetId)
                    .HasConstraintName("FK_TFT_TargetParameter_TFT_Target");
            });

            modelBuilder.Entity<TftTransLookup>(entity =>
            {
                entity.HasKey(e => e.TtransLookupId);

                entity.ToTable("TFT_TransLookup");

                entity.HasIndex(e => e.LookupName, "IX_TFT_TransLookup")
                    .IsUnique();

                entity.Property(e => e.TtransLookupId).HasColumnName("TTransLookupID");

                entity.Property(e => e.DefaultOutput1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultOutput2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultOutput3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultOutput4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InputColumnName1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InputColumnName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InputColumnName3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.InputColumnName4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LookupCacheModeId).HasColumnName("LookupCacheModeID");

                entity.Property(e => e.LookupDbno).HasColumnName("LookupDBNo");

                entity.Property(e => e.LookupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnAlias1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnAlias2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnAlias3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnAlias4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnName1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnName3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutputColumnName4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.WhereClause)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.LookupDbnoNavigation)
                    .WithMany(p => p.TftTransLookups)
                    .HasPrincipalKey(p => p.Dbno)
                    .HasForeignKey(d => d.LookupDbno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TFT_TransLookup_TFT_DB");
            });

            modelBuilder.Entity<TftUpload>(entity =>
            {
                entity.HasKey(e => e.TuploadId);

                entity.ToTable("TFT_Upload");

                entity.HasIndex(e => e.UploadName, "IX_TFT_Upload")
                    .IsUnique();

                entity.Property(e => e.TuploadId).HasColumnName("TUploadID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.Property(e => e.TtargetId).HasColumnName("TTargetID");

                entity.Property(e => e.UploadName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.TfileTemplate)
                    .WithMany(p => p.TftUploads)
                    .HasForeignKey(d => d.TfileTemplateId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TFT_Upload_TFT_FileTemplate");

                entity.HasOne(d => d.Ttarget)
                    .WithMany(p => p.TftUploads)
                    .HasForeignKey(d => d.TtargetId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TFT_Upload_TFT_Target");
            });

            modelBuilder.Entity<TftUploadTemplateMapping>(entity =>
            {
                entity.HasKey(e => e.TuploadTemplateMappingId);

                entity.ToTable("TFT_UploadTemplateMapping");

                entity.HasIndex(e => new { e.TuploadId, e.TargetParameterName }, "IX_TFT_UploadTemplateMapping")
                    .IsUnique();

                entity.Property(e => e.TuploadTemplateMappingId).HasColumnName("TUploadTemplateMappingID");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TargetParameterName).HasMaxLength(256);

                entity.Property(e => e.TemplateColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TuploadId).HasColumnName("TUploadID");

                entity.HasOne(d => d.Tupload)
                    .WithMany(p => p.TftUploadTemplateMappings)
                    .HasForeignKey(d => d.TuploadId)
                    .HasConstraintName("FK_TFT_UploadTemplateMapping_TFT_Upload");
            });

            modelBuilder.Entity<TfundHouse>(entity =>
            {
                entity.HasKey(e => e.FhId);

                entity.ToTable("TFundHouse");

                entity.HasIndex(e => e.FhCode, "IX_TFundHouse")
                    .IsUnique();

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person");

                entity.Property(e => e.ContactPerson2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person2");

                entity.Property(e => e.ContactPerson3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COntact_Person3");

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.FhCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_Code");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.Jsxcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JSXCode");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchingCount)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Count");

                entity.Property(e => e.SwitchingMonth)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Month");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TgenuihistDttot>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_DTTOT");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Iddttot).HasColumnName("IDDTTOT");

                entity.Property(e => e.NamaDttot)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NamaDTTOT");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistKpi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIHIST_KPI");

                entity.Property(e => e.Idkpi).HasColumnName("IDKPI");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistKpiachievement>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIHIST_KPIAchievement");

                entity.Property(e => e.Idkpiachievement).HasColumnName("IDKPIAchievement");

                entity.Property(e => e.Kpiachievement)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KPIAchievement");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistKpiscore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIHIST_KPIScore");

                entity.Property(e => e.Idkpiscore).HasColumnName("IDKPIScore");

                entity.Property(e => e.Score).HasMaxLength(50);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistKpitarget>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_KPITarget");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Idkpitarget).HasColumnName("IDKPITarget");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTagent>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgent");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AajiexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIExpiredDate");

                entity.Property(e => e.Aajiformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIFormat");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Aajipp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIPP");

                entity.Property(e => e.AajistartDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIStartDate");

                entity.Property(e => e.ActivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ActivateDate).HasColumnType("datetime");

                entity.Property(e => e.AgentBrokerFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentType)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Aliasagent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALIASAGENT");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Bic)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BIC");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateDate).HasColumnType("datetime");

                entity.Property(e => e.Effsalary).HasColumnType("datetime");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FormatSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FormatSK");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital");

                entity.Property(e => e.Idname)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idname");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent");

                entity.Property(e => e.InstitutionalType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsPph).HasColumnName("isPPH");

                entity.Property(e => e.IsPpn).HasColumnName("isPPN");

                entity.Property(e => e.KodeKantor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NomorSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NomorSK");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgentName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OtherNameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgentName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RejectBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RejectDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSk)
                    .HasColumnType("date")
                    .HasColumnName("TanggalSK");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.WaperdExpiredDate).HasColumnType("date");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Waperdformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDFormat");

                entity.Property(e => e.Waperdpp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDPP");

                entity.Property(e => e.WaperdstartDate)
                    .HasColumnType("date")
                    .HasColumnName("WAPERDStartDate");

                entity.Property(e => e.WppeexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEExpiredDate");

                entity.Property(e => e.Wppeformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEFormat");

                entity.Property(e => e.Wppeno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPENo");

                entity.Property(e => e.Wppepp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEPP");

                entity.Property(e => e.WppestartDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEStartDate");
            });

            modelBuilder.Entity<TgenuihistTagentAddress>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentAddress");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdagentAddress).HasColumnName("IDAgentAddress");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTagentBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentBankAccount");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdagentBankAccount).HasColumnName("IDAgentBankAccount");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTagentCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentCustomer");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.OldCodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreated).HasColumnType("datetime");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTagentCustomerDm>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentCustomerDM");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTagentProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentProduct");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.FlagMfee).HasColumnName("FlagMFee");

                entity.Property(e => e.FlagMfee1).HasColumnName("FlagMFee1");

                entity.Property(e => e.FlagOfee).HasColumnName("FlagOFee");

                entity.Property(e => e.FlagSfee).HasColumnName("FlagSFee");

                entity.Property(e => e.FlagSfee1).HasColumnName("FlagSFee1");

                entity.Property(e => e.FromAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FromBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdreportType)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDReportType");

                entity.Property(e => e.MfeeCharges).HasColumnName("MFeeCharges");

                entity.Property(e => e.MfeeName).HasColumnName("MFeeName");

                entity.Property(e => e.RedTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RedTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TagentProductId).HasColumnName("TAgentProductID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.ToAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ToBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTagentStructure>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAgentStructure");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.IdagentStructureJournal).HasColumnName("IDAgentStructureJournal");

                entity.Property(e => e.IdagentStructureParent).HasColumnName("IDAgentStructureParent");

                entity.Property(e => e.OldIdagentStructure).HasColumnName("OldIDAgentStructure");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SaldoDateBegin).HasColumnType("date");

                entity.Property(e => e.SaldoDateEnd).HasColumnType("date");

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTasset>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAsset");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Dplk1).HasColumnName("DPLK1");

                entity.Property(e => e.Dplk2).HasColumnName("DPLK2");

                entity.Property(e => e.Dplk3).HasColumnName("DPLK3");

                entity.Property(e => e.Idasset).HasColumnName("IDAsset");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Jht1).HasColumnName("JHT1");

                entity.Property(e => e.Jht2).HasColumnName("JHT2");

                entity.Property(e => e.Jht3).HasColumnName("JHT3");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.Rdc1).HasColumnName("RDC1");

                entity.Property(e => e.Rdc2).HasColumnName("RDC2");

                entity.Property(e => e.Rdc3).HasColumnName("RDC3");

                entity.Property(e => e.Rdpt1).HasColumnName("RDPT1");

                entity.Property(e => e.Rdpt2).HasColumnName("RDPT2");

                entity.Property(e => e.Rdpt3).HasColumnName("RDPT3");

                entity.Property(e => e.Rdpu1).HasColumnName("RDPU1");

                entity.Property(e => e.Rdpu2).HasColumnName("RDPU2");

                entity.Property(e => e.Rdpu3).HasColumnName("RDPU3");

                entity.Property(e => e.Rds1).HasColumnName("RDS1");

                entity.Property(e => e.Rds2).HasColumnName("RDS2");

                entity.Property(e => e.Rds3).HasColumnName("RDS3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTassetClass>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TAssetClass");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Gdpperformance).HasColumnName("GDPPerformance");

                entity.Property(e => e.GdpperformanceIncDec).HasColumnName("GDPPerformanceIncDec");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TproductCategoryId).HasColumnName("TProductCategoryID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceAgent>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceAgent");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AgentName).IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("date");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName).IsUnicode(false);

                entity.Property(e => e.CodeAgentBranch).IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceBalanceAium>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceBalanceAIA");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Cifpayor)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFPayor");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.HolderName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.InsCompCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InsurancedName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.NextPaymentDate).HasColumnType("date");

                entity.Property(e => e.NoRek)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayorName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralBranch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RiskCommenceDate).HasColumnType("date");

                entity.Property(e => e.SettleAcc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spajno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJNo");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubmissionDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TbancAssuranceBalanceAiaId).HasColumnName("TBancAssuranceBalanceAIA_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceBalanceCsi>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceBalanceCSI");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.ClientAccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClientName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Ia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IA");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.IdbancAssuranceBalanceCsi).HasColumnName("IDBancAssuranceBalanceCSI");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceBalanceCsl>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceBalanceCSL");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.IdbancAssuranceBalanceCsl).HasColumnName("IDBancAssuranceBalanceCSL");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceBalanceSunLife>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceBalanceSunLife");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BalanceDt).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.IdbancAssuranceBalanceSunLife).HasColumnName("IDBancAssuranceBalanceSunLife");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idrider)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRider");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.NomorRekening)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceCustomer");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.ReferalPosition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Position");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceFeeBaseIncomeMonthlyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgLevel).HasColumnName("ag_level");

                entity.Property(e => e.AgName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ag_name");

                entity.Property(e => e.AgenCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("agen_code");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Area2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA_2");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("area_name");

                entity.Property(e => e.Bbc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Bigbang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_1");

                entity.Property(e => e.Code2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_2");

                entity.Property(e => e.Code3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_3");

                entity.Property(e => e.Component)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasColumnName("eff_date");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia).HasColumnName("IDBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.Idproduct2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct_2");

                entity.Property(e => e.Insured)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDate)
                    .HasColumnType("date")
                    .HasColumnName("is_date");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title");

                entity.Property(e => e.JobTitle2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title_2");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NamaByStaffing)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Nama_By_Staffing");

                entity.Property(e => e.NbRen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NB_REN");

                entity.Property(e => e.Nett2FeeBased).HasColumnName("nett2_Fee_Based");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.NoSp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no_sp");

                entity.Property(e => e.Policy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyAge).HasColumnName("policy_age");

                entity.Property(e => e.PolicyAgeMonth).HasColumnName("policy_age_month");

                entity.Property(e => e.Policyholder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProprcvDate)
                    .HasColumnType("date")
                    .HasColumnName("proprcv_date");

                entity.Property(e => e.Ptd).HasColumnType("date");

                entity.Property(e => e.Rcd).HasColumnType("date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Reg)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RerateDate)
                    .HasColumnType("date")
                    .HasColumnName("rerate_date");

                entity.Property(e => e.SecyComm).HasColumnName("secy_comm");

                entity.Property(e => e.SecyPrem).HasColumnName("secy_prem");

                entity.Property(e => e.Seg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEG");

                entity.Property(e => e.SglComm).HasColumnName("sgl_comm");

                entity.Property(e => e.SglPrem).HasColumnName("sgl_prem");

                entity.Property(e => e.Sub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUB");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.ThiyComm).HasColumnName("thiy_comm");

                entity.Property(e => e.ThiyPrem).HasColumnName("thiy_prem");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceFeeBaseIncomeSunlife>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AajiExpired)
                    .HasColumnType("date")
                    .HasColumnName("AAJI_Expired");

                entity.Property(e => e.AccountReceive)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Afyp).HasColumnName("AFYP");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BasicPremiumIdr).HasColumnName("BasicPremiumIDR");

                entity.Property(e => e.BranchCodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code_Ref");

                entity.Property(e => e.CifV10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF_V10");

                entity.Property(e => e.Fbi).HasColumnName("FBI");

                entity.Property(e => e.Fbinett).HasColumnName("FBINett");

                entity.Property(e => e.FeebaseforBankGross).HasColumnName("FeebaseforBankGROSS");

                entity.Property(e => e.FeebaseforBankNett).HasColumnName("FeebaseforBankNETT");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReport)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPORT");

                entity.Property(e => e.IaAajiExpired)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_Expired");

                entity.Property(e => e.IaAajiLicense)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_License");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeSunlife).HasColumnName("IDBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.LeadsGenerator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Leads_Generator");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LgAajiLicenseIsb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LG_AAJI_License_ISB");

                entity.Property(e => e.LocationBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Code");

                entity.Property(e => e.LocationBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Name");

                entity.Property(e => e.MainBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Code");

                entity.Property(e => e.MainBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Name");

                entity.Property(e => e.MainProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NbTopUpPremium).HasColumnName("NB_Top_Up_Premium");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.OriginalCurrency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OriginalReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Original_Received_Date");

                entity.Property(e => e.OwnerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OwnerID");

                entity.Property(e => e.Period)
                    .HasColumnType("date")
                    .HasColumnName("PERIOD");

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.Qualified)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUALIFIED");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Received_Date");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SALES_CODE");

                entity.Property(e => e.SegmentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Segment_Code");

                entity.Property(e => e.Segmentasi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SettledDate)
                    .HasColumnType("date")
                    .HasColumnName("Settled_Date");

                entity.Property(e => e.SlfiIaCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Code");

                entity.Property(e => e.SlfiIaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Name");

                entity.Property(e => e.SmpPlan).HasColumnName("SMP_PLAN");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SunlifeWaiverPremiumCi88).HasColumnName("SunlifeWaiverPremiumCI88");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TopUpPremium).HasColumnName("Top_Up_Premium");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.Up).HasColumnName("UP");

                entity.Property(e => e.UpsunlifeAccidentCare).HasColumnName("UPSunlifeAccidentCare");

                entity.Property(e => e.UpsunlifeCriticalCare).HasColumnName("UPSunlifeCriticalCare");

                entity.Property(e => e.UpsunlifeHospitalSurgicalCare)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPSunlifeHospitalSurgicalCare");

                entity.Property(e => e.UpsunlifeMedicalCare).HasColumnName("UPSunlifeMedicalCare");

                entity.Property(e => e.Vat).HasColumnName("VAT");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceFund>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceFund");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Code");

                entity.Property(e => e.FundCurrency).HasColumnName("Fund_Currency");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Name");

                entity.Property(e => e.FundProportion).HasColumnName("Fund_Proportion");

                entity.Property(e => e.FundType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Type");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssurancePartner>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssurancePartner");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address1)
                    .IsUnicode(false)
                    .HasColumnName("Address_1");

                entity.Property(e => e.Address2)
                    .IsUnicode(false)
                    .HasColumnName("Address_2");

                entity.Property(e => e.Address3)
                    .IsUnicode(false)
                    .HasColumnName("Address_3");

                entity.Property(e => e.AssurancePartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Assurance_PartnerCode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Email_Address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdpartnerCategory).HasColumnName("IDPartnerCategory");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Phone");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Office_Phone");

                entity.Property(e => e.PartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Code");

                entity.Property(e => e.PartnerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Name");

                entity.Property(e => e.PersonName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Person_Name");

                entity.Property(e => e.PostalCode).HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssurancePolicy>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssurancePolicy");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BasicPremium).HasColumnName("Basic_Premium");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_Date");

                entity.Property(e => e.EndOfCoverage)
                    .HasColumnType("date")
                    .HasColumnName("End_of_Coverage");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InforceDate)
                    .HasColumnType("date")
                    .HasColumnName("Inforce_Date");

                entity.Property(e => e.InsuredDob)
                    .HasColumnType("date")
                    .HasColumnName("Insured_Dob");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.InvestPremium).HasColumnName("Invest_Premium");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Cabang");

                entity.Property(e => e.Note)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentFrequency).HasColumnName("Payment_Frequency");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("date")
                    .HasColumnName("Receive_Date");

                entity.Property(e => e.SpajNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJ_No");

                entity.Property(e => e.StatusPolis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Polis");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssurancePolicyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssurancePolicyAIA");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Anp).HasColumnName("ANP");

                entity.Property(e => e.ApprovedSpdate)
                    .HasColumnType("date")
                    .HasColumnName("ApprovedSPDate");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bbcname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BBCName");

                entity.Property(e => e.Bbcpolis)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BBCPolis");

                entity.Property(e => e.CaraBayar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClientFA");

                entity.Property(e => e.ClientRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Distrik)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntrySpdate)
                    .HasColumnType("date")
                    .HasColumnName("EntrySPDate");

                entity.Property(e => e.IdbancAssurancePolicyAia).HasColumnName("IDBancAssurancePolicyAIA");

                entity.Property(e => e.InitialBranch)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabangRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KodeFA");

                entity.Property(e => e.KodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSpv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KodeSPV");

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mtu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MTU");

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabangRef)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaFa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NamaFA");

                entity.Property(e => e.NamaPemegangPolis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaRef)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaTertanggung)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NiksalesSode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIKSalesSode");

                entity.Property(e => e.NoCin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoCIN");

                entity.Property(e => e.NoRekening)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NoSp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoSP");

                entity.Property(e => e.PaymentFrequency)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyPlan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProposedDate).HasColumnType("date");

                entity.Property(e => e.Ptddate)
                    .HasColumnType("date")
                    .HasColumnName("PTDDate");

                entity.Property(e => e.Rcddate)
                    .HasColumnType("date")
                    .HasColumnName("RCDDate");

                entity.Property(e => e.Rekening)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StatusSurrenderDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Tmk)
                    .HasColumnType("date")
                    .HasColumnName("TMK");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProduct");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ActiveFlag).HasColumnName("Active_Flag");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.BusinessModel).HasColumnName("Business_Model");

                entity.Property(e => e.CutOff)
                    .HasColumnType("datetime")
                    .HasColumnName("Cut_Off");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.InceptionDate)
                    .HasColumnType("date")
                    .HasColumnName("Inception_Date");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SemiAnually).HasColumnName("Semi_Anually");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProductBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProductBankAccount");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductBankAccount).HasColumnName("IDBancAssuranceProductBankAccount");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProductFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProductFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductFee).HasColumnName("IDBancAssuranceProductFee");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProductFund>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProductFund");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductFund).HasColumnName("IDBancAssuranceProductFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProductRider>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProductRider");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRider).HasColumnName("IDBancAssuranceProductRider");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceProductRule>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceProductRule");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_Name");

                entity.Property(e => e.AccountNumber).HasColumnName("Account_Number");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRule).HasColumnName("IDBancAssuranceProductRule");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceReferral>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceReferral");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Completename)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COMPLETENAME");

                entity.Property(e => e.Coorporatetittle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COORPORATETITTLE");

                entity.Property(e => e.Costcenter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COSTCENTER");

                entity.Property(e => e.Egdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EGDESC");

                entity.Property(e => e.Employeegroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEEGROUP");

                entity.Property(e => e.Employeesubgroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEESUBGROUP");

                entity.Property(e => e.Eselon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESELON");

                entity.Property(e => e.Esgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ESGDESC");

                entity.Property(e => e.IdbancAssuranceReferral).HasColumnName("IDBancAssuranceReferral");

                entity.Property(e => e.Jg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JG");

                entity.Property(e => e.Job)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB");

                entity.Property(e => e.Jobabbr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOBABBR");

                entity.Property(e => e.Jobdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("JOBDESC");

                entity.Property(e => e.Kelompokjabatan)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("KELOMPOKJABATAN");

                entity.Property(e => e.Kodebranch)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KODEBRANCH");

                entity.Property(e => e.Mctext)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("MCTEXT");

                entity.Property(e => e.NoTelp1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Organization)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ORGANIZATION");

                entity.Property(e => e.Orgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ORGDESC");

                entity.Property(e => e.Padesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PADESC");

                entity.Property(e => e.Payareadesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYAREADESC");

                entity.Property(e => e.Payrollarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLAREA");

                entity.Property(e => e.Pernr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERNR");

                entity.Property(e => e.Personnelarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELAREA");

                entity.Property(e => e.Personnelsubarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELSUBAREA");

                entity.Property(e => e.Pg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSITION");

                entity.Property(e => e.Positiondesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("POSITIONDESC");

                entity.Property(e => e.Psadesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PSADESC");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceRegistration>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceRegistration");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Name");

                entity.Property(e => e.CustomerCif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Cif");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Name");

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Code");

                entity.Property(e => e.SalesName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceRegistrationDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceRegistrationDetail");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.IdbancAssuranceRegistrationDetail).HasColumnName("IDBancAssuranceRegistrationDetail");

                entity.Property(e => e.InsuranceCompany)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insurance_Company");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RiderPremium)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceRider>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceRider");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Code");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceRiderPremi>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceRiderPremi");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceRiderPremi).HasColumnName("IDBancAssuranceRiderPremi");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.UangPertanggungan).HasColumnName("Uang_Pertanggungan");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceSpaj>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceSPAJ");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("agentID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.PremiumFrequency).HasColumnName("Premium_frequency");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.Spajstatus)
                    .IsUnicode(false)
                    .HasColumnName("SPAJStatus");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceSpajfund>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceSPAJFund");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.IdbancAssuranceSpajfund).HasColumnName("IDBancAssuranceSPAJFund");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.NavDate)
                    .HasColumnType("date")
                    .HasColumnName("NAV_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceSpajrider>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceSPAJRider");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.IdbancAssuranceSpajrider).HasColumnName("IDBancAssuranceSPAJRider");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTbancAssuranceTransaction>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancAssuranceTransaction");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BillerCode)
                    .HasMaxLength(100)
                    .HasColumnName("Biller_Code");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Currency_Code");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceTransaction).HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.KodeBiller)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Biller");

                entity.Property(e => e.PaymentNo).HasColumnName("Payment_No");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Reference_No");

                entity.Property(e => e.SettlementAmount).HasColumnName("Settlement_Amount");

                entity.Property(e => e.SettlementDate)
                    .HasColumnType("date")
                    .HasColumnName("Settlement_Date");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDate1)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");
            });

            modelBuilder.Entity<TgenuihistTbancassuranceBalanceManulife>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TBancassuranceBalanceManulife");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Cifv10)
                    .HasMaxLength(14)
                    .HasColumnName("CIFV10")
                    .IsFixedLength();

                entity.Property(e => e.Currency)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancassuranceBalanceManulife).HasColumnName("IDBancassuranceBalanceManulife");

                entity.Property(e => e.JatuhTempoPolis).HasColumnType("date");

                entity.Property(e => e.Navcurrent).HasColumnName("NAVCurrent");

                entity.Property(e => e.Navopen).HasColumnName("NAVOpen");

                entity.Property(e => e.PemegangPolis)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Produk)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubmittedDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSaldo).HasColumnType("date");

                entity.Property(e => e.Tertanggung)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcompany>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCompany");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcompany).HasColumnName("IDCompany");

                entity.Property(e => e.KodeAgenPenjual)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TrefSinvestParticipantTypeId).HasColumnName("TRefSInvestParticipantTypeID");
            });

            modelBuilder.Entity<TgenuihistTconfig>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TConfig");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Key)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.TconfigId).HasColumnName("TConfigID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Value)
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTcpfquotum>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCPFQuota");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgentIdfrom).HasColumnName("AgentIDFrom");

                entity.Property(e => e.AgentIdto).HasColumnName("AgentIDTo");

                entity.Property(e => e.CpfquotaTrxType).HasColumnName("CPFQuotaTrxType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcpfquotaId).HasColumnName("TCPFQuotaID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustBankAccount");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomer");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Aidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AIDNo");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Bcnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCNumber");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorExpiredDateOfSupplementaryDocs).HasColumnType("datetime");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorTypeOfSupplementaryDocs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsCorpBond).HasColumnName("isCorpBond");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.IsGovBond).HasColumnName("isGovBond");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.IsMf).HasColumnName("isMF");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.OpDateCorpBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateGovBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateMf)
                    .HasColumnType("datetime")
                    .HasColumnName("OpDateMF");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Sidcorp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDCorp");

                entity.Property(e => e.SidcorpGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDCorpGeneratedDate");

                entity.Property(e => e.SidgeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGeneratedDate");

                entity.Property(e => e.Sidgov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDGov");

                entity.Property(e => e.SidgovGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGovGeneratedDate");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNoStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubRekNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTcustomerAddress>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerAddress");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DistanceToBranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.District)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerAddress).HasColumnName("IDCustomerAddress");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Neighborhood)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneExtension)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubDistrict)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerAuthContact>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerAuthContact");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(767)
                    .IsUnicode(false);

                entity.Property(e => e.IdauthorizationType).HasColumnName("IDAuthorizationType");

                entity.Property(e => e.Idcity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCity");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerAuthContact).HasColumnName("IDCustomerAuthContact");

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idprovinsi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDProvinsi");

                entity.Property(e => e.IdregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IDRegistrationDate");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoID");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Npwpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPDate");

                entity.Property(e => e.OfficeNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerDocument>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerDocuments");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerDocument).HasColumnName("IDCustomerDocument");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerHeir>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerHeir");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerHeir).HasColumnName("IDCustomerHeir");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Relationship)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerModelRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerModelRiskProfileMapping");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ModelProfileId).HasColumnName("Model_ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerModelRiskProfileMappingId).HasColumnName("TCustomerModelRiskProfileMappingID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerOwnership>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerOwnership");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerOwnership).HasColumnName("IDCustomerOwnership");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerProductRekeningMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerProductRekeningMapping");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerProductRekeningMapping).HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerProductRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerProductRiskProfileMapping");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ProductProfileId).HasColumnName("Product_ProfileID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerProductRiskProfileMappingId).HasColumnName("TCustomerProductRiskProfileMappingID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerRegInvestmentPlan");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BreakDate).HasColumnType("date");

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("date");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuihistTcustomerRiskProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerRiskProfile");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTcustomerRiskProfileAnswer>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TCustomerRiskProfileAnswer");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTexchangeRate>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TExchangeRate");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateId).HasColumnName("TExchangeRateID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTexchangeRateByProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TExchangeRateByProduct");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateByProductId).HasColumnName("TExchangeRateByProductID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTexpense>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TExpense");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idexpense).HasColumnName("IDExpense");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTfundHouse>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TFundHouse");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person");

                entity.Property(e => e.ContactPerson2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person2");

                entity.Property(e => e.ContactPerson3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COntact_Person3");

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.FhCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_Code");

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.Jsxcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JSXCode");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchingCount)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Count");

                entity.Property(e => e.SwitchingMonth)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Month");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTgoal>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TGoal");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Current)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Target)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TgoalId).HasColumnName("TGoalID");

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTholdUnit>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_THoldUnit");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CollateralId).HasColumnName("CollateralID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.OldTholdUnitId).HasColumnName("OldTHoldUnitID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TholdUnitId).HasColumnName("THoldUnitID");
            });

            modelBuilder.Entity<TgenuihistTholiday>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_Tholiday");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HolidayDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idholiday).HasColumnName("IDHoliday");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTholidayGeneral>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_THolidayGeneral");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdholidayGeneral).HasColumnName("IDHolidayGeneral");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTincome>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TIncome");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTinsuranceCover>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TInsuranceCover");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.MonthlyExpenseDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TinsuranceCoverId).HasColumnName("TInsuranceCoverID");

                entity.Property(e => e.Vchar1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Vchar2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTkpiachievement>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TKPIAchievement");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Kpiachievement).HasColumnName("KPIAchievement");

                entity.Property(e => e.KpiachievementId).HasColumnName("KPIAchievementID");

                entity.Property(e => e.Kpisign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("KPISign");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTkpisalary>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TKPISalary");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.EffSalaryDate).HasColumnType("date");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.KpisalaryId).HasColumnName("KPISalaryID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTkpitarget>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TKPITarget");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.KpitargetId).HasColumnName("KPITargetID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TargetActiveAccount).HasColumnName("Target_ActiveAccount");

                entity.Property(e => e.TargetNcf).HasColumnName("Target_NCF");

                entity.Property(e => e.TargetQualitative).HasColumnName("Target_Qualitative");

                entity.Property(e => e.TargetRevenue).HasColumnName("Target_Revenue");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.WeightActiveAccount).HasColumnName("Weight_ActiveAccount");

                entity.Property(e => e.WeightNcf).HasColumnName("Weight_NCF");

                entity.Property(e => e.WeightQualitative).HasColumnName("Weight_Qualitative");

                entity.Property(e => e.WeightRevenue).HasColumnName("Weight_Revenue");
            });

            modelBuilder.Entity<TgenuihistTkursGeneral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIHIST_TKursGeneral");

                entity.Property(e => e.CurrDate).HasColumnType("datetime");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTmacroEconomicScenario>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TMacroEconomicScenario");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TmacroEconomicScenarioId).HasColumnName("TMacroEconomicScenarioID");
            });

            modelBuilder.Entity<TgenuihistTmodel>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TModel");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.ModelName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");
            });

            modelBuilder.Entity<TgenuihistTnav>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TNAV");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BtaxRevenue).HasColumnName("BTaxRevenue");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Idnav).HasColumnName("IDNav");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Ihsg).HasColumnName("IHSG");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.NoUhactive).HasColumnName("NoUHActive");

                entity.Property(e => e.NoUhtotal).HasColumnName("NoUHTotal");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TotalMfee).HasColumnName("TotalMFee");
            });

            modelBuilder.Entity<TgenuihistTproduct>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProduct");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccStatementName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AumdateAdd).HasColumnName("AUMDateAdd");

                entity.Property(e => e.BapepamLkarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BapepamLKArticle");

                entity.Property(e => e.BapepamLkarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BapepamLKArticleDate");

                entity.Property(e => e.Bkcode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BKCode");

                entity.Property(e => e.BuyFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CbestNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CBestNo");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CustFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeBatchOrder)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeRedemption)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSubscription)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSwitching)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DividentInvestment)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdjenisProduct).HasColumnName("IDJenisProduct");

                entity.Property(e => e.Idmftype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMFType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductType).HasColumnName("IDProductType");

                entity.Property(e => e.Idstatus).HasColumnName("IDStatus");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.InitialNav).HasColumnName("InitialNAV");

                entity.Property(e => e.IsAutoEod).HasColumnName("IsAutoEOD");

                entity.Property(e => e.IsFoundation).HasColumnName("isFoundation");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode");

                entity.Property(e => e.Kctfile)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KCTFile");

                entity.Property(e => e.Kikarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKArticle");

                entity.Property(e => e.KikarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KIKArticleDate");

                entity.Property(e => e.KikplaceEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKPlaceEstablished");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.MaxTotDailyOf)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaxUnit)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.MaxUnits).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MaximumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MinimumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumRedemptionAmount).HasColumnType("numeric(15, 2)");

                entity.Property(e => e.NavredMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NAVRedMethod");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPRegisterDate");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCountry)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Quota).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RedFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RelationalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Scano)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCANo");

                entity.Property(e => e.SellFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Sidno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIDNo");

                entity.Property(e => e.SinvestFundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SInvestFundCode");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SubFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTproductBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductBankAccount");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDProductBankAccount");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Sacode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SACode");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTproductExitWindow>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductExitWindow");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductExitWindow).HasColumnName("IDProductExitWindow");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTproductFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeeRange).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductFee).HasColumnName("IDProductFee");

                entity.Property(e => e.PfolioCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SignMonth)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Type)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTproductFeeByDate>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductFeeByDate");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TproductFeeByDateId).HasColumnName("TProductFeeByDateID");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTproductOfferingPeriod>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductOfferingPeriod");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductOfferingPeriod).HasColumnName("IDProductOfferingPeriod");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTproductRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductRegInvestmentPlan");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TproductRegInvestmentPlanId).HasColumnName("TProductRegInvestmentPlanID");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuihistTproductTransactionFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TProductTransactionFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("date");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuihistTrefBank>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefBank");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BimemberCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BIMemberCode");

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrefBankBranch>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefBankBranch");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BranchCity)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchFax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BranchPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchStreet)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.BranchZip)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrefBankCustody>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefBankCustody");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCity)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyFax)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.UnitHolderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuihistTrefCurrency>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefCurrency");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrefModel>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefModel");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");

                entity.Property(e => e.TproductTypeId).HasColumnName("TProductTypeID");

                entity.Property(e => e.TrefModelId).HasColumnName("TRefModelID");
            });

            modelBuilder.Entity<TgenuihistTrefProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefProfile");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrefProfileQuestion>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefProfileQuestion");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrefProfileQuestionOption>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRefProfileQuestionOption");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.OptionId)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OptionID");

                entity.Property(e => e.OptionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTreferenceDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TReferenceDetail");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TreferenceDetailId).HasColumnName("TReferenceDetailID");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuihistTreferenceGroup>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TReferenceGroup");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuihistTregularInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRegularInvestmentPlan");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.InvestmentPlanCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvestmentPlanName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuihistTregularInvestmentPlanFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRegularInvestmentPlanFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuihistTregularInvestmentPlanFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRegularInvestmentPlanFeeDetail");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TregularInvestmentPlanFeeDetailId).HasColumnName("TRegularInvestmentPlanFeeDetailID");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuihistTretirement>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRetirement");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CurrentYear)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TretirementId).HasColumnName("TRetirementID");
            });

            modelBuilder.Entity<TgenuihistTrevenueAgentCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRevenueAgentCustomer");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.RevenueAgentCustomerId).HasColumnName("RevenueAgentCustomerID");

                entity.Property(e => e.RevenueSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTrevenueTransferAgent>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TRevenueTransferAgent");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.RevenueSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RevenueTransferAgentId).HasColumnName("RevenueTransferAgentID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTsharingFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TSharingFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeType)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IsAumproduct).HasColumnName("IsAUMProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTsharingFeeRule>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TSharingFeeRule");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeRuleId).HasColumnName("FeeRuleID");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistTtransactionBooking>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TTransactionBooking");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.CustAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CustIdbankBranch).HasColumnName("CustIDBankBranch");

                entity.Property(e => e.CustIdcurrency).HasColumnName("CustIDCurrency");

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IdtransactionBooking).HasColumnName("IDTransactionBooking");

                entity.Property(e => e.IsWaiver).HasColumnName("isWaiver");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProdIdbankBranch).HasColumnName("ProdIDBankBranch");

                entity.Property(e => e.ProdIdcurrency).HasColumnName("ProdIDCurrency");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TransactionDate).HasColumnType("date");
            });

            modelBuilder.Entity<TgenuihistTtransactionFee>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TTransactionFee");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuihistTtransactionFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuihistTableId);

                entity.ToTable("TGENUIHIST_TTransactionFeeDetail");

                entity.Property(e => e.TgenuihistTableId).HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.AgeType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TtransactionFeeDetailId).HasColumnName("TTransactionFeeDetailID");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuihistVSsoRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TGENUIHIST_v_SSO_Role");

                entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");

                entity.Property(e => e.HistTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("HIST_TABLE_ID");

                entity.Property(e => e.RoleDescription)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistVSsoRoleMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TGENUIHIST_v_SSO_RoleMenu");

                entity.Property(e => e.HistTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("HIST_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuihistVSsoUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TGENUIHIST_v_SSO_User");

                entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");

                entity.Property(e => e.Comment)
                    .HasMaxLength(2048)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.HistTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("HIST_TABLE_ID");

                entity.Property(e => e.InactivePeriodBegin).HasColumnType("date");

                entity.Property(e => e.InactivePeriodEnd).HasColumnType("date");

                entity.Property(e => e.LastPasswordChangeTime).HasColumnType("datetime");

                entity.Property(e => e.Password)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuijourKpi>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_KPI");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idkpi).HasColumnName("IDKPI");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourKpiachievement>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_KPIAchievement");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idkpiachievement).HasColumnName("IDKPIAchievement");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourKpitarget>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_KPITarget");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idkpitarget).HasColumnName("IDKPITarget");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTagent>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TAgent");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTasset>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TAsset");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idasset).HasColumnName("IDAsset");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTassetClass>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TAssetClass");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceAgent>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceAgent");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceBalanceAium>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceBalanceAIA");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TbancAssuranceBalanceAiaId).HasColumnName("TBancAssuranceBalanceAIA_ID");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceBalanceCsi>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceBalanceCSI");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceBalanceCsi).HasColumnName("IDBancAssuranceBalanceCSI");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceBalanceCsl>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceBalanceCSL");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceBalanceCsl).HasColumnName("IDBancAssuranceBalanceCSL");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceBalanceSunLife>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceBalanceSunLife");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceBalanceSunLife).HasColumnName("IDBancAssuranceBalanceSunLife");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceCustomer");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceFeeBaseIncomeMonthlyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia).HasColumnName("IDBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceFeeBaseIncomeSunlife>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeSunlife).HasColumnName("IDBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceFund>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceFund");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssurancePartner>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssurancePartner");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssurancePolicy>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssurancePolicy");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssurancePolicyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssurancePolicyAIA");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssurancePolicyAia).HasColumnName("IDBancAssurancePolicyAIA");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceProduct");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceReferral>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceReferral");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceReferral).HasColumnName("IDBancAssuranceReferral");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceRegistration>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceRegistration");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceRegistrationDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceRegistrationDetail");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRegistrationDetail).HasColumnName("IDBancAssuranceRegistrationDetail");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceRider>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceRider");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceRiderPremi>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceRiderPremi");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRiderPremi).HasColumnName("IDBancAssuranceRiderPremi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceSpaj>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceSPAJ");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.Spajstatus)
                    .IsUnicode(false)
                    .HasColumnName("SPAJStatus");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancAssuranceTransaction>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancAssuranceTransaction");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceTransaction).HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTbancassuranceBalanceManulife>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TBancassuranceBalanceManulife");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbancassuranceBalanceManulife).HasColumnName("IDBancassuranceBalanceManulife");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTcompany>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCompany");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idcompany).HasColumnName("IDCompany");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTconfig>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TConfig");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TconfigId).HasColumnName("TConfigID");
            });

            modelBuilder.Entity<TgenuijourTcpfquotum>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCPFQuota");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TcpfquotaId).HasColumnName("TCPFQuotaID");
            });

            modelBuilder.Entity<TgenuijourTcustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomer");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTcustomerModelRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomerModelRiskProfileMapping");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TcustomerModelRiskProfileMappingId).HasColumnName("TCustomerModelRiskProfileMappingID");
            });

            modelBuilder.Entity<TgenuijourTcustomerProductRekeningMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomerProductRekeningMapping");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdcustomerProductRekeningMapping).HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTcustomerProductRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomerProductRiskProfileMapping");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TcustomerProductRiskProfileMappingId).HasColumnName("TCustomerProductRiskProfileMappingID");
            });

            modelBuilder.Entity<TgenuijourTcustomerRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomerRegInvestmentPlan");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuijourTcustomerRiskProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TCustomerRiskProfile");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<TgenuijourTexchangeRate>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TExchangeRate");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TexchangeRateId).HasColumnName("TExchangeRateID");
            });

            modelBuilder.Entity<TgenuijourTexchangeRateByProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TExchangeRateByProduct");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TexchangeRateByProductId).HasColumnName("TExchangeRateByProductID");
            });

            modelBuilder.Entity<TgenuijourTexpense>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TExpense");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idexpense).HasColumnName("IDExpense");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTfundHouse>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TFundHouse");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTgoal>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TGoal");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TgoalId).HasColumnName("TGoalID");
            });

            modelBuilder.Entity<TgenuijourTholdUnit>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_THoldUnit");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TholdUnitId).HasColumnName("THoldUnitID");
            });

            modelBuilder.Entity<TgenuijourTholiday>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_Tholiday");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idholiday).HasColumnName("IDHoliday");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTholidayGeneral>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_THolidayGeneral");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdholidayGeneral).HasColumnName("IDHolidayGeneral");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTincome>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TIncome");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTinsuranceCover>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TInsuranceCover");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TinsuranceCoverId).HasColumnName("TInsuranceCoverID");
            });

            modelBuilder.Entity<TgenuijourTkpiachievement>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TKPIAchievement");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.KpiachievementId).HasColumnName("KPIAchievementID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTkpisalary>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TKPISalary");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.KpisalaryId).HasColumnName("KPISalaryID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTkpitarget>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TKPITarget");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.KpitargetId).HasColumnName("KPITargetID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTkursGeneral>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TKursGeneral");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TgenuijourTmacroEconomicScenario>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TMacroEconomicScenario");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TmacroEconomicScenarioId).HasColumnName("TMacroEconomicScenarioID");
            });

            modelBuilder.Entity<TgenuijourTmodel>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TModel");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");
            });

            modelBuilder.Entity<TgenuijourTnav>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TNAV");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idnav).HasColumnName("IDNav");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTproduct>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TProduct");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefBank>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefBank");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefBankBranch>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefBankBranch");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefBankCustody>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefBankCustody");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefCurrency>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefCurrency");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefProfile");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrefProfileQuestion>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRefProfileQuestion");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTreferenceGroup>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TReferenceGroup");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuijourTregularInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRegularInvestmentPlan");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuijourTregularInvestmentPlanFee>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRegularInvestmentPlanFee");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuijourTretirement>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRetirement");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TretirementId).HasColumnName("TRetirementID");
            });

            modelBuilder.Entity<TgenuijourTrevenueAgentCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRevenueAgentCustomer");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.RevenueAgentCustomerId).HasColumnName("RevenueAgentCustomerID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTrevenueTransferAgent>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TRevenueTransferAgent");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.RevenueTransferAgentId).HasColumnName("RevenueTransferAgentID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTsharingFee>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TSharingFee");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTtransactionBooking>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TTransactionBooking");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.IdtransactionBooking).HasColumnName("IDTransactionBooking");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");
            });

            modelBuilder.Entity<TgenuijourTtransactionFee>(entity =>
            {
                entity.HasKey(e => e.TgenuijourTableId);

                entity.ToTable("TGENUIJOUR_TTransactionFee");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuijourVSsoRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TGENUIJOUR_v_SSO_Role");

                entity.Property(e => e.RoleId).HasColumnName("RoleID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TgenuijourTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TGENUIJOUR_TABLE_ID");
            });

            modelBuilder.Entity<TgenuijourVSsoUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("TGENUIJOUR_v_SSO_User");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.TgenuijourTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.UserId).HasColumnName("UserID");
            });

            modelBuilder.Entity<TgenuipendDttot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_DTTOT");

                entity.Property(e => e.Iddttot).HasColumnName("IDDTTOT");

                entity.Property(e => e.NamaDttot)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NamaDTTOT");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TgenuipendKpi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_KPI");

                entity.Property(e => e.Idkpi).HasColumnName("IDKPI");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TgenuipendKpiachievement>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_KPIACHIEVEMENT");

                entity.Property(e => e.Idkpiachievement).HasColumnName("IDKPIAchievement");

                entity.Property(e => e.Kpiachievement)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KPIAchievement");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendKpiscore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_KPIScore");

                entity.Property(e => e.Idkpiscore).HasColumnName("IDKPIScore");

                entity.Property(e => e.Score).HasMaxLength(50);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TgenuipendKpitarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_KPITarget");

                entity.Property(e => e.Idkpitarget).HasColumnName("IDKPITarget");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TgenuipendTagent>(entity =>
            {
                entity.HasKey(e => e.AgentId);

                entity.ToTable("TGENUIPEND_TAgent");

                entity.Property(e => e.AgentId)
                    .ValueGeneratedNever()
                    .HasColumnName("AgentID");

                entity.Property(e => e.AajiexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIExpiredDate");

                entity.Property(e => e.Aajiformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIFormat");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Aajipp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIPP");

                entity.Property(e => e.AajistartDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIStartDate");

                entity.Property(e => e.ActivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ActivateDate).HasColumnType("datetime");

                entity.Property(e => e.AgentBrokerFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentType)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Aliasagent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALIASAGENT");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Bic)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BIC");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateDate).HasColumnType("datetime");

                entity.Property(e => e.Effsalary).HasColumnType("datetime");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FormatSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FormatSK");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital");

                entity.Property(e => e.Idname)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idname");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent");

                entity.Property(e => e.InstitutionalType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsPph).HasColumnName("isPPH");

                entity.Property(e => e.IsPpn).HasColumnName("isPPN");

                entity.Property(e => e.KodeKantor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NomorSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NomorSK");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgentName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OtherNameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgentName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RejectBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RejectDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSk)
                    .HasColumnType("date")
                    .HasColumnName("TanggalSK");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.WaperdExpiredDate).HasColumnType("date");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Waperdformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDFormat");

                entity.Property(e => e.Waperdpp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDPP");

                entity.Property(e => e.WaperdstartDate)
                    .HasColumnType("date")
                    .HasColumnName("WAPERDStartDate");

                entity.Property(e => e.WppeexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEExpiredDate");

                entity.Property(e => e.Wppeformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEFormat");

                entity.Property(e => e.Wppeno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPENo");

                entity.Property(e => e.Wppepp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEPP");

                entity.Property(e => e.WppestartDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEStartDate");
            });

            modelBuilder.Entity<TgenuipendTagentAddress>(entity =>
            {
                entity.HasKey(e => e.IdagentAddress);

                entity.ToTable("TGENUIPEND_TAgentAddress");

                entity.Property(e => e.IdagentAddress)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAgentAddress");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTagentBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdagentBankAccount);

                entity.ToTable("TGENUIPEND_TAgentBankAccount");

                entity.Property(e => e.IdagentBankAccount)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAgentBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTagentCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TAgentCustomer");

                entity.HasIndex(e => e.IdagentCustomer, "IX_TGENUIPEND_TAgentCustomer")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.OldCodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreated).HasColumnType("datetime");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTagentCustomerDm>(entity =>
            {
                entity.HasKey(e => e.IdagentStructure);

                entity.ToTable("TGENUIPEND_TAgentCustomerDM");

                entity.Property(e => e.IdagentStructure)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAgentStructure");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTagentProduct>(entity =>
            {
                entity.HasKey(e => e.TagentProductId);

                entity.ToTable("TGENUIPEND_TAgentProduct");

                entity.Property(e => e.TagentProductId)
                    .ValueGeneratedNever()
                    .HasColumnName("TAgentProductID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("date")
                    .HasColumnName("effectiveDate");

                entity.Property(e => e.FlagMfee).HasColumnName("FlagMFee");

                entity.Property(e => e.FlagMfee1).HasColumnName("FlagMFee1");

                entity.Property(e => e.FlagOfee).HasColumnName("FlagOFee");

                entity.Property(e => e.FlagSfee).HasColumnName("FlagSFee");

                entity.Property(e => e.FlagSfee1).HasColumnName("FlagSFee1");

                entity.Property(e => e.FromAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FromBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdreportType)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDReportType");

                entity.Property(e => e.MfeeCharges).HasColumnName("MFeeCharges");

                entity.Property(e => e.MfeeName).HasColumnName("MFeeName");

                entity.Property(e => e.RedTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RedTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.ToAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ToBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTagentStructure>(entity =>
            {
                entity.HasKey(e => e.IdagentStructure);

                entity.ToTable("TGENUIPEND_TAgentStructure");

                entity.Property(e => e.IdagentStructure)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructureJournal).HasColumnName("IDAgentStructureJournal");

                entity.Property(e => e.IdagentStructureParent).HasColumnName("IDAgentStructureParent");

                entity.Property(e => e.OldIdagentStructure).HasColumnName("OldIDAgentStructure");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SaldoDateBegin).HasColumnType("date");

                entity.Property(e => e.SaldoDateEnd).HasColumnType("date");

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTasset>(entity =>
            {
                entity.HasKey(e => e.Idasset);

                entity.ToTable("TGENUIPEND_TAsset");

                entity.Property(e => e.Idasset)
                    .ValueGeneratedNever()
                    .HasColumnName("IDAsset");

                entity.Property(e => e.Dplk1).HasColumnName("DPLK1");

                entity.Property(e => e.Dplk2).HasColumnName("DPLK2");

                entity.Property(e => e.Dplk3).HasColumnName("DPLK3");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Jht1).HasColumnName("JHT1");

                entity.Property(e => e.Jht2).HasColumnName("JHT2");

                entity.Property(e => e.Jht3).HasColumnName("JHT3");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.Rdc1).HasColumnName("RDC1");

                entity.Property(e => e.Rdc2).HasColumnName("RDC2");

                entity.Property(e => e.Rdc3).HasColumnName("RDC3");

                entity.Property(e => e.Rdpt1).HasColumnName("RDPT1");

                entity.Property(e => e.Rdpt2).HasColumnName("RDPT2");

                entity.Property(e => e.Rdpt3).HasColumnName("RDPT3");

                entity.Property(e => e.Rdpu1).HasColumnName("RDPU1");

                entity.Property(e => e.Rdpu2).HasColumnName("RDPU2");

                entity.Property(e => e.Rdpu3).HasColumnName("RDPU3");

                entity.Property(e => e.Rds1).HasColumnName("RDS1");

                entity.Property(e => e.Rds2).HasColumnName("RDS2");

                entity.Property(e => e.Rds3).HasColumnName("RDS3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTassetClass>(entity =>
            {
                entity.HasKey(e => e.TassetClassId);

                entity.ToTable("TGENUIPEND_TAssetClass");

                entity.Property(e => e.TassetClassId)
                    .ValueGeneratedNever()
                    .HasColumnName("TAssetClassID");

                entity.Property(e => e.Gdpperformance).HasColumnName("GDPPerformance");

                entity.Property(e => e.GdpperformanceIncDec).HasColumnName("GDPPerformanceIncDec");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TproductCategoryId).HasColumnName("TProductCategoryID");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceAgent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceAgent");

                entity.HasIndex(e => e.IdbancAssuranceAgent, "IX_TGENUIPEND_TBancAssuranceAgent")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AgentName).IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("date");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName).IsUnicode(false);

                entity.Property(e => e.CodeAgentBranch).IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceBalanceAium>(entity =>
            {
                entity.HasKey(e => e.TbancAssuranceBalanceAiaId);

                entity.ToTable("TGENUIPEND_TBancAssuranceBalanceAIA");

                entity.Property(e => e.TbancAssuranceBalanceAiaId)
                    .ValueGeneratedNever()
                    .HasColumnName("TBancAssuranceBalanceAIA_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Cifpayor)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFPayor");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.HolderName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.InsCompCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InsurancedName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.NextPaymentDate).HasColumnType("date");

                entity.Property(e => e.NoRek)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayorName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralBranch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RiskCommenceDate).HasColumnType("date");

                entity.Property(e => e.SettleAcc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spajno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJNo");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubmissionDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceBalanceCsi>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceCsi);

                entity.ToTable("TGENUIPEND_TBancAssuranceBalanceCSI");

                entity.Property(e => e.IdbancAssuranceBalanceCsi)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceBalanceCSI");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.ClientAccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClientName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Ia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IA");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceBalanceCsl>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceCsl);

                entity.ToTable("TGENUIPEND_TBancAssuranceBalanceCSL");

                entity.Property(e => e.IdbancAssuranceBalanceCsl)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceBalanceCSL");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceBalanceSunLife>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceBalanceSunLife);

                entity.ToTable("TGENUIPEND_TBancAssuranceBalanceSunLife");

                entity.Property(e => e.IdbancAssuranceBalanceSunLife)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceBalanceSunLife");

                entity.Property(e => e.BalanceDt).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idrider)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRider");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.NomorRekening)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceCustomer");

                entity.HasIndex(e => e.IdbancAssuranceCustomer, "IX_TGENUIPEND_TBancAssuranceCustomer")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.ReferalPosition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Position");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceFeeBaseIncomeMonthlyAium>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia);

                entity.ToTable("TGENUIPEND_TBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.AgLevel).HasColumnName("ag_level");

                entity.Property(e => e.AgName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ag_name");

                entity.Property(e => e.AgenCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("agen_code");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Area2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA_2");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("area_name");

                entity.Property(e => e.Bbc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Bigbang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_1");

                entity.Property(e => e.Code2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_2");

                entity.Property(e => e.Code3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_3");

                entity.Property(e => e.Component)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasColumnName("eff_date");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.Idproduct2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct_2");

                entity.Property(e => e.Insured)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDate)
                    .HasColumnType("date")
                    .HasColumnName("is_date");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title");

                entity.Property(e => e.JobTitle2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title_2");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NamaByStaffing)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Nama_By_Staffing");

                entity.Property(e => e.NbRen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NB_REN");

                entity.Property(e => e.Nett2FeeBased).HasColumnName("nett2_Fee_Based");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.NoSp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no_sp");

                entity.Property(e => e.Policy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyAge).HasColumnName("policy_age");

                entity.Property(e => e.PolicyAgeMonth).HasColumnName("policy_age_month");

                entity.Property(e => e.Policyholder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProprcvDate)
                    .HasColumnType("date")
                    .HasColumnName("proprcv_date");

                entity.Property(e => e.Ptd).HasColumnType("date");

                entity.Property(e => e.Rcd).HasColumnType("date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Reg)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RerateDate)
                    .HasColumnType("date")
                    .HasColumnName("rerate_date");

                entity.Property(e => e.SecyComm).HasColumnName("secy_comm");

                entity.Property(e => e.SecyPrem).HasColumnName("secy_prem");

                entity.Property(e => e.Seg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEG");

                entity.Property(e => e.SglComm).HasColumnName("sgl_comm");

                entity.Property(e => e.SglPrem).HasColumnName("sgl_prem");

                entity.Property(e => e.Sub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUB");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.ThiyComm).HasColumnName("thiy_comm");

                entity.Property(e => e.ThiyPrem).HasColumnName("thiy_prem");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceFeeBaseIncomeSunlife>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceFeeBaseIncomeSunlife);

                entity.ToTable("TGENUIPEND_TBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeSunlife)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.AajiExpired)
                    .HasColumnType("date")
                    .HasColumnName("AAJI_Expired");

                entity.Property(e => e.AccountReceive)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Afyp).HasColumnName("AFYP");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BasicPremiumIdr).HasColumnName("BasicPremiumIDR");

                entity.Property(e => e.BranchCodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code_Ref");

                entity.Property(e => e.CifV10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF_V10");

                entity.Property(e => e.Fbi).HasColumnName("FBI");

                entity.Property(e => e.Fbinett).HasColumnName("FBINett");

                entity.Property(e => e.FeebaseforBankGross).HasColumnName("FeebaseforBankGROSS");

                entity.Property(e => e.FeebaseforBankNett).HasColumnName("FeebaseforBankNETT");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReport)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPORT");

                entity.Property(e => e.IaAajiExpired)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_Expired");

                entity.Property(e => e.IaAajiLicense)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_License");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.LeadsGenerator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Leads_Generator");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LgAajiLicenseIsb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LG_AAJI_License_ISB");

                entity.Property(e => e.LocationBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Code");

                entity.Property(e => e.LocationBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Name");

                entity.Property(e => e.MainBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Code");

                entity.Property(e => e.MainBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Name");

                entity.Property(e => e.MainProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NbTopUpPremium).HasColumnName("NB_Top_Up_Premium");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.OriginalCurrency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OriginalReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Original_Received_Date");

                entity.Property(e => e.OwnerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OwnerID");

                entity.Property(e => e.Period)
                    .HasColumnType("date")
                    .HasColumnName("PERIOD");

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.Qualified)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUALIFIED");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Received_Date");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SALES_CODE");

                entity.Property(e => e.SegmentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Segment_Code");

                entity.Property(e => e.Segmentasi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SettledDate)
                    .HasColumnType("date")
                    .HasColumnName("Settled_Date");

                entity.Property(e => e.SlfiIaCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Code");

                entity.Property(e => e.SlfiIaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Name");

                entity.Property(e => e.SmpPlan).HasColumnName("SMP_PLAN");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SunlifeWaiverPremiumCi88).HasColumnName("SunlifeWaiverPremiumCI88");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TopUpPremium).HasColumnName("Top_Up_Premium");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.Up).HasColumnName("UP");

                entity.Property(e => e.UpsunlifeAccidentCare).HasColumnName("UPSunlifeAccidentCare");

                entity.Property(e => e.UpsunlifeCriticalCare).HasColumnName("UPSunlifeCriticalCare");

                entity.Property(e => e.UpsunlifeHospitalSurgicalCare)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPSunlifeHospitalSurgicalCare");

                entity.Property(e => e.UpsunlifeMedicalCare).HasColumnName("UPSunlifeMedicalCare");

                entity.Property(e => e.Vat).HasColumnName("VAT");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceFund>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceFund");

                entity.HasIndex(e => e.IdbancAssuranceFund, "IX_TGENUIPEND_TBancAssuranceFund")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.FundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Code");

                entity.Property(e => e.FundCurrency).HasColumnName("Fund_Currency");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Name");

                entity.Property(e => e.FundProportion).HasColumnName("Fund_Proportion");

                entity.Property(e => e.FundType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Type");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssurancePartner>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssurancePartner");

                entity.HasIndex(e => e.IdbancAssurancePartner, "IX_TGENUIPEND_TBancAssurancePartner")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Address1)
                    .IsUnicode(false)
                    .HasColumnName("Address_1");

                entity.Property(e => e.Address2)
                    .IsUnicode(false)
                    .HasColumnName("Address_2");

                entity.Property(e => e.Address3)
                    .IsUnicode(false)
                    .HasColumnName("Address_3");

                entity.Property(e => e.AssurancePartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Assurance_PartnerCode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Email_Address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdpartnerCategory).HasColumnName("IDPartnerCategory");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Phone");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Office_Phone");

                entity.Property(e => e.PartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Code");

                entity.Property(e => e.PartnerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Name");

                entity.Property(e => e.PersonName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Person_Name");

                entity.Property(e => e.PostalCode).HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTbancAssurancePolicy>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePolicy);

                entity.ToTable("TGENUIPEND_TBancAssurancePolicy");

                entity.Property(e => e.IdbancAssurancePolicy)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BasicPremium).HasColumnName("Basic_Premium");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_Date");

                entity.Property(e => e.EndOfCoverage)
                    .HasColumnType("date")
                    .HasColumnName("End_of_Coverage");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InforceDate)
                    .HasColumnType("date")
                    .HasColumnName("Inforce_Date");

                entity.Property(e => e.InsuredDob)
                    .HasColumnType("date")
                    .HasColumnName("Insured_Dob");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.InvestPremium).HasColumnName("Invest_Premium");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Cabang");

                entity.Property(e => e.Note)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentFrequency).HasColumnName("Payment_Frequency");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("date")
                    .HasColumnName("Receive_Date");

                entity.Property(e => e.SpajNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJ_No");

                entity.Property(e => e.StatusPolis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Polis");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssurancePolicyAium>(entity =>
            {
                entity.HasKey(e => e.IdbancAssurancePolicyAia);

                entity.ToTable("TGENUIPEND_TBancAssurancePolicyAIA");

                entity.Property(e => e.IdbancAssurancePolicyAia)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssurancePolicyAIA");

                entity.Property(e => e.Anp).HasColumnName("ANP");

                entity.Property(e => e.ApprovedSpdate)
                    .HasColumnType("date")
                    .HasColumnName("ApprovedSPDate");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bbcname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BBCName");

                entity.Property(e => e.Bbcpolis)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BBCPolis");

                entity.Property(e => e.CaraBayar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClientFA");

                entity.Property(e => e.ClientRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Distrik)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntrySpdate)
                    .HasColumnType("date")
                    .HasColumnName("EntrySPDate");

                entity.Property(e => e.InitialBranch)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabangRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KodeFA");

                entity.Property(e => e.KodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSpv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KodeSPV");

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mtu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MTU");

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabangRef)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaFa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NamaFA");

                entity.Property(e => e.NamaPemegangPolis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaRef)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaTertanggung)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NiksalesSode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIKSalesSode");

                entity.Property(e => e.NoCin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoCIN");

                entity.Property(e => e.NoRekening)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NoSp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoSP");

                entity.Property(e => e.PaymentFrequency)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyPlan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProposedDate).HasColumnType("date");

                entity.Property(e => e.Ptddate)
                    .HasColumnType("date")
                    .HasColumnName("PTDDate");

                entity.Property(e => e.Rcddate)
                    .HasColumnType("date")
                    .HasColumnName("RCDDate");

                entity.Property(e => e.Rekening)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StatusSurrenderDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Tmk)
                    .HasColumnType("date")
                    .HasColumnName("TMK");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceProduct");

                entity.HasIndex(e => e.IdbancAssuranceProduct, "IX_TGENUIPEND_TBancAssuranceProduct")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ActiveFlag).HasColumnName("Active_Flag");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.BusinessModel).HasColumnName("Business_Model");

                entity.Property(e => e.CutOff)
                    .HasColumnType("datetime")
                    .HasColumnName("Cut_Off");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.InceptionDate)
                    .HasColumnType("date")
                    .HasColumnName("Inception_Date");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SemiAnually).HasColumnName("Semi_Anually");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProductBankAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceProductBankAccount");

                entity.HasIndex(e => e.IdbancAssuranceProductBankAccount, "IX_TGENUIPEND_TBancAssuranceProductBankAccount")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductBankAccount).HasColumnName("IDBancAssuranceProductBankAccount");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProductFee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceProductFee");

                entity.HasIndex(e => e.IdbancAssuranceProductFee, "IX_TGENUIPEND_TBancAssuranceProductFee")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductFee).HasColumnName("IDBancAssuranceProductFee");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProductFund>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceProductFund);

                entity.ToTable("TGENUIPEND_TBancAssuranceProductFund");

                entity.Property(e => e.IdbancAssuranceProductFund)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceProductFund");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProductRider>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceProductRider");

                entity.HasIndex(e => e.IdbancAssuranceProductRider, "IX_TGENUIPEND_TBancAssuranceProductRider")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRider).HasColumnName("IDBancAssuranceProductRider");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceProductRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceProductRule");

                entity.HasIndex(e => e.IdbancAssuranceProductRule, "IX_TGENUIPEND_TBancAssuranceProductRule")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_Name");

                entity.Property(e => e.AccountNumber).HasColumnName("Account_Number");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRule).HasColumnName("IDBancAssuranceProductRule");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceReferral>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceReferral);

                entity.ToTable("TGENUIPEND_TBancAssuranceReferral");

                entity.Property(e => e.IdbancAssuranceReferral)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceReferral");

                entity.Property(e => e.Completename)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COMPLETENAME");

                entity.Property(e => e.Coorporatetittle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COORPORATETITTLE");

                entity.Property(e => e.Costcenter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COSTCENTER");

                entity.Property(e => e.Egdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EGDESC");

                entity.Property(e => e.Employeegroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEEGROUP");

                entity.Property(e => e.Employeesubgroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEESUBGROUP");

                entity.Property(e => e.Eselon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESELON");

                entity.Property(e => e.Esgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ESGDESC");

                entity.Property(e => e.Jg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JG");

                entity.Property(e => e.Job)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB");

                entity.Property(e => e.Jobabbr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOBABBR");

                entity.Property(e => e.Jobdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("JOBDESC");

                entity.Property(e => e.Kelompokjabatan)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("KELOMPOKJABATAN");

                entity.Property(e => e.Kodebranch)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KODEBRANCH");

                entity.Property(e => e.Mctext)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("MCTEXT");

                entity.Property(e => e.NoTelp1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Organization)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ORGANIZATION");

                entity.Property(e => e.Orgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ORGDESC");

                entity.Property(e => e.Padesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PADESC");

                entity.Property(e => e.Payareadesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYAREADESC");

                entity.Property(e => e.Payrollarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLAREA");

                entity.Property(e => e.Pernr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERNR");

                entity.Property(e => e.Personnelarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELAREA");

                entity.Property(e => e.Personnelsubarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELSUBAREA");

                entity.Property(e => e.Pg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSITION");

                entity.Property(e => e.Positiondesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("POSITIONDESC");

                entity.Property(e => e.Psadesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PSADESC");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceRegistration>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceRegistration");

                entity.HasIndex(e => e.IdbancAssuranceRegistration, "IX_TGENUIPEND_TBancAssuranceRegistration")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Name");

                entity.Property(e => e.CustomerCif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Cif");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Name");

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Code");

                entity.Property(e => e.SalesName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceRegistrationDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceRegistrationDetail");

                entity.HasIndex(e => e.IdbancAssuranceRegistrationDetail, "IX_TGENUIPEND_TBancAssuranceRegistrationDetail")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.IdbancAssuranceRegistrationDetail).HasColumnName("IDBancAssuranceRegistrationDetail");

                entity.Property(e => e.InsuranceCompany)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insurance_Company");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RiderPremium)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceRider>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceRider");

                entity.HasIndex(e => e.IdbancAssuranceRider, "IX_TGENUIPEND_TBancAssuranceRider")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Code");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceRiderPremi>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceRiderPremi);

                entity.ToTable("TGENUIPEND_TBancAssuranceRiderPremi");

                entity.Property(e => e.IdbancAssuranceRiderPremi)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceRiderPremi");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UangPertanggungan).HasColumnName("Uang_Pertanggungan");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceSpaj>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TBancAssuranceSPAJ");

                entity.HasIndex(e => e.IdbancAssuranceSpaj, "IX_TGENUIPEND_TBancAssuranceSPAJ")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AgentId).HasColumnName("agentID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.PremiumFrequency).HasColumnName("Premium_frequency");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.Spajstatus)
                    .IsUnicode(false)
                    .HasColumnName("SPAJStatus");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceSpajfund>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSpajfund);

                entity.ToTable("TGENUIPEND_TBancAssuranceSPAJFund");

                entity.Property(e => e.IdbancAssuranceSpajfund)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceSPAJFund");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.NavDate)
                    .HasColumnType("date")
                    .HasColumnName("NAV_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceSpajrider>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceSpajrider);

                entity.ToTable("TGENUIPEND_TBancAssuranceSPAJRider");

                entity.Property(e => e.IdbancAssuranceSpajrider)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceSPAJRider");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTbancAssuranceTransaction>(entity =>
            {
                entity.HasKey(e => e.IdbancAssuranceTransaction);

                entity.ToTable("TGENUIPEND_TBancAssuranceTransaction");

                entity.Property(e => e.IdbancAssuranceTransaction)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BillerCode)
                    .HasMaxLength(100)
                    .HasColumnName("Biller_Code");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Currency_Code");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.KodeBiller)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Biller");

                entity.Property(e => e.PaymentNo).HasColumnName("Payment_No");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Reference_No");

                entity.Property(e => e.SettlementAmount).HasColumnName("Settlement_Amount");

                entity.Property(e => e.SettlementDate)
                    .HasColumnType("date")
                    .HasColumnName("Settlement_Date");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDate1)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");
            });

            modelBuilder.Entity<TgenuipendTbancassuranceBalanceManulife>(entity =>
            {
                entity.HasKey(e => e.IdbancassuranceBalanceManulife);

                entity.ToTable("TGENUIPEND_TBancassuranceBalanceManulife");

                entity.Property(e => e.IdbancassuranceBalanceManulife)
                    .ValueGeneratedNever()
                    .HasColumnName("IDBancassuranceBalanceManulife");

                entity.Property(e => e.Cifv10)
                    .HasMaxLength(14)
                    .HasColumnName("CIFV10")
                    .IsFixedLength();

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.JatuhTempoPolis).HasColumnType("date");

                entity.Property(e => e.Navcurrent).HasColumnName("NAVCurrent");

                entity.Property(e => e.Navopen).HasColumnName("NAVOpen");

                entity.Property(e => e.PemegangPolis)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Premium)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Produk)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubmittedDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSaldo).HasColumnType("date");

                entity.Property(e => e.Tertanggung)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTcompany>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TCompany");

                entity.HasIndex(e => e.Idcompany, "IX_TGENUIPEND_TCompany")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Address1)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcompany).HasColumnName("IDCompany");

                entity.Property(e => e.KodeAgenPenjual)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TrefSinvestParticipantTypeId).HasColumnName("TRefSInvestParticipantTypeID");
            });

            modelBuilder.Entity<TgenuipendTconfig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TConfig");

                entity.HasIndex(e => e.TconfigId, "IX_TGENUIPEND_TConfig")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Key)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.TconfigId).HasColumnName("TConfigID");

                entity.Property(e => e.Value)
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTcpfquotum>(entity =>
            {
                entity.HasKey(e => e.TcpfquotaId);

                entity.ToTable("TGENUIPEND_TCPFQuota");

                entity.Property(e => e.TcpfquotaId)
                    .ValueGeneratedNever()
                    .HasColumnName("TCPFQuotaID");

                entity.Property(e => e.AgentIdfrom).HasColumnName("AgentIDFrom");

                entity.Property(e => e.AgentIdto).HasColumnName("AgentIDTo");

                entity.Property(e => e.CpfquotaTrxType).HasColumnName("CPFQuotaTrxType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdcustBankAccount);

                entity.ToTable("TGENUIPEND_TCustBankAccount");

                entity.Property(e => e.IdcustBankAccount)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomer>(entity =>
            {
                entity.HasKey(e => e.Idcustomer);

                entity.ToTable("TGENUIPEND_TCustomer");

                entity.Property(e => e.Idcustomer)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomer");

                entity.Property(e => e.Aidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AIDNo");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Bcnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCNumber");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorExpiredDateOfSupplementaryDocs).HasColumnType("datetime");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorTypeOfSupplementaryDocs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsCorpBond).HasColumnName("isCorpBond");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.IsGovBond).HasColumnName("isGovBond");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.IsMf).HasColumnName("isMF");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.OpDateCorpBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateGovBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateMf)
                    .HasColumnType("datetime")
                    .HasColumnName("OpDateMF");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Sidcorp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDCorp");

                entity.Property(e => e.SidcorpGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDCorpGeneratedDate");

                entity.Property(e => e.SidgeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGeneratedDate");

                entity.Property(e => e.Sidgov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDGov");

                entity.Property(e => e.SidgovGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGovGeneratedDate");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNoStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubRekNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTcustomerAddress>(entity =>
            {
                entity.HasKey(e => e.IdcustomerAddress);

                entity.ToTable("TGENUIPEND_TCustomerAddress");

                entity.Property(e => e.IdcustomerAddress)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerAddress");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DistanceToBranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.District)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Neighborhood)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneExtension)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubDistrict)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerAuthContact>(entity =>
            {
                entity.HasKey(e => e.IdcustomerAuthContact);

                entity.ToTable("TGENUIPEND_TCustomerAuthContact");

                entity.Property(e => e.IdcustomerAuthContact)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerAuthContact");

                entity.Property(e => e.Address)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(767)
                    .IsUnicode(false);

                entity.Property(e => e.IdauthorizationType).HasColumnName("IDAuthorizationType");

                entity.Property(e => e.Idcity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCity");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idprovinsi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDProvinsi");

                entity.Property(e => e.IdregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IDRegistrationDate");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoID");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Npwpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPDate");

                entity.Property(e => e.OfficeNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerDocument>(entity =>
            {
                entity.HasKey(e => e.IdcustomerDocument);

                entity.ToTable("TGENUIPEND_TCustomerDocuments");

                entity.Property(e => e.IdcustomerDocument)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerDocument");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerHeir>(entity =>
            {
                entity.HasKey(e => e.IdcustomerHeir);

                entity.ToTable("TGENUIPEND_TCustomerHeir");

                entity.Property(e => e.IdcustomerHeir)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerHeir");

                entity.Property(e => e.Address)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Relationship)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerModelRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TcustomerModelRiskProfileMappingId);

                entity.ToTable("TGENUIPEND_TCustomerModelRiskProfileMapping");

                entity.Property(e => e.TcustomerModelRiskProfileMappingId)
                    .ValueGeneratedNever()
                    .HasColumnName("TCustomerModelRiskProfileMappingID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ModelProfileId).HasColumnName("Model_ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerOwnership>(entity =>
            {
                entity.HasKey(e => e.IdcustomerOwnership);

                entity.ToTable("TGENUIPEND_TCustomerOwnership");

                entity.Property(e => e.IdcustomerOwnership)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerOwnership");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerProductRekeningMapping>(entity =>
            {
                entity.HasKey(e => e.IdcustomerProductRekeningMapping);

                entity.ToTable("TGENUIPEND_TCustomerProductRekeningMapping");

                entity.Property(e => e.IdcustomerProductRekeningMapping)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTcustomerProductRiskProfileMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TCustomerProductRiskProfileMapping");

                entity.HasIndex(e => e.TcustomerProductRiskProfileMappingId, "IX_TGENUIPEND_TCustomerProductRiskProfileMapping")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ProductProfileId).HasColumnName("Product_ProfileID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerProductRiskProfileMappingId).HasColumnName("TCustomerProductRiskProfileMappingID");
            });

            modelBuilder.Entity<TgenuipendTcustomerRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TcustomerRegInvestmentPlanId);

                entity.ToTable("TGENUIPEND_TCustomerRegInvestmentPlan");

                entity.Property(e => e.TcustomerRegInvestmentPlanId)
                    .ValueGeneratedNever()
                    .HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BreakDate).HasColumnType("date");

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("date");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuipendTcustomerRiskProfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TCustomerRiskProfile");

                entity.HasIndex(e => e.TcustomerRiskProfileId, "IX_TGENUIPEND_TCustomerRiskProfile")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<TgenuipendTcustomerRiskProfileAnswer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TCustomerRiskProfileAnswer");

                entity.HasIndex(e => e.TcustomerRiskProfileAnswerId, "IX_TGENUIPEND_TCustomerRiskProfileAnswer")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<TgenuipendTexchangeRate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TExchangeRate");

                entity.HasIndex(e => e.TexchangeRateId, "IX_TGENUIPEND_TExchangeRate")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateId).HasColumnName("TExchangeRateID");
            });

            modelBuilder.Entity<TgenuipendTexchangeRateByProduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TExchangeRateByProduct");

                entity.HasIndex(e => e.TexchangeRateByProductId, "IX_TGENUIPEND_TExchangeRateByProduct")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateByProductId).HasColumnName("TExchangeRateByProductID");
            });

            modelBuilder.Entity<TgenuipendTexpense>(entity =>
            {
                entity.HasKey(e => e.Idexpense);

                entity.ToTable("TGENUIPEND_TExpense");

                entity.Property(e => e.Idexpense)
                    .ValueGeneratedNever()
                    .HasColumnName("IDExpense");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTfundHouse>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TFundHouse");

                entity.HasIndex(e => e.FhId, "IX_TGENUIPEND_TFundHouse")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person");

                entity.Property(e => e.ContactPerson2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person2");

                entity.Property(e => e.ContactPerson3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COntact_Person3");

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.FhCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_Code");

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.Jsxcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JSXCode");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchingCount)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Count");

                entity.Property(e => e.SwitchingMonth)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Month");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTgoal>(entity =>
            {
                entity.HasKey(e => e.TgoalId);

                entity.ToTable("TGENUIPEND_TGoal");

                entity.Property(e => e.TgoalId)
                    .ValueGeneratedNever()
                    .HasColumnName("TGoalID");

                entity.Property(e => e.Current)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Target)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTholdUnit>(entity =>
            {
                entity.HasKey(e => e.TholdUnitId);

                entity.ToTable("TGENUIPEND_THoldUnit");

                entity.Property(e => e.TholdUnitId)
                    .ValueGeneratedNever()
                    .HasColumnName("THoldUnitID");

                entity.Property(e => e.CollateralId).HasColumnName("CollateralID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.OldTholdUnitId).HasColumnName("OldTHoldUnitID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTholiday>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_Tholiday");

                entity.HasIndex(e => e.Idholiday, "IX_TGENUIPEND_Tholiday")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HolidayDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idholiday).HasColumnName("IDHoliday");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTholidayGeneral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_THolidayGeneral");

                entity.HasIndex(e => e.IdholidayGeneral, "IX_TGENUIPEND_THolidayGeneral")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdholidayGeneral).HasColumnName("IDHolidayGeneral");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTincome>(entity =>
            {
                entity.HasKey(e => e.Idincome);

                entity.ToTable("TGENUIPEND_TIncome");

                entity.Property(e => e.Idincome)
                    .ValueGeneratedNever()
                    .HasColumnName("IDIncome");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTinsuranceCover>(entity =>
            {
                entity.HasKey(e => e.TinsuranceCoverId);

                entity.ToTable("TGENUIPEND_TInsuranceCover");

                entity.Property(e => e.TinsuranceCoverId)
                    .ValueGeneratedNever()
                    .HasColumnName("TInsuranceCoverID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.MonthlyExpenseDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Vchar1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Vchar2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTkpiachievement>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TKPIAchievement");

                entity.HasIndex(e => e.KpiachievementId, "IX_TGENUIPEND_TKPIAchievement")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Kpiachievement).HasColumnName("KPIAchievement");

                entity.Property(e => e.KpiachievementId).HasColumnName("KPIAchievementID");

                entity.Property(e => e.Kpisign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("KPISign");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTkpisalary>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TKPISalary");

                entity.HasIndex(e => e.KpisalaryId, "IX_TGENUIPEND_TKPISalary")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.EffSalaryDate).HasColumnType("date");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.KpisalaryId).HasColumnName("KPISalaryID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTkpitarget>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TKPITarget");

                entity.HasIndex(e => e.KpitargetId, "IX_TGENUIPEND_TKPITarget")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.KpitargetId).HasColumnName("KPITargetID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TargetActiveAccount).HasColumnName("Target_ActiveAccount");

                entity.Property(e => e.TargetNcf).HasColumnName("Target_NCF");

                entity.Property(e => e.TargetQualitative).HasColumnName("Target_Qualitative");

                entity.Property(e => e.TargetRevenue).HasColumnName("Target_Revenue");

                entity.Property(e => e.WeightActiveAccount).HasColumnName("Weight_ActiveAccount");

                entity.Property(e => e.WeightNcf).HasColumnName("Weight_NCF");

                entity.Property(e => e.WeightQualitative).HasColumnName("Weight_Qualitative");

                entity.Property(e => e.WeightRevenue).HasColumnName("Weight_Revenue");
            });

            modelBuilder.Entity<TgenuipendTkursGeneral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TKursGeneral");

                entity.Property(e => e.CurrDate).HasColumnType("datetime");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");
            });

            modelBuilder.Entity<TgenuipendTmacroEconomicScenario>(entity =>
            {
                entity.HasKey(e => e.TmacroEconomicScenarioId);

                entity.ToTable("TGENUIPEND_TMacroEconomicScenario");

                entity.Property(e => e.TmacroEconomicScenarioId)
                    .ValueGeneratedNever()
                    .HasColumnName("TMacroEconomicScenarioID");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");
            });

            modelBuilder.Entity<TgenuipendTmodel>(entity =>
            {
                entity.HasKey(e => e.TmodelId);

                entity.ToTable("TGENUIPEND_TModel");

                entity.Property(e => e.TmodelId)
                    .ValueGeneratedNever()
                    .HasColumnName("TModelID");

                entity.Property(e => e.ModelName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTnav>(entity =>
            {
                entity.HasKey(e => e.Idnav);

                entity.ToTable("TGENUIPEND_TNAV");

                entity.HasIndex(e => new { e.Idproduct, e.Navdate }, "IX_TGENUIPEND_TNAV_DateAndProduct")
                    .IsUnique();

                entity.Property(e => e.Idnav)
                    .ValueGeneratedNever()
                    .HasColumnName("IDNav");

                entity.Property(e => e.BtaxRevenue).HasColumnName("BTaxRevenue");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Ihsg).HasColumnName("IHSG");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.NoUhactive).HasColumnName("NoUHActive");

                entity.Property(e => e.NoUhtotal).HasColumnName("NoUHTotal");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TotalMfee).HasColumnName("TotalMFee");
            });

            modelBuilder.Entity<TgenuipendTproduct>(entity =>
            {
                entity.HasKey(e => e.Idproduct);

                entity.ToTable("TGENUIPEND_TProduct");

                entity.Property(e => e.Idproduct)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProduct");

                entity.Property(e => e.AccStatementName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AumdateAdd).HasColumnName("AUMDateAdd");

                entity.Property(e => e.BapepamLkarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BapepamLKArticle");

                entity.Property(e => e.BapepamLkarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BapepamLKArticleDate");

                entity.Property(e => e.Bkcode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BKCode");

                entity.Property(e => e.BuyFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CbestNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CBestNo");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CustFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeBatchOrder)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeRedemption)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSubscription)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSwitching)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DividentInvestment)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdjenisProduct).HasColumnName("IDJenisProduct");

                entity.Property(e => e.Idmftype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMFType");

                entity.Property(e => e.IdproductType).HasColumnName("IDProductType");

                entity.Property(e => e.Idstatus).HasColumnName("IDStatus");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.InitialNav).HasColumnName("InitialNAV");

                entity.Property(e => e.IsAutoEod).HasColumnName("IsAutoEOD");

                entity.Property(e => e.IsFoundation).HasColumnName("isFoundation");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode");

                entity.Property(e => e.Kctfile)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KCTFile");

                entity.Property(e => e.Kikarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKArticle");

                entity.Property(e => e.KikarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KIKArticleDate");

                entity.Property(e => e.KikplaceEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKPlaceEstablished");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.MaxTotDailyOf)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaxUnit)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.MaxUnits).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MaximumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MinimumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumRedemptionAmount).HasColumnType("numeric(15, 2)");

                entity.Property(e => e.NavredMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NAVRedMethod");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPRegisterDate");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCountry)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Quota).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RedFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RelationalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Scano)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCANo");

                entity.Property(e => e.SellFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Sidno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIDNo");

                entity.Property(e => e.SinvestFundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SInvestFundCode");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SubFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");
            });

            modelBuilder.Entity<TgenuipendTproductBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdproductBankAccount);

                entity.ToTable("TGENUIPEND_TProductBankAccount");

                entity.Property(e => e.IdproductBankAccount)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Sacode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SACode");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTproductExitWindow>(entity =>
            {
                entity.HasKey(e => e.IdproductExitWindow);

                entity.ToTable("TGENUIPEND_TProductExitWindow");

                entity.Property(e => e.IdproductExitWindow)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductExitWindow");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTproductFee>(entity =>
            {
                entity.HasKey(e => e.IdproductFee);

                entity.ToTable("TGENUIPEND_TProductFee");

                entity.Property(e => e.IdproductFee)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductFee");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeeRange).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.PfolioCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SignMonth)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Type)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTproductFeeByDate>(entity =>
            {
                entity.HasKey(e => e.TproductFeeByDateId);

                entity.ToTable("TGENUIPEND_TProductFeeByDate");

                entity.Property(e => e.TproductFeeByDateId)
                    .ValueGeneratedNever()
                    .HasColumnName("TProductFeeByDateID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTproductOfferingPeriod>(entity =>
            {
                entity.HasKey(e => e.IdproductOfferingPeriod);

                entity.ToTable("TGENUIPEND_TProductOfferingPeriod");

                entity.Property(e => e.IdproductOfferingPeriod)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductOfferingPeriod");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTproductRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TproductRegInvestmentPlanId);

                entity.ToTable("TGENUIPEND_TProductRegInvestmentPlan");

                entity.Property(e => e.TproductRegInvestmentPlanId)
                    .ValueGeneratedNever()
                    .HasColumnName("TProductRegInvestmentPlanID");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuipendTproductTransactionFee>(entity =>
            {
                entity.HasKey(e => e.TproductTransactionFeeId);

                entity.ToTable("TGENUIPEND_TProductTransactionFee");

                entity.Property(e => e.TproductTransactionFeeId)
                    .ValueGeneratedNever()
                    .HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.BeginDate).HasColumnType("date");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuipendTrefBank>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefBank");

                entity.HasIndex(e => e.Idbank, "IX_TGENUIPEND_TRefBank")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BimemberCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BIMemberCode");

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrefBankBranch>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefBankBranch");

                entity.HasIndex(e => e.IdbankBranch, "IX_TGENUIPEND_TRefBankBranch")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Bicode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BranchCity)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchFax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BranchPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchStreet)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.BranchZip)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrefBankCustody>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefBankCustody");

                entity.HasIndex(e => e.IdbankCustody, "IX_TGENUIPEND_TRefBankCustody")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCity)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyFax)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UnitHolderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuipendTrefCurrency>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefCurrency");

                entity.HasIndex(e => e.Idcurrency, "IX_TGENUIPEND_TRefCurrency")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrefModel>(entity =>
            {
                entity.HasKey(e => e.TrefModelId);

                entity.ToTable("TGENUIPEND_TRefModel");

                entity.Property(e => e.TrefModelId)
                    .ValueGeneratedNever()
                    .HasColumnName("TRefModelID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");

                entity.Property(e => e.TproductTypeId).HasColumnName("TProductTypeID");
            });

            modelBuilder.Entity<TgenuipendTrefProfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefProfile");

                entity.HasIndex(e => e.ProfileId, "IX_TGENUIPEND_TRefProfile")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrefProfileQuestion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefProfileQuestion");

                entity.HasIndex(e => e.QuestionId, "IX_TGENUIPEND_TRefProfileQuestion")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrefProfileQuestionOption>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TRefProfileQuestionOption");

                entity.HasIndex(e => e.QuestionOptionId, "IX_TGENUIPEND_TRefProfileQuestionOption")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.OptionId)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OptionID");

                entity.Property(e => e.OptionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTreferenceDetail>(entity =>
            {
                entity.HasKey(e => e.TreferenceDetailId);

                entity.ToTable("TGENUIPEND_TReferenceDetail");

                entity.Property(e => e.TreferenceDetailId)
                    .ValueGeneratedNever()
                    .HasColumnName("TReferenceDetailID");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuipendTreferenceGroup>(entity =>
            {
                entity.HasKey(e => e.TreferenceGroupId);

                entity.ToTable("TGENUIPEND_TReferenceGroup");

                entity.Property(e => e.TreferenceGroupId)
                    .ValueGeneratedNever()
                    .HasColumnName("TReferenceGroupID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTregularInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TregularInvestmentPlanId);

                entity.ToTable("TGENUIPEND_TRegularInvestmentPlan");

                entity.Property(e => e.TregularInvestmentPlanId)
                    .ValueGeneratedNever()
                    .HasColumnName("TRegularInvestmentPlanID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.InvestmentPlanCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvestmentPlanName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTregularInvestmentPlanFee>(entity =>
            {
                entity.HasKey(e => e.TregularInvestmentPlanFeeId);

                entity.ToTable("TGENUIPEND_TRegularInvestmentPlanFee");

                entity.Property(e => e.TregularInvestmentPlanFeeId)
                    .ValueGeneratedNever()
                    .HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTregularInvestmentPlanFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TregularInvestmentPlanFeeDetailId);

                entity.ToTable("TGENUIPEND_TRegularInvestmentPlanFeeDetail");

                entity.Property(e => e.TregularInvestmentPlanFeeDetailId)
                    .ValueGeneratedNever()
                    .HasColumnName("TRegularInvestmentPlanFeeDetailID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuipendTretirement>(entity =>
            {
                entity.HasKey(e => e.TretirementId);

                entity.ToTable("TGENUIPEND_TRetirement");

                entity.Property(e => e.TretirementId)
                    .ValueGeneratedNever()
                    .HasColumnName("TRetirementID");

                entity.Property(e => e.CurrentYear)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrevenueAgentCustomer>(entity =>
            {
                entity.HasKey(e => e.RevenueAgentCustomerId);

                entity.ToTable("TGENUIPEND_TRevenueAgentCustomer");

                entity.Property(e => e.RevenueAgentCustomerId)
                    .ValueGeneratedNever()
                    .HasColumnName("RevenueAgentCustomerID");

                entity.Property(e => e.RevenueSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTrevenueTransferAgent>(entity =>
            {
                entity.HasKey(e => e.RevenueTransferAgentId);

                entity.ToTable("TGENUIPEND_TRevenueTransferAgent");

                entity.Property(e => e.RevenueTransferAgentId)
                    .ValueGeneratedNever()
                    .HasColumnName("RevenueTransferAgentID");

                entity.Property(e => e.RevenueSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTsharingFee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TSharingFee");

                entity.HasIndex(e => e.FeeId, "IX_TGENUIPEND_TSharingFee")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeType)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IsAumproduct).HasColumnName("IsAUMProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTsharingFeeRule>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_TSharingFeeRule");

                entity.HasIndex(e => e.FeeRuleId, "IX_TGENUIPEND_TSharingFeeRule")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeRuleId).HasColumnName("FeeRuleID");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuipendTtransactionBooking>(entity =>
            {
                entity.HasKey(e => e.IdtransactionBooking);

                entity.ToTable("TGENUIPEND_TTransactionBooking");

                entity.Property(e => e.IdtransactionBooking)
                    .ValueGeneratedNever()
                    .HasColumnName("IDTransactionBooking");

                entity.Property(e => e.CustAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CustIdbankBranch).HasColumnName("CustIDBankBranch");

                entity.Property(e => e.CustIdcurrency).HasColumnName("CustIDCurrency");

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IsWaiver).HasColumnName("isWaiver");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProdIdbankBranch).HasColumnName("ProdIDBankBranch");

                entity.Property(e => e.ProdIdcurrency).HasColumnName("ProdIDCurrency");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TransactionDate).HasColumnType("date");
            });

            modelBuilder.Entity<TgenuipendTtransactionFee>(entity =>
            {
                entity.HasKey(e => e.TtransactionFeeId);

                entity.ToTable("TGENUIPEND_TTransactionFee");

                entity.Property(e => e.TtransactionFeeId)
                    .ValueGeneratedNever()
                    .HasColumnName("TTransactionFeeID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");
            });

            modelBuilder.Entity<TgenuipendTtransactionFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TtransactionFeeDetailId);

                entity.ToTable("TGENUIPEND_TTransactionFeeDetail");

                entity.Property(e => e.TtransactionFeeDetailId)
                    .ValueGeneratedNever()
                    .HasColumnName("TTransactionFeeDetailID");

                entity.Property(e => e.AgeType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuipendVtagentStructureSale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUIPEND_VTAgentStructure_Sales");

                entity.HasIndex(e => e.IdagentStructure, "IX_TGENUIPEND_VTAgentStructure_Sales")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<TgenuitempKpi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUITEMP_KPI");

                entity.Property(e => e.Idkpi).HasColumnName("IDKPI");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.NumberOfActiveAccount)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.ShareOfWallet)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasMaxLength(10)
                    .HasColumnName("TGENUITEMP_sysModifiedTime")
                    .IsFixedLength();

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");
            });

            modelBuilder.Entity<TgenuitempKpiachievement>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_KPIAchievement");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Idkpiachievement).HasColumnName("IDKPIAchievement");

                entity.Property(e => e.Kpiachievement)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KPIAchievement");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasMaxLength(10)
                    .HasColumnName("TGENUITEMP_sysModifiedTime")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TgenuitempKpiscore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TGENUITEMP_KPIScore");

                entity.Property(e => e.Idkpiscore).HasColumnName("IDKPIScore");

                entity.Property(e => e.Score).HasMaxLength(50);

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasMaxLength(10)
                    .HasColumnName("TGENUITEMP_sysModifiedTime")
                    .IsFixedLength();

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");
            });

            modelBuilder.Entity<TgenuitempKpitarget>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_KPITarget");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Idkpitarget).HasColumnName("IDKPITarget");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Ncf).HasColumnName("NCF");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTagent>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgent");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AajiexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIExpiredDate");

                entity.Property(e => e.Aajiformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIFormat");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Aajipp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJIPP");

                entity.Property(e => e.AajistartDate)
                    .HasColumnType("date")
                    .HasColumnName("AAJIStartDate");

                entity.Property(e => e.ActivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ActivateDate).HasColumnType("datetime");

                entity.Property(e => e.AgentBrokerFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentType)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Aliasagent)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ALIASAGENT");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.Bic)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BIC");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.DeactivateDate).HasColumnType("datetime");

                entity.Property(e => e.Effsalary).HasColumnType("datetime");

                entity.Property(e => e.Fax)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FormatSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FormatSK");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital");

                entity.Property(e => e.Idname)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idname");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent");

                entity.Property(e => e.InstitutionalType)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IsPph).HasColumnName("isPPH");

                entity.Property(e => e.IsPpn).HasColumnName("isPPN");

                entity.Property(e => e.KodeKantor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NomorSk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NomorSK");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OfficerAgentName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OtherNameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RefAgentName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RejectBy)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.RejectDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Sex)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSk)
                    .HasColumnType("date")
                    .HasColumnName("TanggalSK");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.WaperdExpiredDate).HasColumnType("date");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Waperdformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDFormat");

                entity.Property(e => e.Waperdpp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WAPERDPP");

                entity.Property(e => e.WaperdstartDate)
                    .HasColumnType("date")
                    .HasColumnName("WAPERDStartDate");

                entity.Property(e => e.WppeexpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEExpiredDate");

                entity.Property(e => e.Wppeformat)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEFormat");

                entity.Property(e => e.Wppeno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPENo");

                entity.Property(e => e.Wppepp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WPPEPP");

                entity.Property(e => e.WppestartDate)
                    .HasColumnType("date")
                    .HasColumnName("WPPEStartDate");
            });

            modelBuilder.Entity<TgenuitempTagentAddress>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgentAddress");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdagentAddress).HasColumnName("IDAgentAddress");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTagentBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgentBankAccount");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdagentBankAccount).HasColumnName("IDAgentBankAccount");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTagentCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgentCustomer");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.OldCodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreated).HasColumnType("datetime");

                entity.Property(e => e.RecCreator)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecEdited).HasColumnType("datetime");

                entity.Property(e => e.RecEditor)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTagentCustomerDm>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgentCustomerDM");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTagentProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAgentProduct");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffectiveDate)
                    .HasColumnType("date")
                    .HasColumnName("effectiveDate");

                entity.Property(e => e.FlagMfee).HasColumnName("FlagMFee");

                entity.Property(e => e.FlagMfee1).HasColumnName("FlagMFee1");

                entity.Property(e => e.FlagOfee).HasColumnName("FlagOFee");

                entity.Property(e => e.FlagSfee).HasColumnName("FlagSFee");

                entity.Property(e => e.FlagSfee1).HasColumnName("FlagSFee1");

                entity.Property(e => e.FromAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FromAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FromBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FromCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdreportType)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDReportType");

                entity.Property(e => e.MfeeCharges).HasColumnName("MFeeCharges");

                entity.Property(e => e.MfeeName).HasColumnName("MFeeName");

                entity.Property(e => e.RedTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.RedTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SubsTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxChargesNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchOutTxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TagentProductId).HasColumnName("TAgentProductID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.ToAccType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.ToAcctNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ToBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ToCurr)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTasset>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TAsset");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Dplk1).HasColumnName("DPLK1");

                entity.Property(e => e.Dplk2).HasColumnName("DPLK2");

                entity.Property(e => e.Dplk3).HasColumnName("DPLK3");

                entity.Property(e => e.Idasset).HasColumnName("IDAsset");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Jht1).HasColumnName("JHT1");

                entity.Property(e => e.Jht2).HasColumnName("JHT2");

                entity.Property(e => e.Jht3).HasColumnName("JHT3");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.Rdc1).HasColumnName("RDC1");

                entity.Property(e => e.Rdc2).HasColumnName("RDC2");

                entity.Property(e => e.Rdc3).HasColumnName("RDC3");

                entity.Property(e => e.Rdpt1).HasColumnName("RDPT1");

                entity.Property(e => e.Rdpt2).HasColumnName("RDPT2");

                entity.Property(e => e.Rdpt3).HasColumnName("RDPT3");

                entity.Property(e => e.Rdpu1).HasColumnName("RDPU1");

                entity.Property(e => e.Rdpu2).HasColumnName("RDPU2");

                entity.Property(e => e.Rdpu3).HasColumnName("RDPU3");

                entity.Property(e => e.Rds1).HasColumnName("RDS1");

                entity.Property(e => e.Rds2).HasColumnName("RDS2");

                entity.Property(e => e.Rds3).HasColumnName("RDS3");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceAgent>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceAgent");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Aajino)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AAJINo");

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AgentName).IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("date");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName).IsUnicode(false);

                entity.Property(e => e.CodeAgentBranch).IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdmaritalStatus).HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idsex).HasColumnName("IDSex");

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.WaperdNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceBalanceAium>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceBalanceAIA");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Cifpayor)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIFPayor");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.HolderName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.InsCompCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.InsurancedName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.NextPaymentDate).HasColumnType("date");

                entity.Property(e => e.NoRek)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PayorName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralBranch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferralName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RiskCommenceDate).HasColumnType("date");

                entity.Property(e => e.SettleAcc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spajno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJNo");

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubmissionDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TbancAssuranceBalanceAiaId).HasColumnName("TBancAssuranceBalanceAIA_ID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceBalanceCsi>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceBalanceCSI");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.ClientAccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClientName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Ia)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IA");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.IdbancAssuranceBalanceCsi).HasColumnName("IDBancAssuranceBalanceCSI");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceBalanceCsl>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceBalanceCSL");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.IdbancAssuranceBalanceCsl).HasColumnName("IDBancAssuranceBalanceCSL");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceBalanceSunLife>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceBalanceSunLife");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BalanceDt).HasColumnType("date");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.IdbancAssuranceBalanceSunLife).HasColumnName("IDBancAssuranceBalanceSunLife");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.Idfund1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund1");

                entity.Property(e => e.Idfund2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund2");

                entity.Property(e => e.Idfund3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund3");

                entity.Property(e => e.Idfund4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDFund4");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.IdpolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicyHolderName");

                entity.Property(e => e.Idrider)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRider");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.Nav1).HasColumnName("NAV1");

                entity.Property(e => e.Nav2).HasColumnName("NAV2");

                entity.Property(e => e.Nav3).HasColumnName("NAV3");

                entity.Property(e => e.Nav4).HasColumnName("NAV4");

                entity.Property(e => e.NomorRekening)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyInsuredName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Rmname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RMName");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceCustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceCustomer");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceAgent).HasColumnName("IDBancAssuranceAgent");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.ReferalPosition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Position");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceFeeBaseIncomeMonthlyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgLevel).HasColumnName("ag_level");

                entity.Property(e => e.AgName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ag_name");

                entity.Property(e => e.AgenCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("agen_code");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA");

                entity.Property(e => e.Area2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AREA_2");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("area_name");

                entity.Property(e => e.Bbc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Bigbang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Branch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Cin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_1");

                entity.Property(e => e.Code2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_2");

                entity.Property(e => e.Code3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Code_3");

                entity.Property(e => e.Component)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate)
                    .HasColumnType("date")
                    .HasColumnName("eff_date");

                entity.Property(e => e.Idagent)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDAgent");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeMonthlyAia).HasColumnName("IDBancAssuranceFeeBaseIncomeMonthlyAIA");

                entity.Property(e => e.Idproduct)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct");

                entity.Property(e => e.Idproduct2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDProduct_2");

                entity.Property(e => e.Insured)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsDate)
                    .HasColumnType("date")
                    .HasColumnName("is_date");

                entity.Property(e => e.JobTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title");

                entity.Property(e => e.JobTitle2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Job_Title_2");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NamaByStaffing)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Nama_By_Staffing");

                entity.Property(e => e.NbRen)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NB_REN");

                entity.Property(e => e.Nett2FeeBased).HasColumnName("nett2_Fee_Based");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.NoSp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("no_sp");

                entity.Property(e => e.Policy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyAge).HasColumnName("policy_age");

                entity.Property(e => e.PolicyAgeMonth).HasColumnName("policy_age_month");

                entity.Property(e => e.Policyholder)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProprcvDate)
                    .HasColumnType("date")
                    .HasColumnName("proprcv_date");

                entity.Property(e => e.Ptd).HasColumnType("date");

                entity.Property(e => e.Rcd).HasColumnType("date");

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ref_no");

                entity.Property(e => e.Reg)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RerateDate)
                    .HasColumnType("date")
                    .HasColumnName("rerate_date");

                entity.Property(e => e.SecyComm).HasColumnName("secy_comm");

                entity.Property(e => e.SecyPrem).HasColumnName("secy_prem");

                entity.Property(e => e.Seg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SEG");

                entity.Property(e => e.SglComm).HasColumnName("sgl_comm");

                entity.Property(e => e.SglPrem).HasColumnName("sgl_prem");

                entity.Property(e => e.Sub)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SUB");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.ThiyComm).HasColumnName("thiy_comm");

                entity.Property(e => e.ThiyPrem).HasColumnName("thiy_prem");

                entity.Property(e => e.Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceFeeBaseIncomeSunlife>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AajiExpired)
                    .HasColumnType("date")
                    .HasColumnName("AAJI_Expired");

                entity.Property(e => e.AccountReceive)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Afyp).HasColumnName("AFYP");

                entity.Property(e => e.Area)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BasicPremiumIdr).HasColumnName("BasicPremiumIDR");

                entity.Property(e => e.BranchCodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code_Ref");

                entity.Property(e => e.CifV10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF_V10");

                entity.Property(e => e.Fbi).HasColumnName("FBI");

                entity.Property(e => e.Fbinett).HasColumnName("FBINett");

                entity.Property(e => e.FeebaseforBankGross).HasColumnName("FeebaseforBankGROSS");

                entity.Property(e => e.FeebaseforBankNett).HasColumnName("FeebaseforBankNETT");

                entity.Property(e => e.Flag)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReport)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FLAG_REPORT");

                entity.Property(e => e.IaAajiExpired)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_Expired");

                entity.Property(e => e.IaAajiLicense)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IA_AAJI_License");

                entity.Property(e => e.IdbancAssuranceFeeBaseIncomeSunlife).HasColumnName("IDBancAssuranceFeeBaseIncomeSunlife");

                entity.Property(e => e.Idpolicy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDPolicy");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.LeadsGenerator)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Leads_Generator");

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LgAajiLicenseIsb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LG_AAJI_License_ISB");

                entity.Property(e => e.LocationBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Code");

                entity.Property(e => e.LocationBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Location_branch_Name");

                entity.Property(e => e.MainBranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Code");

                entity.Property(e => e.MainBranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Main_Branch_Name");

                entity.Property(e => e.MainProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NbTopUpPremium).HasColumnName("NB_Top_Up_Premium");

                entity.Property(e => e.Nip)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIP");

                entity.Property(e => e.OriginalCurrency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OriginalReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Original_Received_Date");

                entity.Property(e => e.OwnerId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OwnerID");

                entity.Property(e => e.Period)
                    .HasColumnType("date")
                    .HasColumnName("PERIOD");

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.Qualified)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("QUALIFIED");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("date")
                    .HasColumnName("Received_Date");

                entity.Property(e => e.Region)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SALES_CODE");

                entity.Property(e => e.SegmentCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Segment_Code");

                entity.Property(e => e.Segmentasi)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SettledDate)
                    .HasColumnType("date")
                    .HasColumnName("Settled_Date");

                entity.Property(e => e.SlfiIaCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Code");

                entity.Property(e => e.SlfiIaName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SLFI_IA_Name");

                entity.Property(e => e.SmpPlan).HasColumnName("SMP_PLAN");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubProduct)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SunlifeWaiverPremiumCi88).HasColumnName("SunlifeWaiverPremiumCI88");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TopUpPremium).HasColumnName("Top_Up_Premium");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");

                entity.Property(e => e.Up).HasColumnName("UP");

                entity.Property(e => e.UpsunlifeAccidentCare).HasColumnName("UPSunlifeAccidentCare");

                entity.Property(e => e.UpsunlifeCriticalCare).HasColumnName("UPSunlifeCriticalCare");

                entity.Property(e => e.UpsunlifeHospitalSurgicalCare)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPSunlifeHospitalSurgicalCare");

                entity.Property(e => e.UpsunlifeMedicalCare).HasColumnName("UPSunlifeMedicalCare");

                entity.Property(e => e.Vat).HasColumnName("VAT");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceFund>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceFund");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Code");

                entity.Property(e => e.FundCurrency).HasColumnName("Fund_Currency");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Name");

                entity.Property(e => e.FundProportion).HasColumnName("Fund_Proportion");

                entity.Property(e => e.FundType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Type");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssurancePartner>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssurancePartner");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address1)
                    .IsUnicode(false)
                    .HasColumnName("Address_1");

                entity.Property(e => e.Address2)
                    .IsUnicode(false)
                    .HasColumnName("Address_2");

                entity.Property(e => e.Address3)
                    .IsUnicode(false)
                    .HasColumnName("Address_3");

                entity.Property(e => e.AssurancePartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Assurance_PartnerCode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Email_Address");

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdpartnerCategory).HasColumnName("IDPartnerCategory");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Mobile_Phone");

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Office_Phone");

                entity.Property(e => e.PartnerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Code");

                entity.Property(e => e.PartnerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Partner_Name");

                entity.Property(e => e.PersonName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Person_Name");

                entity.Property(e => e.PostalCode).HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssurancePolicy>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssurancePolicy");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BasicPremium).HasColumnName("Basic_Premium");

                entity.Property(e => e.EndDate)
                    .HasColumnType("date")
                    .HasColumnName("End_Date");

                entity.Property(e => e.EndOfCoverage)
                    .HasColumnType("date")
                    .HasColumnName("End_of_Coverage");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InforceDate)
                    .HasColumnType("date")
                    .HasColumnName("Inforce_Date");

                entity.Property(e => e.InsuredDob)
                    .HasColumnType("date")
                    .HasColumnName("Insured_Dob");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.InvestPremium).HasColumnName("Invest_Premium");

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Cabang");

                entity.Property(e => e.Note)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PaymentFrequency).HasColumnName("Payment_Frequency");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.ReceiveDate)
                    .HasColumnType("date")
                    .HasColumnName("Receive_Date");

                entity.Property(e => e.SpajNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SPAJ_No");

                entity.Property(e => e.StatusPolis)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Status_Polis");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssurancePolicyAium>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssurancePolicyAIA");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Anp).HasColumnName("ANP");

                entity.Property(e => e.ApprovedSpdate)
                    .HasColumnType("date")
                    .HasColumnName("ApprovedSPDate");

                entity.Property(e => e.AreaName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Bbcname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BBCName");

                entity.Property(e => e.Bbcpolis)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BBCPolis");

                entity.Property(e => e.CaraBayar)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClientFA");

                entity.Property(e => e.ClientRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Distrik)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntrySpdate)
                    .HasColumnType("date")
                    .HasColumnName("EntrySPDate");

                entity.Property(e => e.IdbancAssurancePolicyAia).HasColumnName("IDBancAssurancePolicyAIA");

                entity.Property(e => e.InitialBranch)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IssuedDate).HasColumnType("date");

                entity.Property(e => e.Keterangan)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabangRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeFa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("KodeFA");

                entity.Property(e => e.KodeRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeSpv)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KodeSPV");

                entity.Property(e => e.Kurs)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LEVEL");

                entity.Property(e => e.LevelRef)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mtu)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("MTU");

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabangRef)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NamaFa)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NamaFA");

                entity.Property(e => e.NamaPemegangPolis)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaRef)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NamaTertanggung)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NiksalesSode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIKSalesSode");

                entity.Property(e => e.NoCin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoCIN");

                entity.Property(e => e.NoRekening)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NoSp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NoSP");

                entity.Property(e => e.PaymentFrequency)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyPlan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProposedDate).HasColumnType("date");

                entity.Property(e => e.Ptddate)
                    .HasColumnType("date")
                    .HasColumnName("PTDDate");

                entity.Property(e => e.Rcddate)
                    .HasColumnType("date")
                    .HasColumnName("RCDDate");

                entity.Property(e => e.Rekening)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StatusSurrenderDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.Tmk)
                    .HasColumnType("date")
                    .HasColumnName("TMK");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProduct");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ActiveFlag).HasColumnName("Active_Flag");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.BusinessModel).HasColumnName("Business_Model");

                entity.Property(e => e.CutOff)
                    .HasColumnType("datetime")
                    .HasColumnName("Cut_Off");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssurancePartner).HasColumnName("IDBancAssurancePartner");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.InceptionDate)
                    .HasColumnType("date")
                    .HasColumnName("Inception_Date");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SemiAnually).HasColumnName("Semi_Anually");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProductBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProductBankAccount");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductBankAccount).HasColumnName("IDBancAssuranceProductBankAccount");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProductFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProductFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductFee).HasColumnName("IDBancAssuranceProductFee");

                entity.Property(e => e.RegularPremium).HasColumnName("Regular_Premium");

                entity.Property(e => e.SinglePremium).HasColumnName("Single_Premium");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.YearTiering).HasColumnName("Year_Tiering");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProductFund>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProductFund");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductFund).HasColumnName("IDBancAssuranceProductFund");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProductRider>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProductRider");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRider).HasColumnName("IDBancAssuranceProductRider");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceProductRule>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceProductRule");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_Name");

                entity.Property(e => e.AccountNumber).HasColumnName("Account_Number");

                entity.Property(e => e.AllowPremiumTopUp).HasColumnName("Allow_Premium_Top_Up");

                entity.Property(e => e.FreeLookPeriodDay).HasColumnName("Free_Look_Period_day");

                entity.Property(e => e.GracePeriodDay).HasColumnName("Grace_Period_day");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceProductRule).HasColumnName("IDBancAssuranceProductRule");

                entity.Property(e => e.MaximumEntryAgeInsuredYear).HasColumnName("Maximum_Entry_Age_Insured_year");

                entity.Property(e => e.MaximumInsuredAmount).HasColumnName("Maximum_Insured_Amount");

                entity.Property(e => e.MinimumAgePolicyHolderYear).HasColumnName("Minimum_Age_Policy_Holder_year");

                entity.Property(e => e.MinimumEntryAgeInsuredYear).HasColumnName("Minimum_Entry_Age_Insured_year");

                entity.Property(e => e.MinimumPremium).HasColumnName("Minimum_Premium");

                entity.Property(e => e.PaymentPeriodYear).HasColumnName("Payment_Period_year");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceReferral>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceReferral");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Completename)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COMPLETENAME");

                entity.Property(e => e.Coorporatetittle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("COORPORATETITTLE");

                entity.Property(e => e.Costcenter)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COSTCENTER");

                entity.Property(e => e.Egdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EGDESC");

                entity.Property(e => e.Employeegroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEEGROUP");

                entity.Property(e => e.Employeesubgroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEESUBGROUP");

                entity.Property(e => e.Eselon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ESELON");

                entity.Property(e => e.Esgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ESGDESC");

                entity.Property(e => e.IdbancAssuranceReferral).HasColumnName("IDBancAssuranceReferral");

                entity.Property(e => e.Jg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JG");

                entity.Property(e => e.Job)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOB");

                entity.Property(e => e.Jobabbr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JOBABBR");

                entity.Property(e => e.Jobdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("JOBDESC");

                entity.Property(e => e.Kelompokjabatan)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("KELOMPOKJABATAN");

                entity.Property(e => e.Kodebranch)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KODEBRANCH");

                entity.Property(e => e.Mctext)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("MCTEXT");

                entity.Property(e => e.NoTelp1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NoTelp3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Organization)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ORGANIZATION");

                entity.Property(e => e.Orgdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ORGDESC");

                entity.Property(e => e.Padesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PADESC");

                entity.Property(e => e.Payareadesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYAREADESC");

                entity.Property(e => e.Payrollarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLAREA");

                entity.Property(e => e.Pernr)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERNR");

                entity.Property(e => e.Personnelarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELAREA");

                entity.Property(e => e.Personnelsubarea)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PERSONNELSUBAREA");

                entity.Property(e => e.Pg)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PG");

                entity.Property(e => e.Position)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("POSITION");

                entity.Property(e => e.Positiondesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("POSITIONDESC");

                entity.Property(e => e.Psadesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("PSADESC");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceRegistration>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceRegistration");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Name");

                entity.Property(e => e.CustomerCif)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Cif");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Customer_Name");

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Code");

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Referal_Name");

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Code");

                entity.Property(e => e.SalesName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sales_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceRegistrationDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceRegistrationDetail");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FundName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancAssuranceRegistration).HasColumnName("IDBancAssuranceRegistration");

                entity.Property(e => e.IdbancAssuranceRegistrationDetail).HasColumnName("IDBancAssuranceRegistrationDetail");

                entity.Property(e => e.InsuranceCompany)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insurance_Company");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.Percentage)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyHolderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Policy_Holder_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Product_Name");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RiderPremium)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceRider>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceRider");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.RiderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Code");

                entity.Property(e => e.RiderName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Rider_Name");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceSpaj>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceSPAJ");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("agentID");

                entity.Property(e => e.BeneficaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Beneficary_Name");

                entity.Property(e => e.IdbancAssuranceCustomer).HasColumnName("IDBancAssuranceCustomer");

                entity.Property(e => e.IdbancAssuranceProduct).HasColumnName("IDBancAssuranceProduct");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.InsureDateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("Insure_Date_of_Birth");

                entity.Property(e => e.InsuredName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Insured_Name");

                entity.Property(e => e.PremiumAmount).HasColumnName("Premium_Amount");

                entity.Property(e => e.PremiumFrequency).HasColumnName("Premium_frequency");

                entity.Property(e => e.ReferalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferalName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpajNo).HasColumnName("SPAJ_No");

                entity.Property(e => e.Spajstatus)
                    .IsUnicode(false)
                    .HasColumnName("SPAJStatus");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TotalAmount).HasColumnName("Total_Amount");

                entity.Property(e => e.TotalPremium).HasColumnName("Total_Premium");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceSpajfund>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceSPAJFund");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceFund).HasColumnName("IDBancAssuranceFund");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.IdbancAssuranceSpajfund).HasColumnName("IDBancAssuranceSPAJFund");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.NavDate)
                    .HasColumnType("date")
                    .HasColumnName("NAV_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceSpajrider>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceSPAJRider");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceSpaj).HasColumnName("IDBancAssuranceSPAJ");

                entity.Property(e => e.IdbancAssuranceSpajrider).HasColumnName("IDBancAssuranceSPAJRider");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTbancAssuranceTransaction>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancAssuranceTransaction");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.BillerCode)
                    .HasMaxLength(100)
                    .HasColumnName("Biller_Code");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Currency_Code");

                entity.Property(e => e.IdbancAssurancePolicy).HasColumnName("IDBancAssurancePolicy");

                entity.Property(e => e.IdbancAssuranceTransaction).HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.KodeBiller)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Kode_Biller");

                entity.Property(e => e.PaymentNo).HasColumnName("Payment_No");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Reference_No");

                entity.Property(e => e.SettlementAmount).HasColumnName("Settlement_Amount");

                entity.Property(e => e.SettlementDate)
                    .HasColumnType("date")
                    .HasColumnName("Settlement_Date");

                entity.Property(e => e.StatusCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("date")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("date")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDate1)
                    .HasColumnType("date")
                    .HasColumnName("Transaction_Date");
            });

            modelBuilder.Entity<TgenuitempTbancassuranceBalanceManulife>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TBancassuranceBalanceManulife");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Cifv10)
                    .HasMaxLength(14)
                    .HasColumnName("CIFV10")
                    .IsFixedLength();

                entity.Property(e => e.Currency)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdbancassuranceBalanceManulife).HasColumnName("IDBancassuranceBalanceManulife");

                entity.Property(e => e.JatuhTempoPolis).HasColumnType("date");

                entity.Property(e => e.Navcurrent).HasColumnName("NAVCurrent");

                entity.Property(e => e.Navopen).HasColumnName("NAVOpen");

                entity.Property(e => e.PemegangPolis)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PolicyStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Produk)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubmittedDate).HasColumnType("date");

                entity.Property(e => e.SwitchDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TanggalSaldo).HasColumnType("date");

                entity.Property(e => e.Tertanggung)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcompany>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCompany");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CountryCode)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcompany).HasColumnName("IDCompany");

                entity.Property(e => e.KodeAgenPenjual)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Logo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TrefSinvestParticipantTypeId).HasColumnName("TRefSInvestParticipantTypeID");
            });

            modelBuilder.Entity<TgenuitempTconfig>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TConfig");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Key)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TconfigDataTypeId).HasColumnName("TConfigDataTypeID");

                entity.Property(e => e.TconfigId).HasColumnName("TConfigID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.Value)
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTcustBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustBankAccount");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomer>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomer");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Aidno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("AIDNo");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Bcnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BCNumber");

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorExpiredDateOfSupplementaryDocs).HasColumnType("datetime");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorTypeOfSupplementaryDocs)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsCorpBond).HasColumnName("isCorpBond");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.IsGovBond).HasColumnName("isGovBond");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.IsMf).HasColumnName("isMF");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(375)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.OpDateCorpBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateGovBond).HasColumnType("datetime");

                entity.Property(e => e.OpDateMf)
                    .HasColumnType("datetime")
                    .HasColumnName("OpDateMF");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Sidcorp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDCorp");

                entity.Property(e => e.SidcorpGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDCorpGeneratedDate");

                entity.Property(e => e.SidgeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGeneratedDate");

                entity.Property(e => e.Sidgov)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SIDGov");

                entity.Property(e => e.SidgovGeneratedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("SIDGovGeneratedDate");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubRegNoStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubRekNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TaxCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTcustomerAddress>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerAddress");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AddressTypeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DistanceToBranchCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.District)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerAddress).HasColumnName("IDCustomerAddress");

                entity.Property(e => e.Idprovince)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDProvince");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Neighborhood)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OwnershipStatusOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneExtension)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SubDistrict)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerAuthContact>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerAuthContact");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpireDate).HasColumnType("datetime");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(767)
                    .IsUnicode(false);

                entity.Property(e => e.IdauthorizationType).HasColumnName("IDAuthorizationType");

                entity.Property(e => e.Idcity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCity");

                entity.Property(e => e.Idcountry)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDCountry");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerAuthContact).HasColumnName("IDCustomerAuthContact");

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.Idprovinsi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDProvinsi");

                entity.Property(e => e.IdregistrationDate)
                    .HasColumnType("datetime")
                    .HasColumnName("IDRegistrationDate");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IsIdexpiredSeumurHidup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("isIDExpiredSeumurHidup");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nationality)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NoID");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Npwpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPDate");

                entity.Property(e => e.OfficeNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Phone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerDocument>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerDocuments");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerDocument).HasColumnName("IDCustomerDocument");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerHeir>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerHeir");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerHeir).HasColumnName("IDCustomerHeir");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Relationship)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerModelRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerModelRiskProfileMapping");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ModelProfileId).HasColumnName("Model_ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerModelRiskProfileMappingId).HasColumnName("TCustomerModelRiskProfileMappingID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerOwnership>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerOwnership");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerOwnership).HasColumnName("IDCustomerOwnership");

                entity.Property(e => e.IdentityNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdentityType)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerProductRekeningMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerProductRekeningMapping");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerProductRekeningMapping).HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerProductRiskProfileMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerProductRiskProfileMapping");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.CustomerProfileId).HasColumnName("Customer_ProfileID");

                entity.Property(e => e.ProductProfileId).HasColumnName("Product_ProfileID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerProductRiskProfileMappingId).HasColumnName("TCustomerProductRiskProfileMappingID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerRegInvestmentPlan");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BreakDate).HasColumnType("date");

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.MaturityDate).HasColumnType("date");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("date");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuitempTcustomerRiskProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerRiskProfile");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTcustomerRiskProfileAnswer>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TCustomerRiskProfileAnswer");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTexchangeRate>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TExchangeRate");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateId).HasColumnName("TExchangeRateID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTexchangeRateByProduct>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TExchangeRateByProduct");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Bid).HasColumnName("BID");

                entity.Property(e => e.CcurrencyId).HasColumnName("CCurrencyID");

                entity.Property(e => e.Erdate)
                    .HasColumnType("date")
                    .HasColumnName("ERDate");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcurrencyId).HasColumnName("TCurrencyID");

                entity.Property(e => e.TexchangeRateByProductId).HasColumnName("TExchangeRateByProductID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTftFileTemplateColumn>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TFT_FileTemplateColumn");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Culture)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultValue)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TfileTemplateColumnId).HasColumnName("TFileTemplateColumnID");

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TrefColumnDataTypeId).HasColumnName("TRefColumnDataTypeID");

                entity.Property(e => e.TtransLookupId).HasColumnName("TTransLookupID");
            });

            modelBuilder.Entity<TgenuitempTftFileTemplateSample>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TFT_FileTemplateSample");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.ContentType)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");

                entity.Property(e => e.TfileTemplateSampleId).HasColumnName("TFileTemplateSampleID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTftTargetParameter>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TFT_TargetParameter");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.IsComputed).HasColumnName("is_computed");

                entity.Property(e => e.IsIdentity).HasColumnName("is_identity");

                entity.Property(e => e.IsNullable).HasColumnName("is_nullable");

                entity.Property(e => e.MaxLength).HasColumnName("max_length");

                entity.Property(e => e.ParameterName).HasMaxLength(256);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TtargetId).HasColumnName("TTargetID");

                entity.Property(e => e.TtargetParameterId).HasColumnName("TTargetParameterID");

                entity.Property(e => e.UserTypeId).HasColumnName("user_type_id");
            });

            modelBuilder.Entity<TgenuitempTftUploadTemplateMapping>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TFT_UploadTemplateMapping");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TargetParameterName).HasMaxLength(256);

                entity.Property(e => e.TemplateColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TuploadId).HasColumnName("TUploadID");

                entity.Property(e => e.TuploadTemplateMappingId).HasColumnName("TUploadTemplateMappingID");
            });

            modelBuilder.Entity<TgenuitempTfundHouse>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TFundHouse");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Address1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Address4)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address5)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person");

                entity.Property(e => e.ContactPerson2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Contact_Person2");

                entity.Property(e => e.ContactPerson3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COntact_Person3");

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Email2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.FhCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FH_Code");

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.Jsxcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("JSXCode");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.Phone)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Postal_Code");

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SwiftCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchingCount)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Count");

                entity.Property(e => e.SwitchingMonth)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Switching_Month");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTgoal>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TGoal");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Current)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Target)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TgoalId).HasColumnName("TGoalID");

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTholiday>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_Tholiday");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HolidayDate).HasColumnType("date");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idholiday).HasColumnName("IDHoliday");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTholidayGeneral>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_THolidayGeneral");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdholidayGeneral).HasColumnName("IDHolidayGeneral");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTincome>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TIncome");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTkursGeneral>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TKursGeneral");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.CurrDate).HasColumnType("datetime");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTmodel>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TModel");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.ModelName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");
            });

            modelBuilder.Entity<TgenuitempTnav>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TNAV");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BtaxRevenue).HasColumnName("BTaxRevenue");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Idnav).HasColumnName("IDNav");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Ihsg).HasColumnName("IHSG");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.NoUhactive).HasColumnName("NoUHActive");

                entity.Property(e => e.NoUhtotal).HasColumnName("NoUHTotal");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TotalMfee).HasColumnName("TotalMFee");
            });

            modelBuilder.Entity<TgenuitempTproduct>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProduct");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccStatementName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AumdateAdd).HasColumnName("AUMDateAdd");

                entity.Property(e => e.BapepamLkarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BapepamLKArticle");

                entity.Property(e => e.BapepamLkarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BapepamLKArticleDate");

                entity.Property(e => e.Bkcode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BKCode");

                entity.Property(e => e.BuyFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CbestNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CBestNo");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.CustFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeBatchOrder)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeRedemption)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSubscription)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeSwitching)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DividentInvestment)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdjenisProduct).HasColumnName("IDJenisProduct");

                entity.Property(e => e.Idmftype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMFType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductType).HasColumnName("IDProductType");

                entity.Property(e => e.Idstatus).HasColumnName("IDStatus");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.InitialNav).HasColumnName("InitialNAV");

                entity.Property(e => e.IsAutoEod).HasColumnName("IsAutoEOD");

                entity.Property(e => e.IsFoundation).HasColumnName("isFoundation");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode");

                entity.Property(e => e.Kctfile)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KCTFile");

                entity.Property(e => e.Kikarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKArticle");

                entity.Property(e => e.KikarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KIKArticleDate");

                entity.Property(e => e.KikplaceEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKPlaceEstablished");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.MaxTotDailyOf)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaxUnit)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.MaxUnits).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MaximumFeeRedemption).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MaximumFeeSubscription).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MaximumFeeSwitching).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MinimumFeeRedemption).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MinimumFeeSubscription).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MinimumFeeSwitching).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.MinimumRedemptionAmount).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.NavredMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NAVRedMethod");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPRegisterDate");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCountry)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Quota).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RedFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RelationalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Scano)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCANo");

                entity.Property(e => e.SellFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Sidno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIDNo");

                entity.Property(e => e.SinvestFundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SInvestFundCode");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SubFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTproductBankAccount>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductBankAccount");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDProductBankAccount");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Sacode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SACode");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTproductExitWindow>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductExitWindow");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductExitWindow).HasColumnName("IDProductExitWindow");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTproductFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeeRange).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductFee).HasColumnName("IDProductFee");

                entity.Property(e => e.PfolioCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SignMonth)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.Type)
                    .HasMaxLength(32)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTproductFeeByDate>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductFeeByDate");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TproductFeeByDateId).HasColumnName("TProductFeeByDateID");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTproductOfferingPeriod>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductOfferingPeriod");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductOfferingPeriod).HasColumnName("IDProductOfferingPeriod");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTproductRegInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductRegInvestmentPlan");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TproductRegInvestmentPlanId).HasColumnName("TProductRegInvestmentPlanID");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuitempTproductTransactionFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TProductTransactionFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BeginDate).HasColumnType("date");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuitempTrefBank>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefBank");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BimemberCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BIMemberCode");

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTrefBankBranch>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefBankBranch");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BranchCity)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchFax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BranchPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchStreet)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.BranchZip)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTrefBankCustody>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefBankCustody");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCity)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyFax)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.UnitHolderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TgenuitempTrefCurrency>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefCurrency");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTrefModel>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefModel");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");

                entity.Property(e => e.TproductTypeId).HasColumnName("TProductTypeID");

                entity.Property(e => e.TrefModelId).HasColumnName("TRefModelID");
            });

            modelBuilder.Entity<TgenuitempTrefProfile>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefProfile");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTrefProfileQuestion>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefProfileQuestion");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTrefProfileQuestionOption>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRefProfileQuestionOption");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.OptionId)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OptionID");

                entity.Property(e => e.OptionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTreferenceDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TReferenceDetail");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TreferenceDetailId).HasColumnName("TReferenceDetailID");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuitempTreferenceGroup>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TReferenceGroup");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TgenuitempTregularInvestmentPlan>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRegularInvestmentPlan");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.InvestmentPlanCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvestmentPlanName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<TgenuitempTregularInvestmentPlanFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRegularInvestmentPlanFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuitempTregularInvestmentPlanFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TRegularInvestmentPlanFeeDetail");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TregularInvestmentPlanFeeDetailId).HasColumnName("TRegularInvestmentPlanFeeDetailID");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");
            });

            modelBuilder.Entity<TgenuitempTsharingFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TSharingFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeType)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IsAumproduct).HasColumnName("IsAUMProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTsharingFeeRule>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TSharingFeeRule");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeRuleId).HasColumnName("FeeRuleID");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempTtransactionBooking>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TTransactionBooking");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.CustAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CustIdbankBranch).HasColumnName("CustIDBankBranch");

                entity.Property(e => e.CustIdcurrency).HasColumnName("CustIDCurrency");

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IdtransactionBooking).HasColumnName("IDTransactionBooking");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProdIdbankBranch).HasColumnName("ProdIDBankBranch");

                entity.Property(e => e.ProdIdcurrency).HasColumnName("ProdIDCurrency");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TransactionDate).HasColumnType("date");
            });

            modelBuilder.Entity<TgenuitempTtransactionFee>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TTransactionFee");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuitempTtransactionFeeDetail>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_TTransactionFeeDetail");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgeType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");

                entity.Property(e => e.TtransactionFeeDetailId).HasColumnName("TTransactionFeeDetailID");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");
            });

            modelBuilder.Entity<TgenuitempVUigenTagentStructure>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_vUIGEN_TAgentStructure");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<TgenuitempVtagentStructureSale>(entity =>
            {
                entity.HasKey(e => e.TgenuitempTableId);

                entity.ToTable("TGENUITEMP_VTAgentStructure_Sales");

                entity.Property(e => e.TgenuitempTableId).HasColumnName("TGENUITEMP_TABLE_ID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuitempChangeFlag).HasColumnName("TGENUITEMP_ChangeFlag");

                entity.Property(e => e.TgenuitempIddetail).HasColumnName("TGENUITEMP_IDDetail");

                entity.Property(e => e.TgenuitempIdmaster).HasColumnName("TGENUITEMP_IDMaster");

                entity.Property(e => e.TgenuitempSessionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_SessionID");

                entity.Property(e => e.TgenuitempSysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedBy");

                entity.Property(e => e.TgenuitempSysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysCreatedHost");

                entity.Property(e => e.TgenuitempSysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysCreatedTime");

                entity.Property(e => e.TgenuitempSysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedBy");

                entity.Property(e => e.TgenuitempSysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TGENUITEMP_sysModifiedHost");

                entity.Property(e => e.TgenuitempSysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("TGENUITEMP_sysModifiedTime");
            });

            modelBuilder.Entity<Tgoal>(entity =>
            {
                entity.ToTable("TGoal");

                entity.Property(e => e.TgoalId).HasColumnName("TGoalID");

                entity.Property(e => e.Current)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Target)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.Tgoals)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TGoal_TCustomer");
            });

            modelBuilder.Entity<TgoodFund>(entity =>
            {
                entity.HasKey(e => e.IdGoodFund);

                entity.ToTable("TGoodFund");

                entity.HasIndex(e => new { e.ProductCode, e.Navdate, e.UnitHolderIdNo }, "IX_TGoodFund");

                entity.Property(e => e.IdGoodFund).HasColumnName("idGoodFund");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdTransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idTransaction");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("(((0)-(0))-(0))");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ResourceBank)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<TgroupCust>(entity =>
            {
                entity.HasKey(e => e.GroupCust)
                    .HasName("PK_TGroupCust34")
                    .IsClustered(false);

                entity.ToTable("TGroupCust");

                entity.Property(e => e.GroupCust)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParentGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('<ROOT>')");

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TgroupCustList>(entity =>
            {
                entity.HasKey(e => new { e.GroupCust, e.CodeAgent });

                entity.ToTable("TGroupCustList");

                entity.Property(e => e.GroupCust)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsEnabled)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.GroupCustNavigation)
                    .WithMany(p => p.TgroupCustLists)
                    .HasForeignKey(d => d.GroupCust)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TGroupCustList_TGroupCust");
            });

            modelBuilder.Entity<TgroupMenu>(entity =>
            {
                entity.HasKey(e => e.GroupMenu)
                    .HasName("PK_TGroupMenu31")
                    .IsClustered(false);

                entity.ToTable("TGroupMenu");

                entity.Property(e => e.GroupMenu)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParentGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('<ROOT>')");

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TgroupMenuList>(entity =>
            {
                entity.HasKey(e => new { e.GroupMenu, e.Idmenu });

                entity.ToTable("TGroupMenuList");

                entity.Property(e => e.GroupMenu)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idmenu)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMenu")
                    .HasDefaultValueSql("(' ')");

                entity.HasOne(d => d.GroupMenuNavigation)
                    .WithMany(p => p.TgroupMenuLists)
                    .HasForeignKey(d => d.GroupMenu)
                    .HasConstraintName("FK_TGroupMenuList75");
            });

            modelBuilder.Entity<TgroupProduct>(entity =>
            {
                entity.HasKey(e => e.GroupProduct);

                entity.ToTable("TGroupProduct");

                entity.Property(e => e.GroupProduct)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("groupProduct")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TgroupProductList>(entity =>
            {
                entity.HasKey(e => new { e.GroupProduct, e.ProductCode });

                entity.ToTable("TGroupProductList");

                entity.Property(e => e.GroupProduct)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("groupProduct")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("productCode")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsEnabled).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.GroupProductNavigation)
                    .WithMany(p => p.TgroupProductLists)
                    .HasForeignKey(d => d.GroupProduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TGroupProductList_TGroupProduct");
            });

            modelBuilder.Entity<TholdUnit>(entity =>
            {
                entity.ToTable("THoldUnit");

                entity.HasIndex(e => e.OldTholdUnitId, "IX_THoldUnit")
                    .IsUnique()
                    .HasFilter("([OldTHoldUnitID] IS NOT NULL)");

                entity.Property(e => e.TholdUnitId).HasColumnName("THoldUnitID");

                entity.Property(e => e.CollateralId).HasColumnName("CollateralID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.OldTholdUnitId).HasColumnName("OldTHoldUnitID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.TholdUnits)
                    .HasForeignKey(d => d.IdsubAccount)
                    .HasConstraintName("FK_THoldUnit_TSubAccount");

                entity.HasOne(d => d.OldTholdUnit)
                    .WithOne(p => p.InverseOldTholdUnit)
                    .HasForeignKey<TholdUnit>(d => d.OldTholdUnitId)
                    .HasConstraintName("FK_THoldUnit_THoldUnit");
            });

            modelBuilder.Entity<Tholiday>(entity =>
            {
                entity.HasKey(e => e.Idholiday)
                    .HasName("PK__THoliday__73A783EF");

                entity.ToTable("THoliday");

                entity.HasIndex(e => new { e.Idcurrency, e.HolidayDate }, "IX_THoliday")
                    .IsUnique();

                entity.Property(e => e.Idholiday).HasColumnName("IDHoliday");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.HolidayDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.Tholidays)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_THoliday_TRefCurrency");
            });

            modelBuilder.Entity<TholidayGeneral>(entity =>
            {
                entity.HasKey(e => e.IdholidayGeneral);

                entity.ToTable("THolidayGeneral");

                entity.HasIndex(e => new { e.Idcurrency, e.DayInWeek }, "IX_THolidayGeneral")
                    .IsUnique();

                entity.Property(e => e.IdholidayGeneral).HasColumnName("IDHolidayGeneral");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcurrency)
                    .HasColumnName("IDCurrency")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TholidayGenerals)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_THolidayGeneral_TRefCurrency");
            });

            modelBuilder.Entity<Tiagent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TIAgent");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Parent)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Timage>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TImage");

                entity.Property(e => e.Image).HasColumnType("image");

                entity.Property(e => e.ImageId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ImageID");
            });

            modelBuilder.Entity<Tincome>(entity =>
            {
                entity.HasKey(e => e.Idincome)
                    .HasName("PK__TIncome__6CA4E639349D8CAB");

                entity.ToTable("TIncome");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Tinstruction>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TInstruction");

                entity.Property(e => e.AddressAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AddressUp)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("AddressUP");

                entity.Property(e => e.CityAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CityUp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CityUP");

                entity.Property(e => e.FaxAgent)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FaxUp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FaxUP");

                entity.Property(e => e.InstructionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("InstructionID");

                entity.Property(e => e.InstructionReport)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneAgent)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneUp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PhoneUP");

                entity.Property(e => e.Upname1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName1");

                entity.Property(e => e.Upname2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName2");

                entity.Property(e => e.Upname3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UPName3");

                entity.Property(e => e.ZipAgent)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ZipUp)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ZipUP");
            });

            modelBuilder.Entity<TinsuranceCover>(entity =>
            {
                entity.ToTable("TInsuranceCover");

                entity.Property(e => e.TinsuranceCoverId).HasColumnName("TInsuranceCoverID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.MonthlyExpenseDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Vchar1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Vchar2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TinsuranceCovers)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TInsuranceCover_TCustomer");
            });

            modelBuilder.Entity<Tiso8583dataElement>(entity =>
            {
                entity.HasKey(e => e.DataElementId)
                    .HasName("PK_ISO8583DataElement");

                entity.ToTable("TISO8583DataElement");

                entity.Property(e => e.DataElementId).HasColumnName("DataElementID");

                entity.Property(e => e.DataTypeId).HasColumnName("DataTypeID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IsGmt).HasColumnName("IsGMT");

                entity.Property(e => e.LengthTypeId).HasColumnName("LengthTypeID");

                entity.Property(e => e.MessageClassId).HasColumnName("MessageClassID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.DataType)
                    .WithMany(p => p.Tiso8583dataElements)
                    .HasForeignKey(d => d.DataTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TISO8583DataElement_TISO8583DataType");

                entity.HasOne(d => d.LengthType)
                    .WithMany(p => p.Tiso8583dataElements)
                    .HasForeignKey(d => d.LengthTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TISO8583DataElement_TISO8583LengthType");

                entity.HasOne(d => d.MessageClass)
                    .WithMany(p => p.Tiso8583dataElements)
                    .HasForeignKey(d => d.MessageClassId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TISO8583DataElement_TISO8583MessageClass");
            });

            modelBuilder.Entity<Tiso8583dataElementCategory>(entity =>
            {
                entity.HasKey(e => e.DataElementCategoryId);

                entity.ToTable("TISO8583DataElementCategory");

                entity.Property(e => e.DataElementCategoryId).HasColumnName("DataElementCategoryID");

                entity.Property(e => e.CategoryCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DataElementId).HasColumnName("DataElementID");

                entity.HasOne(d => d.DataElement)
                    .WithMany(p => p.Tiso8583dataElementCategories)
                    .HasForeignKey(d => d.DataElementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TISO8583DataElementCategory_TISO8583DataElement");
            });

            modelBuilder.Entity<Tiso8583dataElementDetail>(entity =>
            {
                entity.HasKey(e => e.DataElementDetailId);

                entity.ToTable("TISO8583DataElementDetail");

                entity.Property(e => e.DataElementDetailId).HasColumnName("DataElementDetailID");

                entity.Property(e => e.DataElementCategoryId).HasColumnName("DataElementCategoryID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Format)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LengthTypeId).HasColumnName("LengthTypeID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.DataElementCategory)
                    .WithMany(p => p.Tiso8583dataElementDetails)
                    .HasForeignKey(d => d.DataElementCategoryId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TISO8583DataElementDetail_TISO8583DataElement");
            });

            modelBuilder.Entity<Tiso8583dataType>(entity =>
            {
                entity.HasKey(e => e.DataTypeId);

                entity.ToTable("TISO8583DataType");

                entity.Property(e => e.DataTypeId).HasColumnName("DataTypeID");

                entity.Property(e => e.Description)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Notation)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tiso8583lengthType>(entity =>
            {
                entity.HasKey(e => e.LengthTypeId);

                entity.ToTable("TISO8583LengthType");

                entity.Property(e => e.LengthTypeId).HasColumnName("LengthTypeID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Notation)
                    .HasMaxLength(16)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tiso8583log>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("TISO8583Log");

                entity.Property(e => e.LogId).HasColumnName("LogID");

                entity.Property(e => e.Cif)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.ProcessingCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks).IsUnicode(false);

                entity.Property(e => e.RequestMessage).IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseMessage).IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<Tiso8583messageClass>(entity =>
            {
                entity.HasKey(e => e.MessageClassId)
                    .HasName("PK_ISO8583MessageClass");

                entity.ToTable("TISO8583MessageClass");

                entity.Property(e => e.MessageClassId).HasColumnName("MessageClassID");

                entity.Property(e => e.ClassCode)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TjenisProduct>(entity =>
            {
                entity.HasKey(e => e.IdjenisProduct);

                entity.ToTable("TJenisProduct");

                entity.Property(e => e.IdjenisProduct)
                    .ValueGeneratedNever()
                    .HasColumnName("IDJenisProduct");

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).IsUnicode(false);

                entity.Property(e => e.JenisProduct).IsUnicode(false);

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdateUser).IsUnicode(false);
            });

            modelBuilder.Entity<Tjob>(entity =>
            {
                entity.ToTable("TJob");

                entity.HasIndex(e => e.Name, "IX_TJob")
                    .IsUnique();

                entity.Property(e => e.TjobId).HasColumnName("TJobID");

                entity.Property(e => e.DailyTimeBegin).HasColumnType("datetime");

                entity.Property(e => e.DailyTimeEnd).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TjobDailyFrequencyId).HasColumnName("TJobDailyFrequencyID");

                entity.Property(e => e.TjobFrequencyId).HasColumnName("TJobFrequencyID");

                entity.HasOne(d => d.TjobDailyFrequency)
                    .WithMany(p => p.Tjobs)
                    .HasForeignKey(d => d.TjobDailyFrequencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TJob_TJobDailyFrequency");

                entity.HasOne(d => d.TjobFrequency)
                    .WithMany(p => p.Tjobs)
                    .HasForeignKey(d => d.TjobFrequencyId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TJob_TJobFrequency");
            });

            modelBuilder.Entity<TjobDailyFrequency>(entity =>
            {
                entity.ToTable("TJobDailyFrequency");

                entity.HasIndex(e => e.Name, "IX_TJobDailyFrequency")
                    .IsUnique();

                entity.Property(e => e.TjobDailyFrequencyId)
                    .ValueGeneratedNever()
                    .HasColumnName("TJobDailyFrequencyID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TjobFrequency>(entity =>
            {
                entity.ToTable("TJobFrequency");

                entity.HasIndex(e => e.Name, "IX_TJobFrequency")
                    .IsUnique();

                entity.Property(e => e.TjobFrequencyId)
                    .ValueGeneratedNever()
                    .HasColumnName("TJobFrequencyID");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TjournalPrm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TJournalPrm");

                entity.Property(e => e.AnalT0)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t0");

                entity.Property(e => e.AnalT1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t1");

                entity.Property(e => e.Ccy)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ccy")
                    .IsFixedLength();

                entity.Property(e => e.Descr)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("descr");

                entity.Property(e => e.JrnalType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("jrnal_type");

                entity.Property(e => e.TransId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("trans_id");

                entity.Property(e => e.TransName)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("trans_name");

                entity.Property(e => e.Treference)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("treference");
            });

            modelBuilder.Entity<TjournalScn>(entity =>
            {
                entity.HasKey(e => e.Rowid);

                entity.ToTable("TJournalScn");

                entity.Property(e => e.Rowid).HasColumnName("rowid");

                entity.Property(e => e.AccntCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("accnt_code")
                    .HasComment("COA");

                entity.Property(e => e.AccntDesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("accnt_desc");

                entity.Property(e => e.AccntType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("accnt_type")
                    .IsFixedLength()
                    .HasComment("D/C");

                entity.Property(e => e.AnalA4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_a4");

                entity.Property(e => e.AnalT2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t2");

                entity.Property(e => e.AnalT3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t3");

                entity.Property(e => e.AnalT4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t4");

                entity.Property(e => e.AnalT5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("anal_t5");

                entity.Property(e => e.TransId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("trans_id");
            });

            modelBuilder.Entity<Tkpiachievement>(entity =>
            {
                entity.HasKey(e => e.KpiachievementId)
                    .HasName("PK__TKPIAchi__87E80659B425B4FC");

                entity.ToTable("TKPIAchievement");

                entity.Property(e => e.KpiachievementId).HasColumnName("KPIAchievementID");

                entity.Property(e => e.Kpiachievement).HasColumnName("KPIAchievement");

                entity.Property(e => e.Kpisign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("KPISign");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Tkpisalary>(entity =>
            {
                entity.HasKey(e => e.KpisalaryId)
                    .HasName("PK__TKPISala__D1000922BCA554A6");

                entity.ToTable("TKPISalary");

                entity.Property(e => e.KpisalaryId).HasColumnName("KPISalaryID");

                entity.Property(e => e.EffSalaryDate).HasColumnType("date");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Tkpitarget>(entity =>
            {
                entity.HasKey(e => e.KpitargetId)
                    .HasName("PK__TKPITarg__179FFC668B0840B8");

                entity.ToTable("TKPITarget");

                entity.Property(e => e.KpitargetId).HasColumnName("KPITargetID");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TargetActiveAccount).HasColumnName("Target_ActiveAccount");

                entity.Property(e => e.TargetNcf).HasColumnName("Target_NCF");

                entity.Property(e => e.TargetQualitative).HasColumnName("Target_Qualitative");

                entity.Property(e => e.TargetRevenue).HasColumnName("Target_Revenue");

                entity.Property(e => e.WeightActiveAccount).HasColumnName("Weight_ActiveAccount");

                entity.Property(e => e.WeightNcf).HasColumnName("Weight_NCF");

                entity.Property(e => e.WeightQualitative).HasColumnName("Weight_Qualitative");

                entity.Property(e => e.WeightRevenue).HasColumnName("Weight_Revenue");
            });

            modelBuilder.Entity<Tkur>(entity =>
            {
                entity.HasKey(e => e.Idkurs);

                entity.ToTable("TKurs");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.CurrDate).HasColumnType("datetime");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.Tkurs)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TKurs_TRefCurrency");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.Tkurs)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TKurs_TProduct");
            });

            modelBuilder.Entity<TkursGeneral>(entity =>
            {
                entity.HasKey(e => e.Idkurs)
                    .HasName("PK_TKursGeneral_1");

                entity.ToTable("TKursGeneral");

                entity.Property(e => e.Idkurs).HasColumnName("IDKurs");

                entity.Property(e => e.CurrDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Idcurrency)
                    .HasColumnName("IDCurrency")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TkursGenerals)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TKursGeneral_TRefCurrency");
            });

            modelBuilder.Entity<TlinkTransaksi>(entity =>
            {
                entity.HasKey(e => e.Idtransaksi);

                entity.ToTable("TLinkTransaksi");

                entity.Property(e => e.Idtransaksi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaksi")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NoTransaksi)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TglTransaksi)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.TipeTransaksi)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TlogEndOfDay>(entity =>
            {
                entity.HasKey(e => new { e.Eoddate, e.ProcessId })
                    .HasName("PK_TEndOfDay");

                entity.ToTable("TLogEndOfDay");

                entity.Property(e => e.Eoddate)
                    .HasColumnType("datetime")
                    .HasColumnName("EODDate");

                entity.Property(e => e.ProcessId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ProcessID");

                entity.Property(e => e.Desc)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IsProcessed).HasColumnName("isProcessed");

                entity.Property(e => e.IsSucceded).HasColumnName("isSucceded");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");
            });

            modelBuilder.Entity<TlookUpClient>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TLookUpClient");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.LookupMapping)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TlookUpClientId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TLookUpClientID");

                entity.Property(e => e.Value)
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TlookUpDetail>(entity =>
            {
                entity.HasKey(e => e.RowId);

                entity.ToTable("TLookUpDetail");

                entity.Property(e => e.RowId)
                    .ValueGeneratedNever()
                    .HasColumnName("RowID");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Desc1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Desc2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Desc3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Desc4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Value4)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TlookupDetailBtpn>(entity =>
            {
                entity.ToTable("TLookupDetailBTPN");

                entity.Property(e => e.TlookupDetailBtpnid).HasColumnName("TLookupDetailBTPNID");

                entity.Property(e => e.Code)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LookupMapping)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmacroEconomicScenario>(entity =>
            {
                entity.ToTable("TMacroEconomicScenario");

                entity.Property(e => e.TmacroEconomicScenarioId).HasColumnName("TMacroEconomicScenarioID");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remark)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");
            });

            modelBuilder.Entity<TmappingConversiFw>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMappingConversiFW");

                entity.Property(e => e.ConversionCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FieldName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix1)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Fwconversion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("FWConversion");

                entity.Property(e => e.Fwprefix)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FWPrefix");

                entity.Property(e => e.TableName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmarketingHistory>(entity =>
            {
                entity.HasKey(e => e.IdAgentHistory);

                entity.ToTable("TMarketingHistory");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.TmarketingHistories)
                    .HasForeignKey(d => d.ParentId)
                    .HasConstraintName("FK_TMarketingHistory_TAgent");
            });

            modelBuilder.Entity<TmarketingLevel>(entity =>
            {
                entity.HasKey(e => e.LevelCode);

                entity.ToTable("TMarketingLevel");

                entity.Property(e => e.LevelCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LevelCodeParent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LevelName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.LevelCodeParentNavigation)
                    .WithMany(p => p.InverseLevelCodeParentNavigation)
                    .HasForeignKey(d => d.LevelCodeParent)
                    .HasConstraintName("FK_TMarketingLevel_TMarketingLevel");
            });

            modelBuilder.Entity<TmgtfeeHistory>(entity =>
            {
                entity.ToTable("TMGTFeeHistory");

                entity.Property(e => e.TmgtfeeHistoryId).HasColumnName("TMGTFeeHistoryId");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.FeeDate).HasColumnType("date");

                entity.Property(e => e.Mgtfee)
                    .HasColumnType("decimal(38, 18)")
                    .HasColumnName("MGTFee");

                entity.Property(e => e.NavValue).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.OutstandingUnits).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.SubAccountId).HasColumnName("SubAccountID");
            });

            modelBuilder.Entity<TmgtfeeHistoryStructure>(entity =>
            {
                entity.ToTable("TMGTFeeHistoryStructure");

                entity.Property(e => e.TmgtfeeHistoryStructureId).HasColumnName("TMGTFeeHistoryStructureId");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BranchId).HasColumnName("BranchID");

                entity.Property(e => e.BranchManagerId).HasColumnName("BranchManagerID");

                entity.Property(e => e.DivisionId).HasColumnName("DivisionID");

                entity.Property(e => e.FeeDate).HasColumnType("date");

                entity.Property(e => e.Mgtfee)
                    .HasColumnType("decimal(38, 18)")
                    .HasColumnName("MGTFee");

                entity.Property(e => e.NavValue).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.OutstandingUnits).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.SubAccountId).HasColumnName("SubAccountID");

                entity.Property(e => e.TeamLeaderId).HasColumnName("TeamLeaderID");
            });

            modelBuilder.Entity<TmigrasiAgent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMigrasiAgent");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");
            });

            modelBuilder.Entity<TmigrasiAgentBond>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMigrasiAgentBond");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.UnitHolderNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmigrasiAgentBond1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMigrasiAgentBond1");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TmigrasiCustomerSale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMigrasiCustomerSales");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TmiscMappingChild>(entity =>
            {
                entity.HasKey(e => e.DataId)
                    .HasName("PK__TMiscMap__9D05305DD5EA81A5");

                entity.ToTable("TMiscMappingChild");

                entity.Property(e => e.DataId).HasColumnName("DataID");

                entity.Property(e => e.ForeignCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Foreign_Code");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.WmsCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WMS_Code");

                entity.Property(e => e.WmsLabel)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("WMS_Label");

                entity.HasOne(d => d.Master)
                    .WithMany(p => p.TmiscMappingChildren)
                    .HasForeignKey(d => d.MasterId)
                    .HasConstraintName("FK__TMiscMapp__Maste__328D541C");
            });

            modelBuilder.Entity<TmiscMappingMaster>(entity =>
            {
                entity.HasKey(e => e.MasterId)
                    .HasName("PK__TMiscMap__F6B782C46D18BCCF");

                entity.ToTable("TMiscMappingMaster");

                entity.Property(e => e.MasterId).HasColumnName("MasterID");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MasterGroupName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Tmodel>(entity =>
            {
                entity.ToTable("TModel");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ModelName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Tmodule>(entity =>
            {
                entity.HasKey(e => e.ModuleId)
                    .HasName("PK__TModule__2BA1C44F");

                entity.ToTable("TModule");

                entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

                entity.Property(e => e.ModuleCode)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ModuleDescription)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ModuleName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.RecCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecCreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecEnabled).HasDefaultValueSql("((1))");

                entity.Property(e => e.RecModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TmonthlyStatementGenerate>(entity =>
            {
                entity.HasKey(e => e.NoUrut);

                entity.ToTable("TMonthlyStatementGenerate");

                entity.HasIndex(e => e.UnitHolderIdNo, "IDX_UnitHolderIDNo");

                entity.Property(e => e.FullName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.HomeAddress)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCity)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HomeCountry)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HomeZip)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdCurrency)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TanggalAwal).HasColumnType("datetime");

                entity.Property(e => e.TransType)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmpAfterScriptFt>(entity =>
            {
                entity.HasKey(e => e.TblId);

                entity.ToTable("__tmpAfterScriptFT");

                entity.Property(e => e.TblId).HasColumnName("TblID");

                entity.Property(e => e.CurrTime).HasColumnType("datetime");

                entity.Property(e => e.Data1)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.H2href)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("H2HRef");

                entity.Property(e => e.Host)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.Token)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tnav>(entity =>
            {
                entity.HasKey(e => e.Idnav);

                entity.ToTable("TNAV");

                entity.HasIndex(e => new { e.Idproduct, e.Navdate }, "IX_TNAV")
                    .IsUnique();

                entity.HasIndex(e => e.Navdate, "IX_TNAV_1");

                entity.Property(e => e.Idnav).HasColumnName("IDNav");

                entity.Property(e => e.BtaxRevenue).HasColumnName("BTaxRevenue");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Idproduct)
                    .HasColumnName("IDProduct")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Ihsg).HasColumnName("IHSG");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.NoUhactive).HasColumnName("NoUHActive");

                entity.Property(e => e.NoUhtotal).HasColumnName("NoUHTotal");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotalMfee).HasColumnName("TotalMFee");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.Tnavs)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TNAV_TProduct");
            });

            modelBuilder.Entity<TnavTemp>(entity =>
            {
                entity.HasKey(e => e.Idnavtemp);

                entity.ToTable("TNAV_Temp");

                entity.HasIndex(e => new { e.Idproduct, e.Navdate }, "IX_TNAV_Temp");

                entity.Property(e => e.Idnavtemp).HasColumnName("IDNAVTemp");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TnavTemps)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TNAV_Temp_TProduct");
            });

            modelBuilder.Entity<Tnavlog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TNAVLog");

                entity.Property(e => e.BtaxRevenue).HasColumnName("BTaxRevenue");

                entity.Property(e => e.Ihsg).HasColumnName("IHSG");

                entity.Property(e => e.LogDate).HasColumnType("datetime");

                entity.Property(e => e.LogUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.NoUhactive).HasColumnName("NoUHActive");

                entity.Property(e => e.NoUhtotal).HasColumnName("NoUHTotal");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TotalMfee).HasColumnName("TotalMFee");

                entity.Property(e => e.Value).HasColumnName("value");
            });

            modelBuilder.Entity<Tnavtemporary>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.Navdate });

                entity.ToTable("TNAVTemporary");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("('0/0/0')");

                entity.Property(e => e.BtaxRevenue)
                    .HasColumnName("BTaxRevenue")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClosingBalance).HasDefaultValueSql("((0))");

                entity.Property(e => e.DistributionUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.Ihsg)
                    .HasColumnName("IHSG")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Multiplier).HasDefaultValueSql("((0))");

                entity.Property(e => e.NoUhactive)
                    .HasColumnName("NoUHActive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NoUhtotal)
                    .HasColumnName("NoUHTotal")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OutstandingUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.Price).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecordNum).ValueGeneratedOnAdd();

                entity.Property(e => e.Total).HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalMfee)
                    .HasColumnName("TotalMFee")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalNetAsset).HasDefaultValueSql("((0))");

                entity.Property(e => e.Value)
                    .HasColumnName("value")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Tnews>(entity =>
            {
                entity.HasKey(e => e.NewsId);

                entity.ToTable("TNews");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((0))");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Title).IsUnicode(false);
            });

            modelBuilder.Entity<ToutStandingHistoryFifo>(entity =>
            {
                entity.HasKey(e => e.IdoutstandingHistory);

                entity.ToTable("TOutStandingHistoryFIFO");

                entity.HasIndex(e => new { e.IdSubAccount, e.IsActive, e.OutstandingDate }, "IX_TOutStandingHistoryFIFO_1");

                entity.Property(e => e.IdoutstandingHistory).HasColumnName("IDOutstandingHistory");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdredTransaction).HasColumnName("IDRedTransaction");

                entity.Property(e => e.IdsubTransaction).HasColumnName("IDSubTransaction");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.OutstandingDate).HasColumnType("datetime");

                entity.HasOne(d => d.IdSalesNavigation)
                    .WithMany(p => p.ToutStandingHistoryFifos)
                    .HasForeignKey(d => d.IdSales)
                    .HasConstraintName("FK_TOutStandingHistoryFIFO_TAgent");

                entity.HasOne(d => d.IdSubAccountNavigation)
                    .WithMany(p => p.ToutStandingHistoryFifos)
                    .HasForeignKey(d => d.IdSubAccount)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOutStandingHistoryFIFO_TSubAccount");

                entity.HasOne(d => d.IdredTransactionNavigation)
                    .WithMany(p => p.ToutStandingHistoryFifoIdredTransactionNavigations)
                    .HasForeignKey(d => d.IdredTransaction)
                    .HasConstraintName("FK_TOutStandingHistoryFIFO_TTransaction1");

                entity.HasOne(d => d.IdsubTransactionNavigation)
                    .WithMany(p => p.ToutStandingHistoryFifoIdsubTransactionNavigations)
                    .HasForeignKey(d => d.IdsubTransaction)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TOutStandingHistoryFIFO_TTransaction");
            });

            modelBuilder.Entity<Toutstanding>(entity =>
            {
                entity.HasKey(e => new { e.UnitHolderIdNo, e.ProductCode, e.IdTransaction });

                entity.ToTable("TOutstanding");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdTransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Units).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<ToutstandingHistory>(entity =>
            {
                entity.HasKey(e => new { e.UnitHolderIdNo, e.ProductCode, e.SubIdTransaction, e.RedIdTransaction });

                entity.ToTable("TOutstandingHistory");

                entity.Property(e => e.UnitHolderIdNo)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SubIdTransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RedIdTransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RedNavdate)
                    .HasColumnType("datetime")
                    .HasColumnName("RedNAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.SubNavdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SubNAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Units).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Tpph23>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.Date })
                    .HasName("PK_TProductPPh23");

                entity.ToTable("TPPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");
            });

            modelBuilder.Entity<Tprize>(entity =>
            {
                entity.HasKey(e => e.PrizeId);

                entity.ToTable("TPrize");

                entity.Property(e => e.PrizeId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PrizeID")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.PrizeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");
            });

            modelBuilder.Entity<TprizeGift>(entity =>
            {
                entity.HasKey(e => new { e.PrizeId, e.Sequence });

                entity.ToTable("TPrizeGift");

                entity.Property(e => e.PrizeId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.GiftName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.HasOne(d => d.Prize)
                    .WithMany(p => p.TprizeGifts)
                    .HasForeignKey(d => d.PrizeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TPrizeGift_TPrize");
            });

            modelBuilder.Entity<Tprocess>(entity =>
            {
                entity.HasKey(e => e.ProcessId);

                entity.ToTable("TProcess");

                entity.Property(e => e.ProcessId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProcessID");

                entity.Property(e => e.ProcessName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SprocName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Sproc_Name");
            });

            modelBuilder.Entity<TprodClientGathering>(entity =>
            {
                entity.HasKey(e => e.ClientGatheringId);

                entity.ToTable("TProdClientGathering");

                entity.Property(e => e.ClientGatheringId).HasColumnName("ClientGatheringID");

                entity.Property(e => e.ClientGatheringName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");

                entity.Property(e => e.GatheringDate).HasColumnType("datetime");

                entity.Property(e => e.GatheringVenue)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Product).IsUnicode(false);
            });

            modelBuilder.Entity<TprodClientReporterBackup>(entity =>
            {
                entity.HasKey(e => e.ClientReporterBackupId);

                entity.ToTable("TProdClientReporterBackup");

                entity.Property(e => e.ClientReporterBackupId).HasColumnName("ClientReporterBackupID");

                entity.Property(e => e.ClientReporterBackupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodCrmaccountManager>(entity =>
            {
                entity.HasKey(e => e.CrmaccountManagerId);

                entity.ToTable("TProdCRMAccountManager");

                entity.Property(e => e.CrmaccountManagerId).HasColumnName("CRMAccountManagerID");

                entity.Property(e => e.CrmaccountManagerName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRMAccountManagerName");
            });

            modelBuilder.Entity<TprodCustodian>(entity =>
            {
                entity.HasKey(e => e.CustodianId);

                entity.ToTable("TProdCustodian");

                entity.Property(e => e.CustodianId).HasColumnName("CustodianID");

                entity.Property(e => e.CustodianName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Notes)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodCustodianPic>(entity =>
            {
                entity.HasKey(e => e.CustodianPicid);

                entity.ToTable("TProdCustodianPIC");

                entity.Property(e => e.CustodianPicid).HasColumnName("CustodianPICID");

                entity.Property(e => e.Address)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactTitle)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CustodianId).HasColumnName("CustodianID");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodDistAgreement>(entity =>
            {
                entity.HasKey(e => e.DistAgreementId)
                    .HasName("PK_TProdDistributionAgreement");

                entity.ToTable("TProdDistAgreement");

                entity.Property(e => e.DistAgreementId).HasColumnName("DistAgreementID");

                entity.Property(e => e.Contents).HasColumnType("text");

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DocLocation).IsUnicode(false);

                entity.Property(e => e.DocTitle)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodDistributor>(entity =>
            {
                entity.HasKey(e => e.DistributorId);

                entity.ToTable("TProdDistributor");

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");

                entity.Property(e => e.DistributorName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Notes).IsUnicode(false);
            });

            modelBuilder.Entity<TprodDistributorPic>(entity =>
            {
                entity.HasKey(e => e.DistributorPicid);

                entity.ToTable("TProdDistributorPIC");

                entity.Property(e => e.DistributorPicid).HasColumnName("DistributorPICID");

                entity.Property(e => e.Address)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContactTitle)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FaxNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Province)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodDistributorSale>(entity =>
            {
                entity.HasKey(e => e.DistributorSalesId);

                entity.ToTable("TProdDistributorSales");

                entity.Property(e => e.DistributorSalesId).HasColumnName("DistributorSalesID");

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");

                entity.Property(e => e.LastUpdate).HasColumnType("datetime");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");
            });

            modelBuilder.Entity<TprodFundManager>(entity =>
            {
                entity.HasKey(e => e.FundManagerId);

                entity.ToTable("TProdFundManager");

                entity.Property(e => e.FundManagerId).HasColumnName("FundManagerID");

                entity.Property(e => e.FundManagerName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Specialty)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodFundType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TProdFundType");

                entity.Property(e => e.FundTypeId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("FundTypeID");

                entity.Property(e => e.FundTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodIncident>(entity =>
            {
                entity.HasKey(e => e.IncidentId);

                entity.ToTable("TProdIncident");

                entity.Property(e => e.IncidentId).HasColumnName("IncidentID");

                entity.Property(e => e.ActionTaken).IsUnicode(false);

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.IncidentDate).HasColumnType("datetime");

                entity.Property(e => e.IncidentName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PartiesInvolved)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.SolutionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<TprodLegalType>(entity =>
            {
                entity.HasKey(e => e.LegalTypeId);

                entity.ToTable("TProdLegalType");

                entity.Property(e => e.LegalTypeId).HasColumnName("LegalTypeID");

                entity.Property(e => e.LegalTypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TprodMfdocument>(entity =>
            {
                entity.HasKey(e => e.MfdocumentsId);

                entity.ToTable("TProdMFDocuments");

                entity.Property(e => e.MfdocumentsId).HasColumnName("MFDocumentsID");

                entity.Property(e => e.Contents).HasColumnType("text");

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DocLocation).IsUnicode(false);

                entity.Property(e => e.DocTitle)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnName("ProductID");
            });

            modelBuilder.Entity<TprodPfolioOwner>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TProdPFolioOwner");

                entity.Property(e => e.PfolioOwnerId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("PFolioOwnerID");

                entity.Property(e => e.PfolioOwnerName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PFolioOwnerName");
            });

            modelBuilder.Entity<TprodPima>(entity =>
            {
                entity.HasKey(e => e.Pimaid);

                entity.ToTable("TProdPIMA");

                entity.Property(e => e.Pimaid).HasColumnName("PIMAID");

                entity.Property(e => e.Contents).HasColumnType("text");

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DocLocation).IsUnicode(false);

                entity.Property(e => e.DocTitle)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ProductId).HasColumnName("ProductID");
            });

            modelBuilder.Entity<TprodProduct>(entity =>
            {
                entity.HasKey(e => e.ProductId);

                entity.ToTable("TProdProduct");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.Allocation).IsUnicode(false);

                entity.Property(e => e.ClientReporterBackupId).HasColumnName("ClientReporterBackupID");

                entity.Property(e => e.CrmaccountManagerId).HasColumnName("CRMAccountManagerID");

                entity.Property(e => e.CustodianId).HasColumnName("CustodianID");

                entity.Property(e => e.FundManagerId).HasColumnName("FundManagerID");

                entity.Property(e => e.FundTypeId).HasColumnName("FundTypeID");

                entity.Property(e => e.InvestCard).IsUnicode(false);

                entity.Property(e => e.LaunchDate).HasColumnType("datetime");

                entity.Property(e => e.LegalTypeId).HasColumnName("LegalTypeID");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.PfolioOwnerId).HasColumnName("PFolioOwnerID");

                entity.Property(e => e.ProductCard).IsUnicode(false);

                entity.Property(e => e.ProductConcept).IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductStatusId).HasColumnName("ProductStatusID");
            });

            modelBuilder.Entity<TprodProductDistributor>(entity =>
            {
                entity.HasKey(e => new { e.ProductId, e.DistributorId });

                entity.ToTable("TProdProductDistributor");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.DistributorId).HasColumnName("DistributorID");
            });

            modelBuilder.Entity<TprodProductFundManager>(entity =>
            {
                entity.HasKey(e => new { e.ProductId, e.FundManagerId });

                entity.ToTable("TProdProductFundManager");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.FundManagerId).HasColumnName("FundManagerID");
            });

            modelBuilder.Entity<TprodProductStatus>(entity =>
            {
                entity.HasKey(e => e.ProductStatusId);

                entity.ToTable("TProdProductStatus");

                entity.Property(e => e.ProductStatusId).HasColumnName("ProductStatusID");

                entity.Property(e => e.ProductStatusName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tproduct>(entity =>
            {
                entity.HasKey(e => e.Idproduct)
                    .HasName("PK__TProduct__749BA828");

                entity.ToTable("TProduct");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.AccStatementName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AumdateAdd).HasColumnName("AUMDateAdd");

                entity.Property(e => e.BapepamLkarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BapepamLKArticle");

                entity.Property(e => e.BapepamLkarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("BapepamLKArticleDate");

                entity.Property(e => e.Bkcode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BKCode");

                entity.Property(e => e.BuyFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CbestNo)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("CBestNo");

                entity.Property(e => e.Charges).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.CustFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTimeBatchOrder)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('00:00')");

                entity.Property(e => e.CutOffTimeRedemption)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('00:00')");

                entity.Property(e => e.CutOffTimeSubscription)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('00:00')");

                entity.Property(e => e.CutOffTimeSwitching)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('00:00')");

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DividentInvestment)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.IdjenisProduct).HasColumnName("IDJenisProduct");

                entity.Property(e => e.Idmftype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMFType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdproductType).HasColumnName("IDProductType");

                entity.Property(e => e.Idstatus).HasColumnName("IDStatus");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.InitialNav).HasColumnName("InitialNAV");

                entity.Property(e => e.InitialUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsAutoEod).HasColumnName("IsAutoEOD");

                entity.Property(e => e.IsFoundation).HasColumnName("isFoundation");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Kctfile)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KCTFile");

                entity.Property(e => e.Kikarticle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKArticle");

                entity.Property(e => e.KikarticleDate)
                    .HasColumnType("datetime")
                    .HasColumnName("KIKArticleDate");

                entity.Property(e => e.KikplaceEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("KIKPlaceEstablished");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.MaxCust).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxDaily).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxHold).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxHoldAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxTotDaily).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxTotDailyOf)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaxUnit)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.MaxUnits).HasColumnType("numeric(13, 0)");

                entity.Property(e => e.MaximumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MaximumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Micode)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MinSwitchingMode).HasDefaultValueSql("((1))");

                entity.Property(e => e.MinUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinUnitValue).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinimumFeeRedemption).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSubscription).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumFeeSwitching).HasColumnType("numeric(5, 2)");

                entity.Property(e => e.MinimumRedemptionAmount).HasColumnType("numeric(15, 2)");

                entity.Property(e => e.NavredMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NAVRedMethod")
                    .HasDefaultValueSql("('RED')");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpregisterDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPRegisterDate");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCountry)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Quota).HasColumnType("numeric(13, 0)");

                entity.Property(e => e.RedFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RedMinMode).HasDefaultValueSql("((1))");

                entity.Property(e => e.RelationalCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('DEFAULT')");

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('DEFAULT')");

                entity.Property(e => e.Scano)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("SCANo");

                entity.Property(e => e.SellFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Sidno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SIDNo");

                entity.Property(e => e.SinvestFundCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SInvestFundCode");

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.SubFeePeriodUnit)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");

                entity.Property(e => e.TotalUnit).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.Fh)
                    .WithMany(p => p.Tproducts)
                    .HasForeignKey(d => d.FhId)
                    .HasConstraintName("FK_TProduct_TFundHouse");

                entity.HasOne(d => d.IdbankCustodyNavigation)
                    .WithMany(p => p.Tproducts)
                    .HasForeignKey(d => d.IdbankCustody)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProduct_TRefBankCustody");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.Tproducts)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProduct_TRefCurrency");

                entity.HasOne(d => d.Profile)
                    .WithMany(p => p.Tproducts)
                    .HasForeignKey(d => d.ProfileId)
                    .HasConstraintName("FK_TProduct_TRefProfile");
            });

            modelBuilder.Entity<TproductBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdproductBankAccount)
                    .HasName("PK__TProduct__FE63F36C74C8275F");

                entity.ToTable("TProductBankAccount");

                entity.HasIndex(e => new { e.Idproduct, e.AccountNo }, "IX_TProductBankAccount");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDProductBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.Sacode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SACode");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdaccountBankTypeNavigation)
                    .WithMany(p => p.TproductBankAccounts)
                    .HasForeignKey(d => d.IdaccountBankType)
                    .HasConstraintName("FK_TProductBankAccount_TRefAccountBankType");

                entity.HasOne(d => d.IdbankBranchNavigation)
                    .WithMany(p => p.TproductBankAccounts)
                    .HasForeignKey(d => d.IdbankBranch)
                    .HasConstraintName("FK_TProductBankAccount_TRefBankBranch");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TproductBankAccounts)
                    .HasForeignKey(d => d.Idcurrency)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBankAccount_TRefCurrency");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductBankAccounts)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBankAccount_TProduct");
            });

            modelBuilder.Entity<TproductBankBic>(entity =>
            {
                entity.HasKey(e => e.Idbic)
                    .HasName("PK_TProductBIC");

                entity.ToTable("TProductBankBIC");

                entity.Property(e => e.Idbic).HasColumnName("IDBIC");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDProductBankAccount");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductBankBics)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBIC_TProduct");

                entity.HasOne(d => d.IdproductBankAccountNavigation)
                    .WithMany(p => p.TproductBankBics)
                    .HasForeignKey(d => d.IdproductBankAccount)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBIC_TProductBankAccount");
            });

            modelBuilder.Entity<TproductBundling>(entity =>
            {
                entity.ToTable("TProductBundling");

                entity.HasIndex(e => e.BundlingCode, "IX_TProductBundling")
                    .IsUnique();

                entity.Property(e => e.TproductBundlingId).HasColumnName("TProductBundlingID");

                entity.Property(e => e.BundlingCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BundlingName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");
            });

            modelBuilder.Entity<TproductBundlingDetail>(entity =>
            {
                entity.ToTable("TProductBundlingDetail");

                entity.Property(e => e.TproductBundlingDetailId).HasColumnName("TProductBundlingDetailID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TproductBundlingId).HasColumnName("TProductBundlingID");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductBundlingDetails)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBundlingDetail_TProduct");

                entity.HasOne(d => d.TproductBundling)
                    .WithMany(p => p.TproductBundlingDetails)
                    .HasForeignKey(d => d.TproductBundlingId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBundlingDetail_TProductBundling");
            });

            modelBuilder.Entity<TproductBundlingRegistration>(entity =>
            {
                entity.ToTable("TProductBundlingRegistration");

                entity.HasIndex(e => new { e.Idcustomer, e.TproductBundlingId, e.BeginDate, e.EndDate }, "IX_TProductBundlingRegistration")
                    .IsUnique();

                entity.Property(e => e.TproductBundlingRegistrationId).HasColumnName("TProductBundlingRegistrationID");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TproductBundlingId).HasColumnName("TProductBundlingID");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TproductBundlingRegistrations)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBundlingRegistration_TCustomer");

                entity.HasOne(d => d.TproductBundling)
                    .WithMany(p => p.TproductBundlingRegistrations)
                    .HasForeignKey(d => d.TproductBundlingId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductBundlingRegistration_TProductBundling");
            });

            modelBuilder.Entity<TproductCategory>(entity =>
            {
                entity.ToTable("TProductCategory");

                entity.Property(e => e.TproductCategoryId).HasColumnName("TProductCategoryID");

                entity.Property(e => e.ProductCategoryCode)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCategoryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TproductComposition>(entity =>
            {
                entity.HasKey(e => e.IdproductComposition)
                    .HasName("PK_TProductComposition79")
                    .IsClustered(false);

                entity.ToTable("TProductComposition");

                entity.Property(e => e.IdproductComposition)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductComposition");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Type)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Value).HasColumnName("value");
            });

            modelBuilder.Entity<TproductCoupon>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.CouponDate })
                    .HasName("PK_TProductCoupon54")
                    .IsClustered(false);

                entity.ToTable("TProductCoupon");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CouponDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.CouponRate).HasDefaultValueSql("((0))");

                entity.Property(e => e.CouponType)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TproductCustomer>(entity =>
            {
                entity.ToTable("TProductCustomer");

                entity.HasIndex(e => e.Idproduct, "IX_TProductCustomer")
                    .IsUnique();

                entity.Property(e => e.TproductCustomerId).HasColumnName("TProductCustomerID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithOne(p => p.TproductCustomer)
                    .HasForeignKey<TproductCustomer>(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductCustomer_TProduct");
            });

            modelBuilder.Entity<TproductDividendSchedule>(entity =>
            {
                entity.HasKey(e => new { e.PdscheduleId, e.ProductCode, e.DividendDate })
                    .HasName("PK_TProdDividend");

                entity.ToTable("TProductDividendSchedule");

                entity.Property(e => e.PdscheduleId).HasColumnName("PDScheduleID");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DividendDate).HasColumnType("datetime");

                entity.Property(e => e.AlertDate).HasColumnType("datetime");

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TproductEmail>(entity =>
            {
                entity.HasKey(e => e.IdproductEmail);

                entity.ToTable("TProductEmail");

                entity.Property(e => e.IdproductEmail).HasColumnName("IDProductEmail");

                entity.Property(e => e.Email)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductEmails)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductEmail_TProductEmail");
            });

            modelBuilder.Entity<TproductExitWindow>(entity =>
            {
                entity.HasKey(e => e.IdproductExitWindow)
                    .HasName("PK__TProduct__B737957FD3C6F036");

                entity.ToTable("TProductExitWindow");

                entity.Property(e => e.IdproductExitWindow).HasColumnName("IDProductExitWindow");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductExitWindows)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductExitWindow_TProduct");
            });

            modelBuilder.Entity<TproductFee>(entity =>
            {
                entity.HasKey(e => e.IdproductFee)
                    .HasName("PK__TProduct__55CE80B42847CB65");

                entity.ToTable("TProductFee");

                entity.HasIndex(e => new { e.Idproduct, e.Type, e.Pos }, "IX_TProductFee");

                entity.Property(e => e.IdproductFee).HasColumnName("IDProductFee");

                entity.Property(e => e.DateUpdate).HasColumnType("datetime");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeeRange).HasColumnType("decimal(30, 10)");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.PfolioCode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.SignMonth)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Type)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductFees)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductFee_TProduct");
            });

            modelBuilder.Entity<TproductFeeByDate>(entity =>
            {
                entity.ToTable("TProductFeeByDate");

                entity.HasIndex(e => new { e.Idproduct, e.Type, e.EffectiveDate }, "IX_TProductFeeByDate")
                    .IsUnique();

                entity.Property(e => e.TproductFeeByDateId).HasColumnName("TProductFeeByDateID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Type)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.Fee)
                    .WithMany(p => p.TproductFeeByDates)
                    .HasForeignKey(d => d.FeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductFeeByDate_TSharingFee");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductFeeByDates)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductFeeByDate_TProduct");

                entity.HasOne(d => d.UpFrontTrxFeeNavigation)
                    .WithMany(p => p.TproductFeeByDates)
                    .HasForeignKey(d => d.UpFrontTrxFee)
                    .HasConstraintName("FK_TProductFeeByDate_TTransactionFee");
            });

            modelBuilder.Entity<TproductGroup>(entity =>
            {
                entity.HasKey(e => e.GroupId);

                entity.ToTable("TProductGroup");

                entity.Property(e => e.GroupId)
                    .ValueGeneratedNever()
                    .HasColumnName("GroupID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentId).HasColumnName("ParentID");
            });

            modelBuilder.Entity<TproductGroupList>(entity =>
            {
                entity.HasKey(e => new { e.GroupId, e.ProductCode });

                entity.ToTable("TProductGroupList");

                entity.Property(e => e.GroupId).HasColumnName("GroupID");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Group)
                    .WithMany(p => p.TproductGroupLists)
                    .HasForeignKey(d => d.GroupId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductGroupList_TProductGroup");
            });

            modelBuilder.Entity<TproductHistory>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TProductHistory");

                entity.Property(e => e.Charges).HasDefaultValueSql("((0))");

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdbankCustody)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustody")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idmftype)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDMFType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.InitialUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.LogDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.LogUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MaxCust).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxDaily).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxHold).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaxHoldAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.MinUnit).HasDefaultValueSql("((0))");

                entity.Property(e => e.MinUnitValue).HasDefaultValueSql("((0))");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RedMin).HasDefaultValueSql("((0))");

                entity.Property(e => e.RedSettle).HasDefaultValueSql("((0))");

                entity.Property(e => e.RelationalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.StatusChangeBy)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StatusChangeDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.SubsAdd).HasDefaultValueSql("((0))");

                entity.Property(e => e.SubsAwal).HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalUnit).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TproductMassRedemption>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.SeqNo, e.MassRedDate });

                entity.ToTable("TProductMassRedemption");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MassRedDate).HasColumnType("datetime");

                entity.Property(e => e.AlertDate).HasColumnType("datetime");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TproductMgtFee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TProductMgtFee");

                entity.Property(e => e.MgtFee).HasDefaultValueSql("((0))");

                entity.Property(e => e.MgtFeeDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TotalNetAsset).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TproductOfferingPeriod>(entity =>
            {
                entity.HasKey(e => e.IdproductOfferingPeriod)
                    .HasName("PK__TProduct__C5653AF20BAB8CB7");

                entity.ToTable("TProductOfferingPeriod");

                entity.HasIndex(e => new { e.Idproduct, e.No }, "IX_TProductOfferingPeriod")
                    .IsUnique();

                entity.Property(e => e.IdproductOfferingPeriod).HasColumnName("IDProductOfferingPeriod");

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductOfferingPeriods)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductOfferingPeriod_TProduct");
            });

            modelBuilder.Entity<TproductOthersFee>(entity =>
            {
                entity.HasKey(e => e.IdProductOthersFee);

                entity.ToTable("TProductOthersFee");

                entity.Property(e => e.IdProductOthersFee)
                    .ValueGeneratedNever()
                    .HasColumnName("idProductOthersFee");

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.IdothersFee)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDOthersFee");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TproductPoFtype>(entity =>
            {
                entity.HasKey(e => new { e.PoFtypeId, e.ProductCode });

                entity.ToTable("TProductPoFType");

                entity.Property(e => e.PoFtypeId).HasColumnName("PoFTypeID");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IntDaysCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PoFtypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PoFTypeName");
            });

            modelBuilder.Entity<TproductQuotum>(entity =>
            {
                entity.HasKey(e => e.NavDate);

                entity.ToTable("TProductQuota");

                entity.Property(e => e.NavDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");
            });

            modelBuilder.Entity<TproductRegInvestmentPlan>(entity =>
            {
                entity.ToTable("TProductRegInvestmentPlan");

                entity.Property(e => e.TproductRegInvestmentPlanId).HasColumnName("TProductRegInvestmentPlanID");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");

                entity.HasOne(d => d.Channel)
                    .WithMany(p => p.TproductRegInvestmentPlans)
                    .HasForeignKey(d => d.ChannelId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductRegInvestmentPlan_TRefTransactionGenerator");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductRegInvestmentPlans)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductRegInvestmentPlan_TProduct");

                entity.HasOne(d => d.TregularInvestmentPlan)
                    .WithMany(p => p.TproductRegInvestmentPlans)
                    .HasForeignKey(d => d.TregularInvestmentPlanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductRegInvestmentPlan_TRegularInvestmentPlan");
            });

            modelBuilder.Entity<TproductTransactionFee>(entity =>
            {
                entity.ToTable("TProductTransactionFee");

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.BeginDate).HasColumnType("date");

                entity.Property(e => e.ChannelId).HasColumnName("ChannelID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TproductTransactionFees)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductTransactionFee_TProduct");

                entity.HasOne(d => d.TrxIdcategoryNavigation)
                    .WithMany(p => p.TproductTransactionFees)
                    .HasForeignKey(d => d.TrxIdcategory)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductTransactionFee_TRefCategory");

                entity.HasOne(d => d.TtransactionFee)
                    .WithMany(p => p.TproductTransactionFees)
                    .HasForeignKey(d => d.TtransactionFeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TProductTransactionFee_TTransactionFee");
            });

            modelBuilder.Entity<TproductTransfer>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.Idcategory });

                entity.ToTable("TProductTransfer");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");
            });

            modelBuilder.Entity<TproductTransferAgent>(entity =>
            {
                entity.HasKey(e => new { e.ProductCode, e.CodeAgent, e.Idcategory });

                entity.ToTable("TProductTransferAgent");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");
            });

            modelBuilder.Entity<TproductType>(entity =>
            {
                entity.HasKey(e => e.IdproductType);

                entity.ToTable("TProductType");

                entity.Property(e => e.IdproductType)
                    .ValueGeneratedNever()
                    .HasColumnName("IDProductType");

                entity.Property(e => e.CreateDate).HasColumnType("datetime");

                entity.Property(e => e.CreateUser).IsUnicode(false);

                entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

                entity.Property(e => e.LastUpdateUser).IsUnicode(false);

                entity.Property(e => e.ProductType).IsUnicode(false);

                entity.Property(e => e.ProductTypeCode).HasMaxLength(50);
            });

            modelBuilder.Entity<Tput>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TPUT");

                entity.Property(e => e.AccountNoIfPaidOut)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdbankAccountIfPaidOut)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDBankAccountIfPaidOut")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");

                entity.HasOne(d => d.IddividendInvestNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.IddividendInvest)
                    .HasConstraintName("FK_TPUT_TRefInvest");
            });

            modelBuilder.Entity<TredemptionFifo>(entity =>
            {
                entity.ToTable("TRedemptionFifo");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdtransactionRed).HasColumnName("IDTransactionRed");

                entity.Property(e => e.IdtransactionSub).HasColumnName("IDTransactionSub");

                entity.Property(e => e.RedemptionDate).HasColumnType("datetime");

                entity.Property(e => e.SubscriptionDate).HasColumnType("datetime");

                entity.HasOne(d => d.IdtransactionRedNavigation)
                    .WithMany(p => p.TredemptionFifoIdtransactionRedNavigations)
                    .HasForeignKey(d => d.IdtransactionRed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRedemptionFifo_TTransactionRedemption");

                entity.HasOne(d => d.IdtransactionSubNavigation)
                    .WithMany(p => p.TredemptionFifoIdtransactionSubNavigations)
                    .HasForeignKey(d => d.IdtransactionSub)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRedemptionFifo_TTransactionSubscription");
            });

            modelBuilder.Entity<TrefAccountBankType>(entity =>
            {
                entity.HasKey(e => e.IdaccountBankType)
                    .HasName("PK__TRefAcco__E4270930761B72F4");

                entity.ToTable("TRefAccountBankType");

                entity.HasIndex(e => e.AccountBankType, "UQ__TRefAcco__CCA65CA778F7DF9F")
                    .IsUnique();

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.AccountBankType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountBankTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefAgentGroup>(entity =>
            {
                entity.HasKey(e => e.GroupId);

                entity.ToTable("TRefAgentGroup");

                entity.Property(e => e.GroupId)
                    .ValueGeneratedNever()
                    .HasColumnName("GroupID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ParentGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefAgentType>(entity =>
            {
                entity.HasKey(e => e.IdtypeAgent)
                    .HasName("PK_TRefAgentType13")
                    .IsClustered(false);

                entity.ToTable("TRefAgentType");

                entity.Property(e => e.IdtypeAgent)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeAgent")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefApprovalStatus>(entity =>
            {
                entity.HasKey(e => e.ApprovalStatus)
                    .HasName("PK__TRefApprovalStat__29B97BDD");

                entity.ToTable("TRefApprovalStatus");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefAriaGroup>(entity =>
            {
                entity.HasKey(e => e.CgId)
                    .HasName("PK_T");

                entity.ToTable("TRef_AriaGroup");

                entity.Property(e => e.CgId).HasColumnName("CG_ID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefArium>(entity =>
            {
                entity.HasKey(e => new { e.CgId, e.CodeRef });

                entity.ToTable("TRef_Aria");

                entity.Property(e => e.CgId).HasColumnName("CG_ID");

                entity.Property(e => e.Description).IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefBank>(entity =>
            {
                entity.HasKey(e => e.Idbank)
                    .HasName("PK__TRefBank__01BFF8BE6486D29E");

                entity.ToTable("TRefBank");

                entity.HasIndex(e => e.BankName, "UQ__TRefBank__DA9ADFAA67633F49")
                    .IsUnique();

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BimemberCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BIMemberCode");

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TrefBankBranch>(entity =>
            {
                entity.HasKey(e => e.IdbankBranch)
                    .HasName("PK__TRefBank__6E6FD25770ECA983");

                entity.ToTable("TRefBankBranch");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.BranchCity)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchFax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BranchPhone)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchStreet)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.BranchZip)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbank).HasColumnName("IDBank");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdbankNavigation)
                    .WithMany(p => p.TrefBankBranches)
                    .HasForeignKey(d => d.Idbank)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRefBankBranch_TRefBank");
            });

            modelBuilder.Entity<TrefBankCustody>(entity =>
            {
                entity.HasKey(e => e.IdbankCustody);

                entity.ToTable("TRefBankCustody");

                entity.HasIndex(e => e.CustodyCode, "IX_TRefBankCustody")
                    .IsUnique();

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("BICode");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Country)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCity)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyFax)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyPhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyZip)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UnitHolderCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefBranch>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefBranch");

                entity.Property(e => e.Address1)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address2)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Address3)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.BranchId)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd()
                    .HasColumnName("Branch_ID");

                entity.Property(e => e.BranchName)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.City)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.FaxNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");

                entity.Property(e => e.ZipCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ZIP_Code");
            });

            modelBuilder.Entity<TrefCabang>(entity =>
            {
                entity.ToTable("TRefCabang");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.AgentTypeId).HasColumnName("AgentTypeID");
            });

            modelBuilder.Entity<TrefCategory>(entity =>
            {
                entity.HasKey(e => e.Idcategory);

                entity.ToTable("TRefCategory");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CategoryName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CounterId).HasDefaultValueSql("((0))");

                entity.Property(e => e.SortOrder).HasDefaultValueSql("((100))");
            });

            modelBuilder.Entity<TrefCharge>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefCharges");

                entity.Property(e => e.DetailCharges)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdCharges)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("idCharges");
            });

            modelBuilder.Entity<TrefCompanyType>(entity =>
            {
                entity.HasKey(e => e.CompanyType);

                entity.ToTable("TRefCompanyType");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CompanyDetail)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefCompanyTypeBapepam>(entity =>
            {
                entity.ToTable("TRefCompanyTypeBapepam");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Text)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefCounter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefCounter");

                entity.Property(e => e.Category)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedTime).HasColumnType("datetime");

                entity.Property(e => e.TrefCounterId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TRefCounterID");
            });

            modelBuilder.Entity<TrefCurrency>(entity =>
            {
                entity.HasKey(e => e.Idcurrency)
                    .HasName("PK__TRefCurr__5089073968C177D6");

                entity.ToTable("TRefCurrency");

                entity.HasIndex(e => e.CurrencyCode, "IX_TRefCurrency")
                    .IsUnique();

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DecimalPrecision).HasDefaultValueSql("((0))");

                entity.Property(e => e.FullName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TrefCustAccountStatus>(entity =>
            {
                entity.HasKey(e => e.IdcustAcctStat);

                entity.ToTable("TRefCustAccountStatus");

                entity.Property(e => e.IdcustAcctStat)
                    .ValueGeneratedNever()
                    .HasColumnName("IDCustAcctStat");

                entity.Property(e => e.CustomerAccountStatus)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefCustQuiz>(entity =>
            {
                entity.HasKey(e => e.QuizInfo);

                entity.ToTable("TRefCustQuiz");

                entity.Property(e => e.QuizInfo)
                    .ValueGeneratedNever()
                    .HasComment("The title appears in the header of question");

                entity.Property(e => e.QuizText)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')")
                    .HasComment("The question text");
            });

            modelBuilder.Entity<TrefDtspackage>(entity =>
            {
                entity.HasKey(e => e.Dtsname);

                entity.ToTable("TRefDTSPackage");

                entity.Property(e => e.Dtsname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DTSName");

                entity.Property(e => e.Description)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LastRunTime).HasColumnType("datetime");

                entity.Property(e => e.LastRunUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefEducation>(entity =>
            {
                entity.HasKey(e => e.Ideducation);

                entity.ToTable("TRefEducation");

                entity.Property(e => e.Ideducation)
                    .ValueGeneratedNever()
                    .HasColumnName("IDEducation");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefIdtype>(entity =>
            {
                entity.HasKey(e => e.Idtype)
                    .HasName("PK_TRefIDtype22")
                    .IsClustered(false);

                entity.ToTable("TRefIDtype");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Attribute1)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdtypeDetail)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeDetail")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefInstructionCustody>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefInstructionCustody");

                entity.Property(e => e.ContactPerson)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCity)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyFax)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyId).HasColumnName("CustodyID");

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyPhone)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyStreet2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyZip)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefInvest>(entity =>
            {
                entity.HasKey(e => e.IddividendInvest)
                    .HasName("PK_TRefInvest41")
                    .IsClustered(false);

                entity.ToTable("TRefInvest");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DividendInvest)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefInvestor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefInvestor");

                entity.Property(e => e.InvestorCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InvestorDetail)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefKotaNew>(entity =>
            {
                entity.HasKey(e => e.KodeKota);

                entity.ToTable("TRefKotaNew");

                entity.Property(e => e.KodeKota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ibukota)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Prop)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.ParentCodeNavigation)
                    .WithMany(p => p.InverseParentCodeNavigation)
                    .HasForeignKey(d => d.ParentCode)
                    .HasConstraintName("FK_TRefKotaNew_TRefKotaNew");
            });

            modelBuilder.Entity<TrefKotaNew20200921Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefKotaNew_20200921_BAK");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ibukota)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodeKota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Prop)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefKotaNewOld>(entity =>
            {
                entity.HasKey(e => e.KodeKota);

                entity.ToTable("TRefKotaNew_Old");

                entity.Property(e => e.KodeKota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ibukota)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Prop)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefKotum>(entity =>
            {
                entity.HasKey(e => e.Kode);

                entity.ToTable("TRefKota");

                entity.Property(e => e.Kode).ValueGeneratedNever();

                entity.Property(e => e.Kotamadya)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Propinsi)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefMarital>(entity =>
            {
                entity.HasKey(e => e.Idmarital)
                    .HasName("PK_TRefMarital26")
                    .IsClustered(false);

                entity.ToTable("TRefMarital");

                entity.Property(e => e.Idmarital)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDMarital")
                    .HasDefaultValueSql("('SI')");

                entity.Property(e => e.MaritalName)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('Single')");
            });

            modelBuilder.Entity<TrefMenuType>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefMenuType");

                entity.Property(e => e.Counter).HasDefaultValueSql("((0))");

                entity.Property(e => e.MenuType)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefModel>(entity =>
            {
                entity.ToTable("TRefModel");

                entity.Property(e => e.TrefModelId).HasColumnName("TRefModelID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TmodelId).HasColumnName("TModelID");

                entity.Property(e => e.TproductTypeId).HasColumnName("TProductTypeID");

                entity.HasOne(d => d.Tmodel)
                    .WithMany(p => p.TrefModels)
                    .HasForeignKey(d => d.TmodelId);
            });

            modelBuilder.Entity<TrefModuleMenuWin>(entity =>
            {
                entity.HasKey(e => e.ModuleId);

                entity.ToTable("TRefModuleMenuWin");

                entity.Property(e => e.ModuleId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ModuleName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefNationality>(entity =>
            {
                entity.HasKey(e => e.Idnationality)
                    .HasName("PK_TRefNationality21")
                    .IsClustered(false);

                entity.ToTable("TRefNationality");

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('Indonesia')");
            });

            modelBuilder.Entity<TrefObjective>(entity =>
            {
                entity.HasKey(e => e.Idobjective);

                entity.ToTable("TRefObjective");

                entity.Property(e => e.Idobjective)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjective");

                entity.Property(e => e.Objective)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefOccupation>(entity =>
            {
                entity.HasKey(e => e.Idoccupation);

                entity.ToTable("TRefOccupation");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CustodyOcc)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwReference)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fwReference");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.IdbankCustody)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustody")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OccupationName)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.OccupationType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('I')");
            });

            modelBuilder.Entity<TrefOthersFee>(entity =>
            {
                entity.HasKey(e => e.IdothersFee)
                    .HasName("PK_TRefOtherFee");

                entity.ToTable("TRefOthersFee");

                entity.Property(e => e.IdothersFee)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDOthersFee");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefPaymentMethod>(entity =>
            {
                entity.HasKey(e => e.PaymentMethod)
                    .HasName("PK_TRefPaymentMethod44")
                    .IsClustered(false);

                entity.ToTable("TRefPaymentMethod");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsMain)
                    .HasColumnName("isMain")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Methode)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefProductCategory>(entity =>
            {
                entity.HasKey(e => e.Idcategory)
                    .HasName("PK_TRefProductCategory6")
                    .IsClustered(false);

                entity.ToTable("TRefProductCategory");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Category)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefProductInfo>(entity =>
            {
                entity.HasKey(e => e.ProdInfoId)
                    .HasName("PK__TRefProductInfo__7A403E3C");

                entity.ToTable("TRefProductInfo");

                entity.Property(e => e.ProdInfoId)
                    .ValueGeneratedNever()
                    .HasColumnName("ProdInfoID");

                entity.Property(e => e.ProdInfoDesc)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecOrder).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TrefProductMapping>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefProductMapping");

                entity.Property(e => e.PfolioCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PFolioCode")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefProfile>(entity =>
            {
                entity.HasKey(e => e.ProfileId);

                entity.ToTable("TRefProfile");

                entity.HasIndex(e => e.SeqNo, "IX_TRefProfile")
                    .IsUnique();

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.Description).HasColumnType("text");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TrefProfileQuestion>(entity =>
            {
                entity.HasKey(e => e.QuestionId);

                entity.ToTable("TRefProfileQuestion");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.QuestionText)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.QuestionTitle)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TrefProfileQuestionOption>(entity =>
            {
                entity.HasKey(e => e.QuestionOptionId)
                    .HasName("PK__TRefProf__064FB4FC32656725");

                entity.ToTable("TRefProfileQuestionOption");

                entity.HasIndex(e => new { e.OptionId, e.QuestionId }, "IX_TRefProfileQuestionOption");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OptionId)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OptionID");

                entity.Property(e => e.OptionText)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.TrefProfileQuestionOptions)
                    .HasForeignKey(d => d.QuestionId)
                    .HasConstraintName("FK_TRefProfileQuestionOption_TRefProfileQuestion");
            });

            modelBuilder.Entity<TrefProfileRiskMapping>(entity =>
            {
                entity.HasKey(e => new { e.RiskProfileNasabah, e.RiskProfileProduct });

                entity.ToTable("TRef_ProfileRiskMapping");

                entity.Property(e => e.RiskProfileNasabah)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.RiskProfileProduct)
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefQuizValue>(entity =>
            {
                entity.HasKey(e => new { e.QuizInfo, e.OptionText });

                entity.ToTable("TRefQuizValue");

                entity.Property(e => e.OptionValue).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.QuizInfoNavigation)
                    .WithMany(p => p.TrefQuizValues)
                    .HasForeignKey(d => d.QuizInfo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRefQuizValue_TRefCustQuiz");
            });

            modelBuilder.Entity<TrefRangeReport>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefRangeReport");

                entity.Property(e => e.RangeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RangeType)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefRecStatus>(entity =>
            {
                entity.HasKey(e => e.RecStatus)
                    .HasName("PK__TRefRecStatus__27D1336B");

                entity.ToTable("TRefRecStatus");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefRedReportType>(entity =>
            {
                entity.HasKey(e => e.IdreportType)
                    .HasName("PK_TRefRedReportType15")
                    .IsClustered(false);

                entity.ToTable("TRefRedReportType");

                entity.Property(e => e.IdreportType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDReportType")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Urireport)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasColumnName("URIReport")
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefReligion>(entity =>
            {
                entity.HasKey(e => e.ReligiCode);

                entity.ToTable("TRefReligion");

                entity.Property(e => e.ReligiCode)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ReligiName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefSetting>(entity =>
            {
                entity.HasKey(e => e.SetCode)
                    .HasName("PK__TRefSetting__31CED39A");

                entity.ToTable("TRefSetting");

                entity.Property(e => e.SetCode)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("set_code");

                entity.Property(e => e.DateModified).HasColumnType("datetime");

                entity.Property(e => e.IsActive)
                    .HasColumnName("is_active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SetDataType)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("set_data_type");

                entity.Property(e => e.SetDescription)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("set_description");

                entity.Property(e => e.SetValue)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("set_value");
            });

            modelBuilder.Entity<TrefSex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRefSex");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.SexName)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefSinvestParticipantType>(entity =>
            {
                entity.ToTable("TRefSInvestParticipantType");

                entity.Property(e => e.TrefSinvestParticipantTypeId).HasColumnName("TRefSInvestParticipantTypeID");

                entity.Property(e => e.ParticipantType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.TypeName)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefSponsorship>(entity =>
            {
                entity.HasKey(e => e.Idsponsorship)
                    .HasName("PK_TRefSponsorship42")
                    .IsClustered(false);

                entity.ToTable("TRefSponsorship");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Sponsorship)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefStatus>(entity =>
            {
                entity.HasKey(e => e.Idstatus)
                    .HasName("PK_TRefStatus74")
                    .IsClustered(false);

                entity.ToTable("TRefStatus");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.StatusName)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefTransactionAccountType>(entity =>
            {
                entity.HasKey(e => e.TransAccountType)
                    .HasName("PK__TRefTransactionA__28456960");

                entity.ToTable("TRefTransactionAccountType");

                entity.Property(e => e.TransAccountType).ValueGeneratedNever();

                entity.Property(e => e.TransAccountName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefTransactionGenerator>(entity =>
            {
                entity.HasKey(e => e.GeneratorId);

                entity.ToTable("TRefTransactionGenerator");

                entity.HasIndex(e => e.GeneratorCode, "IX_TRefTransactionGenerator")
                    .IsUnique();

                entity.Property(e => e.GeneratorId)
                    .ValueGeneratedNever()
                    .HasColumnName("GeneratorID");

                entity.Property(e => e.GeneratorCode)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorDescription)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefTransactionInputMode>(entity =>
            {
                entity.HasKey(e => e.InputModeId);

                entity.ToTable("TRefTransactionInputMode");

                entity.Property(e => e.InputModeId).HasColumnName("InputModeID");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TrefTxFeeNett>(entity =>
            {
                entity.HasKey(e => e.IdtxFeeNett)
                    .HasName("PK_TRefFeeNett51")
                    .IsClustered(false);

                entity.ToTable("TRefTxFeeNett");

                entity.Property(e => e.IdtxFeeNett)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDTxFeeNett")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TxFeeNett)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TypeTxFeeNett)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<TrefWmi>(entity =>
            {
                entity.HasKey(e => e.Idwmi);

                entity.ToTable("TRefWMI");

                entity.Property(e => e.Idwmi)
                    .ValueGeneratedNever()
                    .HasColumnName("IDWMI");

                entity.Property(e => e.Idjabatan).HasColumnName("IDJabatan");

                entity.Property(e => e.Nama)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NomorSk)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NomorSK");

                entity.Property(e => e.Rating)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TanggalMulaiBekerja).HasColumnType("datetime");

                entity.Property(e => e.TanggalSk)
                    .HasColumnType("datetime")
                    .HasColumnName("TanggalSK");
            });

            modelBuilder.Entity<TrefWmijabatan>(entity =>
            {
                entity.HasKey(e => e.Idjabatan);

                entity.ToTable("TRefWMIJabatan");

                entity.Property(e => e.Idjabatan)
                    .ValueGeneratedNever()
                    .HasColumnName("IDJabatan");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.KodeWmi).HasColumnName("KodeWMI");
            });

            modelBuilder.Entity<TrefWmistatic>(entity =>
            {
                entity.HasKey(e => e.ValueName);

                entity.ToTable("TRefWMIStatic");

                entity.Property(e => e.ValueName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ValueValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TreferenceDetail>(entity =>
            {
                entity.ToTable("TReferenceDetail");

                entity.HasIndex(e => new { e.TreferenceGroupId, e.MainValue }, "IX_TReferenceDetail")
                    .IsUnique();

                entity.Property(e => e.TreferenceDetailId).HasColumnName("TReferenceDetailID");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");

                entity.HasOne(d => d.TreferenceGroup)
                    .WithMany(p => p.TreferenceDetails)
                    .HasForeignKey(d => d.TreferenceGroupId)
                    .HasConstraintName("FK_TReferenceDetail_TReferenceGroup");
            });

            modelBuilder.Entity<TreferenceDetailKodePos20200921Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TReferenceDetailKodePos_20200921_BAK");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreferenceDetailId).HasColumnName("TReferenceDetailID");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<TreferenceGroup>(entity =>
            {
                entity.ToTable("TReferenceGroup");

                entity.HasIndex(e => e.GroupName, "IX_TReferenceGroup")
                    .IsUnique();

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Trefproduct2>(entity =>
            {
                entity.HasKey(e => e.Idproduct)
                    .HasName("PK__Trefprod__8D507424B7B7E746");

                entity.ToTable("Trefproduct2");

                entity.Property(e => e.Idproduct).HasColumnName("idproduct");

                entity.Property(e => e.Codeproduct)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codeproduct");

                entity.Property(e => e.Nameproduct)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nameproduct");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TregularHoliday>(entity =>
            {
                entity.ToTable("TRegularHoliday");

                entity.Property(e => e.TregularHolidayId).HasColumnName("TRegularHolidayID");

                entity.Property(e => e.Name)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TexchangeId).HasColumnName("TExchangeID");
            });

            modelBuilder.Entity<TregularInvestmentPlan>(entity =>
            {
                entity.ToTable("TRegularInvestmentPlan");

                entity.HasIndex(e => e.InvestmentPlanCode, "IX_TRegularInvestmentPlan")
                    .IsUnique();

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.InvestmentPlanCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.InvestmentPlanName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TregularInvestmentPlanFee>(entity =>
            {
                entity.ToTable("TRegularInvestmentPlanFee");

                entity.HasIndex(e => e.FeeCode, "IX_TRegularInvestmentPlanFee")
                    .IsUnique();

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TregularInvestmentPlanFeeDetail>(entity =>
            {
                entity.ToTable("TRegularInvestmentPlanFeeDetail");

                entity.HasIndex(e => new { e.TregularInvestmentPlanFeeId, e.Tenor, e.MinimumAmount }, "IX_TRegularInvestmentPlanFeeDetail")
                    .IsUnique();

                entity.Property(e => e.TregularInvestmentPlanFeeDetailId).HasColumnName("TRegularInvestmentPlanFeeDetailID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TregularInvestmentPlanFeeId).HasColumnName("TRegularInvestmentPlanFeeID");

                entity.HasOne(d => d.TregularInvestmentPlanFee)
                    .WithMany(p => p.TregularInvestmentPlanFeeDetails)
                    .HasForeignKey(d => d.TregularInvestmentPlanFeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRegularInvestmentPlanFeeDetail_TRegularInvestmentPlanFee");
            });

            modelBuilder.Entity<TreportAuthorizer>(entity =>
            {
                entity.ToTable("TReportAuthorizer");

                entity.Property(e => e.TreportAuthorizerId).HasColumnName("TReportAuthorizerID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ReportId)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ReportID");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");
            });

            modelBuilder.Entity<TreportAuthorizerDetail>(entity =>
            {
                entity.ToTable("TReportAuthorizerDetail");

                entity.Property(e => e.TreportAuthorizerDetailId).HasColumnName("TReportAuthorizerDetailID");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TauthorizerId).HasColumnName("TAuthorizerID");

                entity.Property(e => e.TreportAuthorizerId).HasColumnName("TReportAuthorizerID");

                entity.Property(e => e.TreportAuthorizerTypeId).HasColumnName("TReportAuthorizerTypeID");

                entity.HasOne(d => d.Tauthorizer)
                    .WithMany(p => p.TreportAuthorizerDetails)
                    .HasForeignKey(d => d.TauthorizerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TReportAuthorizerDetail_TAuthorizer");

                entity.HasOne(d => d.TreportAuthorizer)
                    .WithMany(p => p.TreportAuthorizerDetails)
                    .HasForeignKey(d => d.TreportAuthorizerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TReportAuthorizerDetail_TReportAuthorizer");

                entity.HasOne(d => d.TreportAuthorizerType)
                    .WithMany(p => p.TreportAuthorizerDetails)
                    .HasForeignKey(d => d.TreportAuthorizerTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TReportAuthorizerDetail_TReportAuthorizerType");
            });

            modelBuilder.Entity<TreportAuthorizerType>(entity =>
            {
                entity.ToTable("TReportAuthorizerType");

                entity.Property(e => e.TreportAuthorizerTypeId).HasColumnName("TReportAuthorizerTypeID");

                entity.Property(e => e.AuthorizerType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(512)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TreportExport>(entity =>
            {
                entity.ToTable("TReportExport");

                entity.Property(e => e.TreportExportId).HasColumnName("TReportExportID");

                entity.Property(e => e.Description)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Parameter)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Rdlname)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RDLName");

                entity.Property(e => e.ReportName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");
            });

            modelBuilder.Entity<TreportExportTemplate>(entity =>
            {
                entity.ToTable("TReportExportTemplate");

                entity.Property(e => e.TreportExportTemplateId).HasColumnName("TReportExportTemplateID");

                entity.Property(e => e.BodyText).IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Subject)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TreportExportId).HasColumnName("TReportExportID");

                entity.HasOne(d => d.TreportExport)
                    .WithMany(p => p.TreportExportTemplates)
                    .HasForeignKey(d => d.TreportExportId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TReportExportTemplate_TReportExport");
            });

            modelBuilder.Entity<TresultFeeTiering>(entity =>
            {
                entity.ToTable("TResultFeeTiering");

                entity.HasIndex(e => e.IdtransactionRed, "IDX_IDTransactionRed");

                entity.HasIndex(e => e.IdtransactionSub, "IDX_IDTransactionSub");

                entity.HasIndex(e => e.ProductCode, "IDX_ProductCode");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdtransactionRed)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransactionRed");

                entity.Property(e => e.IdtransactionSub)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransactionSub");

                entity.Property(e => e.Method)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tretirement>(entity =>
            {
                entity.ToTable("TRetirement");

                entity.Property(e => e.TretirementId).HasColumnName("TRetirementID");

                entity.Property(e => e.CurrentYear)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.Tretirements)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TRetirement_TCustomer");
            });

            modelBuilder.Entity<TsettleForApproval>(entity =>
            {
                entity.HasKey(e => e.Idtransaction)
                    .HasName("PK__TSettleForApprov__23AC6823");

                entity.ToTable("TSettleForApproval");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.SynchToJha).HasColumnName("SynchToJHA");
            });

            modelBuilder.Entity<Tsetup>(entity =>
            {
                entity.HasKey(e => e.KdFile);

                entity.ToTable("TSetup");

                entity.Property(e => e.KdFile).HasMaxLength(16);

                entity.Property(e => e.FieldCode)
                    .HasMaxLength(16)
                    .HasDefaultValueSql("(N'n/a')");

                entity.Property(e => e.FileCode)
                    .HasMaxLength(16)
                    .HasDefaultValueSql("(N'n/a')");

                entity.Property(e => e.IsActive)
                    .HasMaxLength(1)
                    .HasColumnName("isActive")
                    .HasDefaultValueSql("(N'n/a')");

                entity.Property(e => e.SeqId)
                    .HasColumnName("SeqID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SeqIdtext)
                    .HasColumnName("SeqIDText")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TsharingFee>(entity =>
            {
                entity.HasKey(e => e.FeeId);

                entity.ToTable("TSharingFee");

                entity.HasIndex(e => e.FeeName, "IX_TSharingFee")
                    .IsUnique();

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeeType)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcurrency)
                    .HasColumnName("IDCurrency")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsAumproduct)
                    .HasColumnName("IsAUMProduct")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcurrencyNavigation)
                    .WithMany(p => p.TsharingFees)
                    .HasForeignKey(d => d.Idcurrency)
                    .HasConstraintName("FK_TSharingFee_TRefCurrency");

                entity.HasOne(d => d.IdstatusNavigation)
                    .WithMany(p => p.TsharingFees)
                    .HasForeignKey(d => d.Idstatus)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TSharingFee_TRefStatus");
            });

            modelBuilder.Entity<TsharingFeeHistory>(entity =>
            {
                entity.HasKey(e => e.TshraingFeeHistoryId);

                entity.ToTable("TSharingFeeHistory");

                entity.Property(e => e.TshraingFeeHistoryId).HasColumnName("TShraingFeeHistoryID");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.BalanceDate).HasColumnType("date");

                entity.Property(e => e.BalanceUnits).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.FeeDate).HasColumnType("date");

                entity.Property(e => e.NavValue).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.ProductId).HasColumnName("ProductID");

                entity.Property(e => e.SubAccountId).HasColumnName("SubAccountID");
            });

            modelBuilder.Entity<TsharingFeeRule>(entity =>
            {
                entity.HasKey(e => e.FeeRuleId);

                entity.ToTable("TSharingFeeRule");

                entity.Property(e => e.FeeRuleId).HasColumnName("FeeRuleID");

                entity.Property(e => e.FeeAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmountCode)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeeId).HasColumnName("FeeID");

                entity.Property(e => e.FeeRange).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeSign)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(1024)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Fee)
                    .WithMany(p => p.TsharingFeeRules)
                    .HasForeignKey(d => d.FeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TSharingFeeRule_TSharingFee");

                entity.HasOne(d => d.IdstatusNavigation)
                    .WithMany(p => p.TsharingFeeRules)
                    .HasForeignKey(d => d.Idstatus)
                    .HasConstraintName("FK_TSharingFeeRule_TRefStatus");
            });

            modelBuilder.Entity<TsubAccount>(entity =>
            {
                entity.HasKey(e => e.IdsubAccount);

                entity.ToTable("TSubAccount");

                entity.HasIndex(e => e.Idproduct, "IX_IDProduct");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.NoAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.TsubAccounts)
                    .HasForeignKey(d => d.Idcustomer)
                    .HasConstraintName("FK_TSubAccount_TCustomer");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.TsubAccounts)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TSubAccount_TProduct");
            });

            modelBuilder.Entity<TsubAccountGen>(entity =>
            {
                entity.ToTable("TSubAccountGen");

                entity.Property(e => e.TsubAccountGenId).HasColumnName("TSubAccountGenID");

                entity.Property(e => e.Date).HasColumnType("date");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.LastId).HasColumnName("LastID");
            });

            modelBuilder.Entity<TsystemParameter>(entity =>
            {
                entity.HasKey(e => e.ParamKey)
                    .HasName("PK_SystemParameter");

                entity.ToTable("TSystemParameter");

                entity.Property(e => e.ParamKey)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DefaultValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParamDesc)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParamType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ParamValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecOrder).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TtableList>(entity =>
            {
                entity.HasKey(e => e.TableId)
                    .HasName("PK__TTableList__315A9DA5");

                entity.ToTable("TTableList");

                entity.Property(e => e.TableId).HasColumnName("TableID");

                entity.Property(e => e.ModuleId).HasColumnName("ModuleID");

                entity.Property(e => e.ParentId).HasColumnName("ParentID");

                entity.Property(e => e.RecAttribute1)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecAttribute2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecAttribute3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecCreatedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('system')");

                entity.Property(e => e.RecCreatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecModifiedBy)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.RecStatus).HasDefaultValueSql("((1))");

                entity.Property(e => e.TableDescription)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TableName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TableTitle)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Module)
                    .WithMany(p => p.TtableLists)
                    .HasForeignKey(d => d.ModuleId)
                    .HasConstraintName("FK_TableListModuleID");
            });

            modelBuilder.Entity<TtempIdtransactionMultivalue>(entity =>
            {
                entity.HasKey(e => new { e.MultiValueId, e.Idtransaction });

                entity.ToTable("TTempIDTransactionMultivalue");

                entity.Property(e => e.MultiValueId).HasColumnName("MultiValueID");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction");
            });

            modelBuilder.Entity<TtempMfeeAgentDaily>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTempMFeeAgentDaily");

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.NavDate).HasColumnType("datetime");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(6)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TtempMfeeBrokerDaily>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTempMFeeBrokerDaily");

                entity.Property(e => e.AgentCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NavDate).HasColumnType("datetime");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(6)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TtempRptmfee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTempRPTMFee");

                entity.Property(e => e.DateValue).HasColumnType("datetime");

                entity.Property(e => e.Idrpt).HasColumnName("IDRpt");
            });

            modelBuilder.Entity<TtempRptmfeeTxt>(entity =>
            {
                entity.HasKey(e => new { e.Idtrans, e.Productcode, e.Codeagent });

                entity.ToTable("TTempRPTMFeeTxt");

                entity.Property(e => e.Idtrans)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idtrans");

                entity.Property(e => e.Productcode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("productcode");

                entity.Property(e => e.Codeagent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codeagent");

                entity.Property(e => e.Amount).HasColumnName("amount");
            });

            modelBuilder.Entity<TtempRptsharingFee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTempRPTSharingFee");

                entity.Property(e => e.Ccy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CCY");

                entity.Property(e => e.Id)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ID");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.Product)
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.TotalNetDim).HasColumnName("TotalNetDIM");
            });

            modelBuilder.Entity<Ttransaction>(entity =>
            {
                entity.HasKey(e => e.Idtransaction)
                    .HasName("PK__TTransac__A70178547BAA2F18");

                entity.ToTable("TTransaction");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Amount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Charges).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Fee).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.GenerateStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue)
                    .HasColumnName("NAVValue")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NetAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SinvestRefNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SInvestRefNo");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Generator)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.GeneratorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_TRefTransactionGenerator");

                entity.HasOne(d => d.IdbranchNavigation)
                    .WithMany(p => p.TtransactionIdbranchNavigations)
                    .HasForeignKey(d => d.Idbranch)
                    .HasConstraintName("FK_TTransaction_TAgent_Branch");

                entity.HasOne(d => d.IdcustomerNavigation)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.Idcustomer)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_TCustomer");

                entity.HasOne(d => d.IddividendSummaryNavigation)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.IddividendSummary)
                    .HasConstraintName("FK_TTransaction_TDividendSummary");

                entity.HasOne(d => d.IdproductNavigation)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.Idproduct)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_TProduct");

                entity.HasOne(d => d.IdsalesNavigation)
                    .WithMany(p => p.TtransactionIdsalesNavigations)
                    .HasForeignKey(d => d.Idsales)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_TAgent_Sales");

                entity.HasOne(d => d.IdsubAccountNavigation)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.IdsubAccount)
                    .HasConstraintName("FK_TTransaction_TSubAccount");

                entity.HasOne(d => d.InputModeNavigation)
                    .WithMany(p => p.Ttransactions)
                    .HasForeignKey(d => d.InputMode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_TRefTransactionInputMode");

                entity.HasOne(d => d.SourceIdtransactionNavigation)
                    .WithMany(p => p.InverseSourceIdtransactionNavigation)
                    .HasForeignKey(d => d.SourceIdtransaction)
                    .HasConstraintName("FK_TTransaction_SourceIDTransaction");
            });

            modelBuilder.Entity<Ttransaction20201221Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTransaction_20201221_BAK");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GenerateStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SinvestRefNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SInvestRefNo");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Ttransaction20201229Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTransaction_20201229_BAK");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GenerateStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SinvestRefNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SInvestRefNo");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Ttransaction20210118Bak>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTransaction_20210118_BAK");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GenerateStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SinvestRefNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SInvestRefNo");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TtransactionBankAccount>(entity =>
            {
                entity.HasKey(e => e.IdtransactionBankAccount);

                entity.ToTable("TTransactionBankAccount");

                entity.HasIndex(e => new { e.Idtransaction, e.TransAccountType, e.AccountNo }, "IX_TTransactionBankAccount");

                entity.Property(e => e.IdtransactionBankAccount).HasColumnName("IDTransactionBankAccount");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.HasOne(d => d.IdtransactionNavigation)
                    .WithMany(p => p.TtransactionBankAccounts)
                    .HasForeignKey(d => d.Idtransaction)
                    .HasConstraintName("FK_TTransactionBankAccount_TTransaction");
            });

            modelBuilder.Entity<TtransactionBankAccountHistory>(entity =>
            {
                entity.HasKey(e => e.IdtransactionBankAccountHistory)
                    .HasName("PK_TTransactionBankAccount_History_1");

                entity.ToTable("TTransactionBankAccount_History");

                entity.Property(e => e.IdtransactionBankAccountHistory).HasColumnName("IDTransactionBankAccount_History");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.AuditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.AuditRemarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AuditTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AuditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.IdtransactionBankAccount).HasColumnName("IDTransactionBankAccount");

                entity.Property(e => e.IdtransactionHistory).HasColumnName("IDTransaction_History");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.HasOne(d => d.IdtransactionHistoryNavigation)
                    .WithMany(p => p.TtransactionBankAccountHistories)
                    .HasForeignKey(d => d.IdtransactionHistory)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransactionBankAccount_History_TTransaction_History");
            });

            modelBuilder.Entity<TtransactionBatch>(entity =>
            {
                entity.HasKey(e => e.BatchId)
                    .HasName("PK__TTransactionBatc__55D729E6");

                entity.ToTable("TTransactionBatch");

                entity.Property(e => e.BatchId).HasColumnName("BatchID");

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchFile)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.BatchRefNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntryMode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RecActive).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.IdcategoryNavigation)
                    .WithMany(p => p.TtransactionBatches)
                    .HasForeignKey(d => d.Idcategory)
                    .HasConstraintName("FK_TransBatchIDCategory");
            });

            modelBuilder.Entity<TtransactionBooking>(entity =>
            {
                entity.HasKey(e => e.IdtransactionBooking);

                entity.ToTable("TTransactionBooking");

                entity.Property(e => e.IdtransactionBooking).HasColumnName("IDTransactionBooking");

                entity.Property(e => e.CustAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CustIdbankBranch).HasColumnName("CustIDBankBranch");

                entity.Property(e => e.CustIdcurrency).HasColumnName("CustIDCurrency");

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("('ENTRIED')");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.IsWaiver).HasColumnName("isWaiver");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProdAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProdIdbankBranch).HasColumnName("ProdIDBankBranch");

                entity.Property(e => e.ProdIdcurrency).HasColumnName("ProdIDCurrency");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TransactionDate).HasColumnType("date");
            });

            modelBuilder.Entity<TtransactionFee>(entity =>
            {
                entity.ToTable("TTransactionFee");

                entity.HasIndex(e => e.FeeCode, "IX_TTransactionFee")
                    .IsUnique();

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");

                entity.Property(e => e.FeeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeName)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TrxIdcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TrxIDCategory");
            });

            modelBuilder.Entity<TtransactionFeeDetail>(entity =>
            {
                entity.ToTable("TTransactionFeeDetail");

                entity.HasIndex(e => new { e.TtransactionFeeId, e.SortOrder }, "IX_TTransactionFeeDetail")
                    .IsUnique();

                entity.Property(e => e.TtransactionFeeDetailId).HasColumnName("TTransactionFeeDetailID");

                entity.Property(e => e.AgeType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .HasDefaultValueSql("('I')")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus)
                    .HasColumnName("sysApprovalStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus)
                    .IsRequired()
                    .HasColumnName("sysRecStatus")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TtransactionFeeId).HasColumnName("TTransactionFeeID");

                entity.HasOne(d => d.TtransactionFee)
                    .WithMany(p => p.TtransactionFeeDetails)
                    .HasForeignKey(d => d.TtransactionFeeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransactionFeeDetail_TTransactionFee");
            });

            modelBuilder.Entity<TtransactionForApproval>(entity =>
            {
                entity.HasKey(e => new { e.Idtransaction, e.ApproveUser })
                    .HasName("PK_Trans4App");

                entity.ToTable("TTransactionForApproval");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TtransactionHistory>(entity =>
            {
                entity.HasKey(e => e.IdtransactionHistory);

                entity.ToTable("TTransaction_History");

                entity.HasIndex(e => e.Idtransaction, "IX_TTransaction_History");

                entity.Property(e => e.IdtransactionHistory).HasColumnName("IDTransaction_History");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AuditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.AuditRemarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AuditTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AuditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GenerateStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HoldId).HasColumnName("HoldID");

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SinvestRefNo)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SInvestRefNo");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TtransactionJournal>(entity =>
            {
                entity.HasKey(e => e.IdtransactionJournal);

                entity.ToTable("TTransaction_Journal");

                entity.Property(e => e.IdtransactionJournal).HasColumnName("IDTransaction_Journal");

                entity.Property(e => e.ActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AuditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.AuditRemarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.AuditTime).HasColumnType("datetime");

                entity.Property(e => e.AuditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.IdtransactionHistory).HasColumnName("IDTransaction_History");

                entity.Property(e => e.StatusAfter)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.StatusBefore)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdtransactionNavigation)
                    .WithMany(p => p.TtransactionJournals)
                    .HasForeignKey(d => d.Idtransaction)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransaction_Journal_TTransaction");
            });

            modelBuilder.Entity<TtransactionLog>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTransactionLog");

                entity.HasIndex(e => new { e.Idtransaction, e.LogTimeStamp, e.Navdate }, "IX_TTransactionLog");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.AccountNoProduct)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Amount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Charges).HasDefaultValueSql("((0))");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeBrokerOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CustAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Fee).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.FundManagerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.IdBatch)
                    .HasColumnName("idBatch")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdbankCustomer)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustomer")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdbankProduct)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDBankProduct")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("('SUB')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdtransactionOld)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransactionOld")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsEntryBankAccount).HasDefaultValueSql("('0')");

                entity.Property(e => e.LogTimeStamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LogType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LogUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue)
                    .HasColumnName("NAVValue")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NetAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Rebate).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasColumnType("text")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SaldoProduct).HasDefaultValueSql("((0))");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sources)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('SIAR2004')");

                entity.Property(e => e.SourcesDate).HasColumnType("datetime");

                entity.Property(e => e.SourcesUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TxType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Units).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TtransactionLogCore>(entity =>
            {
                entity.ToTable("TTransactionLogCore");

                entity.Property(e => e.TtransactionLogCoreId).HasColumnName("TTransactionLogCoreID");

                entity.Property(e => e.CustomerBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FeeBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GlbankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLBankAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Ppn).HasColumnName("PPn");

                entity.Property(e => e.PpnBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PPnBankAccount");

                entity.Property(e => e.ProcessingCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductBankAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RefNo)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseDescription)
                    .HasMaxLength(8000)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<TtransactionNotification>(entity =>
            {
                entity.ToTable("TTransactionNotification");

                entity.Property(e => e.TtransactionNotificationId).HasColumnName("TTransactionNotificationID");

                entity.Property(e => e.CreatedOnPageAccessStatusId).HasColumnName("CreatedOnPageAccessStatusID");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Message)
                    .HasMaxLength(2048)
                    .IsUnicode(false);

                entity.Property(e => e.NewIdstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NewIDStatus");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.HasOne(d => d.IdtransactionNavigation)
                    .WithMany(p => p.TtransactionNotifications)
                    .HasForeignKey(d => d.Idtransaction)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TTransactionNotification_TTransaction");
            });

            modelBuilder.Entity<TtransactionRiskProfileSimulation>(entity =>
            {
                entity.HasKey(e => e.Idtransaction)
                    .HasName("PK__TTransac__A3F081DF6D4E2737");

                entity.ToTable("TTransactionRiskProfileSimulation");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.BalanceIdr).HasColumnName("BalanceIDR");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductTo).HasColumnName("IDProductTo");

                entity.Property(e => e.ProductType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.SimulationDate).HasColumnType("date");
            });

            modelBuilder.Entity<TtransactionTemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TTransactionTemp");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.AccountNoProduct)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Amount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Charges).HasDefaultValueSql("((0))");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeAgentOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CodeBrokerOld)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CustAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustUnits).HasDefaultValueSql("((0))");

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Fee).HasDefaultValueSql("((0))");

                entity.Property(e => e.FeeAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.FundManagerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.IdBatch).HasColumnName("idBatch");

                entity.Property(e => e.IdbankCustomer)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustomer")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdbankProduct)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDBankProduct")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IdtransactionOld)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransactionOld")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.IsEntryBankAccount).HasDefaultValueSql("('0')");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue)
                    .HasColumnName("NAVValue")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NetAmount).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Rebate).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Remark)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.SaldoProduct).HasDefaultValueSql("((0))");

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sources)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourcesDate).HasColumnType("datetime");

                entity.Property(e => e.SourcesUser)
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.SwitchIdtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SwitchIDTransaction");

                entity.Property(e => e.TransIdOs)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TransIdOS");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.TxType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo")
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Units).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<TupdateCif>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TUpdateCIF");

                entity.Property(e => e.Cifnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CIFNumber");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<TuploadFile>(entity =>
            {
                entity.HasKey(e => e.FileId);

                entity.ToTable("TUploadFile");

                entity.Property(e => e.FileDate).HasColumnType("datetime");

                entity.Property(e => e.FileExtention)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FileName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FileUsedFor)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.UploadBy)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UploadDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<Tviolation>(entity =>
            {
                entity.HasKey(e => e.ViolationId)
                    .HasName("PK_TViolation_1");

                entity.ToTable("TViolation");

                entity.Property(e => e.ViolationId).HasColumnName("ViolationID");

                entity.Property(e => e.ViolationDescription)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ViolationGroup)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ViolationNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TviolationMapping>(entity =>
            {
                entity.ToTable("TViolationMapping");

                entity.Property(e => e.TviolationMappingId).HasColumnName("TViolationMappingID");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.JobId).HasColumnName("JobID");

                entity.Property(e => e.TviolationId).HasColumnName("TViolationID");

                entity.Property(e => e.TviolationRefId).HasColumnName("TViolationRefID");

                entity.HasOne(d => d.TviolationRef)
                    .WithMany(p => p.TviolationMappings)
                    .HasForeignKey(d => d.TviolationRefId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TViolationMapping_TViolationRef");
            });

            modelBuilder.Entity<TviolationRef>(entity =>
            {
                entity.ToTable("TViolationRef");

                entity.Property(e => e.TviolationRefId).HasColumnName("TViolationRefID");

                entity.Property(e => e.ViolationRefName)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("ViolationRef_Name");
            });

            modelBuilder.Entity<Tyield>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TYield");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2000')");

                entity.Property(e => e.Desc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Value).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<VAmlCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vAML_Customer");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AuthorizedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Authorized_By");

                entity.Property(e => e.AuthorizedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Authorized_Date");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Branch_Code");

                entity.Property(e => e.CifPk)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF_PK");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Created_By");

                entity.Property(e => e.CreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Date");

                entity.Property(e => e.CustTypeCode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("Cust_Type_Code");

                entity.Property(e => e.Dcif)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DCIF");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("First_Name");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false)
                    .HasColumnName("Full_Name");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_Name");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Middle_Name");

                entity.Property(e => e.PrimaryOfficer)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Primary_Officer");

                entity.Property(e => e.Remarks).IsUnicode(false);

                entity.Property(e => e.RiskProfileExpiredDate)
                    .HasColumnType("date")
                    .HasColumnName("RiskProfileExpired_date");

                entity.Property(e => e.SaluationCode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Saluation_Code");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Updated_By");

                entity.Property(e => e.UpdatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Date");
            });

            modelBuilder.Entity<VBancassRiderPayment>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBancassRiderPayment");

                entity.Property(e => e.IdbancAssuranceRider).HasColumnName("IDBancAssuranceRider");

                entity.Property(e => e.IdbancAssuranceRiderPremi).HasColumnName("IDBancAssuranceRiderPremi");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.RiderPremi).HasColumnName("Rider_Premi");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.UangPertanggungan).HasColumnName("Uang_Pertanggungan");
            });

            modelBuilder.Entity<VBancassTransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBancassTransaction");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("Account_No");

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("Currency_Code");

                entity.Property(e => e.IdbancAssuranceTransaction).HasColumnName("IDBancAssuranceTransaction");

                entity.Property(e => e.PaymentNo).HasColumnName("Payment_No");

                entity.Property(e => e.PolisNo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Polis_No");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("Reference_No");

                entity.Property(e => e.SettlementDate)
                    .HasColumnType("date")
                    .HasColumnName("Settlement_Date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");
            });

            modelBuilder.Entity<VBancassuranceProductPremiumFrequency>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vBancassurance_Product_Premium_Frequency");

                entity.Property(e => e.Label)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("label");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_code");

                entity.Property(e => e.Value).HasColumnName("value");
            });

            modelBuilder.Entity<VCustomerArium>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCustomerAria");

                entity.Property(e => e.ApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssociationArticle)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Beneficiaries)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.BirthPlace)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BusinessRegCerticate)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.CharacteristicOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ClientGroup)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CloseDate).HasColumnType("datetime");

                entity.Property(e => e.CloseUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodeDrawer)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyCharacteristic)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablished)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyEstablishedDate).HasColumnType("datetime");

                entity.Property(e => e.CompanyType)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerNameTrim)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTypeCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DeedofEstablishmentDate).HasColumnType("date");

                entity.Property(e => e.Division)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocId).HasColumnName("DocID");

                entity.Property(e => e.DocNpwp).HasColumnName("DocNPWP");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstablishDate).HasColumnType("datetime");

                entity.Property(e => e.EstablishmentDate).HasColumnType("date");

                entity.Property(e => e.ExperienceInvestmentOthersText)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode01)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode02)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode03)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode04)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode05)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode06)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode07)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode08)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode09)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode10)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FatherName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.Heir)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.HeirRelation)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Hobby)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.HobbyOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idcharacteristic)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCharacteristic");

                entity.Property(e => e.IdcharacteristicGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCharacteristicGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idcity1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity1");

                entity.Property(e => e.Idcity2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("IDCity2");

                entity.Property(e => e.IdcompanyType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCompanyType");

                entity.Property(e => e.IdcompanyTypeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDCompanyTypeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdcorporateOperatingIncome1).HasColumnName("IDCorporateOperatingIncome1");

                entity.Property(e => e.IdcorporateOperatingIncome2).HasColumnName("IDCorporateOperatingIncome2");

                entity.Property(e => e.IdcorporateOperatingIncome3).HasColumnName("IDCorporateOperatingIncome3");

                entity.Property(e => e.IdcorporateTotalAsset1).HasColumnName("IDCorporateTotalAsset1");

                entity.Property(e => e.IdcorporateTotalAsset2).HasColumnName("IDCorporateTotalAsset2");

                entity.Property(e => e.IdcorporateTotalAsset3).HasColumnName("IDCorporateTotalAsset3");

                entity.Property(e => e.IdcorporateTotalLiabilities1).HasColumnName("IDCorporateTotalLiabilities1");

                entity.Property(e => e.IdcorporateTotalLiabilities2).HasColumnName("IDCorporateTotalLiabilities2");

                entity.Property(e => e.IdcorporateTotalLiabilities3).HasColumnName("IDCorporateTotalLiabilities3");

                entity.Property(e => e.IdcorporateTotalNetProfit1).HasColumnName("IDCorporateTotalNetProfit1");

                entity.Property(e => e.IdcorporateTotalNetProfit2).HasColumnName("IDCorporateTotalNetProfit2");

                entity.Property(e => e.IdcorporateTotalNetProfit3).HasColumnName("IDCorporateTotalNetProfit3");

                entity.Property(e => e.Idcustomer)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendInvest)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDDividendInvest");

                entity.Property(e => e.Iddomisili)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDDomisili");

                entity.Property(e => e.IddomisiliGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDDomisiliGroup")
                    .IsFixedLength();

                entity.Property(e => e.Ideducation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducation");

                entity.Property(e => e.IdeducationGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationGroup");

                entity.Property(e => e.IdeducationOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDEducationOtherText");

                entity.Property(e => e.IdeductionGroup)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDEductionGroup");

                entity.Property(e => e.IdexpensePerMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDExpensePerMonth");

                entity.Property(e => e.Idexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("IDExpired");

                entity.Property(e => e.Idincome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncome");

                entity.Property(e => e.IdincomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDIncomeAdditional");

                entity.Property(e => e.IdincomeGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDIncomeGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdinvestmentHorizon).HasColumnName("IDInvestmentHorizon");

                entity.Property(e => e.IdinvestmentPurposes).HasColumnName("IDInvestmentPurposes");

                entity.Property(e => e.Idissue)
                    .HasColumnType("datetime")
                    .HasColumnName("IDIssue");

                entity.Property(e => e.IdmaritalStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDMaritalStatus");

                entity.Property(e => e.IdmaritalStatusGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDMaritalStatusGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnationality)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDNationality");

                entity.Property(e => e.IdnationalityAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDNationalityAria");

                entity.Property(e => e.IdnationalityAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDNationalityAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.Idnumber)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDNumber");

                entity.Property(e => e.Idobjectives)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectives");

                entity.Property(e => e.IdobjectivesGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesGroup");

                entity.Property(e => e.IdobjectivesOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDObjectivesOther");

                entity.Property(e => e.Idoccupation)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupation");

                entity.Property(e => e.IdoccupationAria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationAria");

                entity.Property(e => e.IdoccupationAriaGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDOccupationAriaGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdoccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDOccupationOther");

                entity.Property(e => e.IdpenghasilanTambahan)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanTambahan");

                entity.Property(e => e.IdpenghasilanUtama)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPenghasilanUtama");

                entity.Property(e => e.IdpengirimanKonfirmasi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDPengirimanKonfirmasi");

                entity.Property(e => e.Idreligi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDReligi");

                entity.Property(e => e.IdreligiGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDReligiGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdreligiOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDReligiOtherText");

                entity.Property(e => e.Idrevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenue");

                entity.Property(e => e.IdrevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDRevenueOther");

                entity.Property(e => e.Idsex)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSex");

                entity.Property(e => e.IdsexGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDSexGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdsourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncome");

                entity.Property(e => e.IdsourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceAdditionalIncomeOther");

                entity.Property(e => e.IdsourceOfFunds)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFunds");

                entity.Property(e => e.IdsourceOfFundsGroup)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsGroup");

                entity.Property(e => e.IdsourceOfFundsOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfFundsOther");

                entity.Property(e => e.IdsourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncome");

                entity.Property(e => e.IdsourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSourceOfMainIncomeOther");

                entity.Property(e => e.Idsponsorship)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSponsorship");

                entity.Property(e => e.IdspouseExpenseMonth)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseExpenseMonth");

                entity.Property(e => e.IdspouseIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncome");

                entity.Property(e => e.IdspouseIncomeAdditional)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseIncomeAdditional");

                entity.Property(e => e.IdspouseOccupation)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupation");

                entity.Property(e => e.IdspouseOccupationLineOfBusiness)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationLineOfBusiness");

                entity.Property(e => e.IdspouseOccupationOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseOccupationOther");

                entity.Property(e => e.IdspouseRevenue)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenue");

                entity.Property(e => e.IdspouseRevenueOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseRevenueOther");

                entity.Property(e => e.IdspouseSourceAdditionalIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncome");

                entity.Property(e => e.IdspouseSourceAdditionalIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceAdditionalIncomeOther");

                entity.Property(e => e.IdspouseSourceOfMainIncome)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncome");

                entity.Property(e => e.IdspouseSourceOfMainIncomeOther)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDSpouseSourceOfMainIncomeOther");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtambahanLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDTambahanLainnya");

                entity.Property(e => e.IdtitleAfterName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterName");

                entity.Property(e => e.IdtitleAfterNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleAfterNameOtherText");

                entity.Property(e => e.IdtitleBeforeName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeName");

                entity.Property(e => e.IdtitleBeforeNameOtherText)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("IDTitleBeforeNameOtherText");

                entity.Property(e => e.Idtype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IDType");

                entity.Property(e => e.IdtypeIdentity)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTypeIdentity");

                entity.Property(e => e.IdtypeIdentityGroup)
                    .HasMaxLength(10)
                    .HasColumnName("IDTypeIdentityGroup")
                    .IsFixedLength();

                entity.Property(e => e.IdutamaLainnya)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("IDUtamaLainnya");

                entity.Property(e => e.IncomeCi)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CI");

                entity.Property(e => e.IncomeCp)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("Income_CP");

                entity.Property(e => e.InvestorCategory)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.IsBlocked).HasColumnName("Is_Blocked");

                entity.Property(e => e.IsEmitenOrPublic).HasColumnName("isEmitenOrPublic");

                entity.Property(e => e.IsFatca).HasColumnName("isFATCA");

                entity.Property(e => e.KimsorKitas)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KIMSorKITAS");

                entity.Property(e => e.KimsorKitasexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASExpiryDate");

                entity.Property(e => e.KimsorKitasregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KIMSorKITASRegistrationDate");

                entity.Property(e => e.Kitap)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("KITAP");

                entity.Property(e => e.KitapexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPExpiryDate");

                entity.Property(e => e.KitapregistrationDate)
                    .HasColumnType("date")
                    .HasColumnName("KITAPRegistrationDate");

                entity.Property(e => e.LastAmendementofArticleofAssociationDate).HasColumnType("date");

                entity.Property(e => e.LastAmendementofArticleofAssociationNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LatestYearoOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LegalDomicile)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.LineofBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Micode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MICode");

                entity.Property(e => e.MiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobilePhone)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName)
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.MotherName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NatureOfBusiness)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.NewCustomerCode)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NickName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nik)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("NIK");

                entity.Property(e => e.NoIjinPma)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMA");

                entity.Property(e => e.NoIjinPmaexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("NoIjinPMAExpiryDate");

                entity.Property(e => e.NoIjinPmaissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoIjinPMAIssuedAt");

                entity.Property(e => e.NoIjinUsahaLain)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoIjinUsahaLainDate).HasColumnType("date");

                entity.Property(e => e.NoTdp)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NoTDP");

                entity.Property(e => e.NotaryAt)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryAt2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NotaryName2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.NpwpissuedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("NPWPIssuedDate");

                entity.Property(e => e.OccupationLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficeName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OfficePhone)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpDate).HasColumnType("datetime");

                entity.Property(e => e.OtherInfo101)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_1");

                entity.Property(e => e.OtherInfo102)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_2");

                entity.Property(e => e.OtherInfo103)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo10_3");

                entity.Property(e => e.OtherInfo11)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_1");

                entity.Property(e => e.OtherInfo111)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_1");

                entity.Property(e => e.OtherInfo112)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_2");

                entity.Property(e => e.OtherInfo113)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo11_3");

                entity.Property(e => e.OtherInfo12)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo1_2");

                entity.Property(e => e.OtherInfo121)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_1");

                entity.Property(e => e.OtherInfo122)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_2");

                entity.Property(e => e.OtherInfo123)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo12_3");

                entity.Property(e => e.OtherInfo21)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_1");

                entity.Property(e => e.OtherInfo22)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo2_2");

                entity.Property(e => e.OtherInfo31)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_1");

                entity.Property(e => e.OtherInfo32)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_2");

                entity.Property(e => e.OtherInfo33)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo3_3");

                entity.Property(e => e.OtherInfo41)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_1");

                entity.Property(e => e.OtherInfo42)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_2");

                entity.Property(e => e.OtherInfo43)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo4_3");

                entity.Property(e => e.OtherInfo51)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_1");

                entity.Property(e => e.OtherInfo52)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_2");

                entity.Property(e => e.OtherInfo53)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo5_3");

                entity.Property(e => e.OtherInfo61)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_1");

                entity.Property(e => e.OtherInfo62)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_2");

                entity.Property(e => e.OtherInfo63)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo6_3");

                entity.Property(e => e.OtherInfo71)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_1");

                entity.Property(e => e.OtherInfo72)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_2");

                entity.Property(e => e.OtherInfo73)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo7_3");

                entity.Property(e => e.OtherInfo81)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_1");

                entity.Property(e => e.OtherInfo82)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_2");

                entity.Property(e => e.OtherInfo83)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_3");

                entity.Property(e => e.OtherInfo84)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo8_4");

                entity.Property(e => e.OtherInfo91)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_1");

                entity.Property(e => e.OtherInfo92)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_2");

                entity.Property(e => e.OtherInfo93)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OtherInfo9_3");

                entity.Property(e => e.ParentIdcustomer).HasColumnName("ParentIDCustomer");

                entity.Property(e => e.Passport)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PassportExpiryDate).HasColumnType("date");

                entity.Property(e => e.PassportRegistrationDate).HasColumnType("date");

                entity.Property(e => e.Pisiup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PISIUP");

                entity.Property(e => e.PlaceofEstablishment)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Position)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remark).HasColumnType("text");

                entity.Property(e => e.SecondLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecondLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SecurityAccount)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Siup)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUP");

                entity.Property(e => e.SiupexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("SIUPExpiryDate");

                entity.Property(e => e.SiupissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SIUPIssuedAt");

                entity.Property(e => e.Skd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SKD");

                entity.Property(e => e.Skdexpired)
                    .HasColumnType("datetime")
                    .HasColumnName("SKDExpired");

                entity.Property(e => e.SkdissuedAt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("SKDIssuedAt");

                entity.Property(e => e.Source)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceBank)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SourceDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthDate).HasColumnType("datetime");

                entity.Property(e => e.SpouseBirthPlace)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseDivisi)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseLineOfBusiness)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseMiddleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SpouseName)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SpousePosition)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Surname)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TdpexpiryDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPExpiryDate");

                entity.Property(e => e.TdpissuedAt)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("TDPIssuedAt");

                entity.Property(e => e.TdpregDate)
                    .HasColumnType("date")
                    .HasColumnName("TDPRegDate");

                entity.Property(e => e.ThirdLatestYearAsset)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ThirdLatestYearOperatingProfit)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Title)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TypeofBusinessOthers)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.WebSite)
                    .HasMaxLength(120)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VCustomerInquiry>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCustomerInquiry");

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BalanceStatus)
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalUnitHolder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NoKtp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NoKTP");

                entity.Property(e => e.Npwp)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("NPWP");

                entity.Property(e => e.OpenigDate).HasColumnType("datetime");

                entity.Property(e => e.ParentSellerCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParentSellerName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SellerCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SellerName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.Status)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VCustomerRiskProfile>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vCustomerRiskProfile");

                entity.Property(e => e.CustomerId).HasColumnName("CustomerID");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.DisplayEffectiveDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DisplayExpiredDate)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpiredDate).HasColumnType("date");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VFtUiTemplateColumn>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vFT_UI_TemplateColumn");

                entity.Property(e => e.ColumnName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TfileTemplateId).HasColumnName("TFileTemplateID");
            });

            modelBuilder.Entity<VGetListSalesBranchForrb>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetListSalesBranch_FORRBS");

                entity.Property(e => e.BranchCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RegionId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("RegionID");

                entity.Property(e => e.RegionName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SalesName)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VGetProfileByTcustomerRiskProfileId>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetProfileByTCustomerRiskProfileID");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<VGetProfileByTcustomerRiskProfileIdCorp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetProfileByTCustomerRiskProfileID_Corp");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId).HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<VHolidayGeneralLookup>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vHolidayGeneralLookup");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Name).HasMaxLength(30);
            });

            modelBuilder.Entity<VLookupAgent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_LookupAgent");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentLevelName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentTree).HasColumnName("IDAgentTree");

                entity.Property(e => e.IdagentTreeParent).HasColumnName("IDAgentTreeParent");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VPfolioCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vPFolioCustomer");

                entity.Property(e => e.AmountMf).HasColumnName("AmountMF");

                entity.Property(e => e.Cif)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CIF");

                entity.Property(e => e.Dob)
                    .HasColumnType("datetime")
                    .HasColumnName("DOB");

                entity.Property(e => e.Name)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.RiskClass)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SalesBranch)
                    .HasMaxLength(21)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VProductBondMutualFund>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_ProductBondMutualFund");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FhId).HasColumnName("FH_ID");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode");

                entity.Property(e => e.ProdCategory)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TproductId).HasColumnName("TProductID");

                entity.Property(e => e.ViewId).HasColumnName("ViewID");
            });

            modelBuilder.Entity<VRbsTgenuihistTmarketPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_RBS_TGENUIHIST_TMarketPrice");

                entity.Property(e => e.PriceDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysIsAfter).HasColumnName("sysIsAfter");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TgenuihistTableId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TGENUIHIST_TABLE_ID");

                entity.Property(e => e.TgenuijourTableId).HasColumnName("TGENUIJOUR_TABLE_ID");

                entity.Property(e => e.TmarketPriceId).HasColumnName("TMarketPriceID");

                entity.Property(e => e.TproductId).HasColumnName("TProductID");
            });

            modelBuilder.Entity<VRbsTholdUnit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_RBS_THoldUnit");

                entity.Property(e => e.BuyTtransactionId).HasColumnName("BuyTTransactionID");

                entity.Property(e => e.CollateralId).HasColumnName("CollateralID");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.OldTholdUnitId).HasColumnName("OldTHoldUnitID");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TholdUnitId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("THoldUnitID");

                entity.Property(e => e.Units).HasColumnType("decimal(38, 18)");
            });

            modelBuilder.Entity<VRbsTmarketPrice>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_RBS_TMarketPrice");

                entity.Property(e => e.PriceDate).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TmarketPriceId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TMarketPriceID");

                entity.Property(e => e.TproductId).HasColumnName("TProductID");
            });

            modelBuilder.Entity<VRbsTproduct>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_RBS_TProduct");

                entity.Property(e => e.AccStatementName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AllotmentDate).HasColumnType("date");

                entity.Property(e => e.AumdateAdd).HasColumnName("AUMDateAdd");

                entity.Property(e => e.BatchOrderCutOffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("batch_order_cut_off_time");

                entity.Property(e => e.CouponType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustFeeCalcMethod)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CutOffTime)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("Cut_Off_Time");

                entity.Property(e => e.CutOffTimeRedByAmount)
                    .HasColumnType("datetime")
                    .HasColumnName("cut_off_time_red_by_amount");

                entity.Property(e => e.DistributionMethodId).HasColumnName("DistributionMethodID");

                entity.Property(e => e.DividendType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EndOfHoldingPeriod).HasColumnType("date");

                entity.Property(e => e.EndPeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("End_Period");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode3)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode4)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExternalCode5)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FeeCalculation)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fee_Calculation");

                entity.Property(e => e.FeeCostCenter)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Fee_Cost_Center");

                entity.Property(e => e.FirstAccrue).HasColumnType("date");

                entity.Property(e => e.FundMgrCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FUND_MGR_CODE");

                entity.Property(e => e.Glcode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("GLCode");

                entity.Property(e => e.IdbankCustody).HasColumnName("IDBankCustody");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcurrency)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCurrency");

                entity.Property(e => e.IdfundHouse).HasColumnName("IDFundHouse");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.InitAgentCd)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("INIT_AGENT_CD");

                entity.Property(e => e.InitialNav).HasColumnName("Initial_NAV");

                entity.Property(e => e.IpoCutOffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("ipo_cut_off_time");

                entity.Property(e => e.Isincode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ISINCode");

                entity.Property(e => e.MaxTotDailyOf)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.MaxUnits).HasColumnName("Max_Units");

                entity.Property(e => e.MfCodePk)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MF_Code_PK");

                entity.Property(e => e.MgtFeeCalcMethod)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MinBalanceAfterRedemption).HasColumnName("Min_Balance_After_Redemption");

                entity.Property(e => e.MinBalanceAfterSwitching).HasColumnName("Min_Balance_After_Switching");

                entity.Property(e => e.MinSwitching).HasColumnName("Min_Switching");

                entity.Property(e => e.NavredMethod)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("NAVRedMethod");

                entity.Property(e => e.OfferingBeginDate).HasColumnType("date");

                entity.Property(e => e.OfferingEndDate).HasColumnType("date");

                entity.Property(e => e.Penerbit)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.PercentMax).HasColumnName("Percent_Max");

                entity.Property(e => e.Pph23).HasColumnName("PPh23");

                entity.Property(e => e.ProdBankAccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ProdBank_AccountName");

                entity.Property(e => e.ProdBankAccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ProdBank_AccountNo");

                entity.Property(e => e.ProdBankIdaccountBankType)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ProdBank_IDAccountBankType");

                entity.Property(e => e.ProdBankIdbank)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ProdBank_IDBank");

                entity.Property(e => e.ProdBankIdbankBranch).HasColumnName("ProdBank_IDBankBranch");

                entity.Property(e => e.ProdCategory)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ProductAlias)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Alias");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RedFeeCalcMethod)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RedemptionCutOffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("redemption_cut_off_time");

                entity.Property(e => e.RedemptionDay).HasColumnName("redemption_day");

                entity.Property(e => e.RedemptionFlag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Redemption_Flag");

                entity.Property(e => e.RefundDate).HasColumnType("date");

                entity.Property(e => e.ReinvestedFlag).HasColumnName("Reinvested_Flag");

                entity.Property(e => e.RoundMethodAmount)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RoundMethodUnit)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SellFeeCalcMethod)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.StartPeriod)
                    .HasColumnType("datetime")
                    .HasColumnName("Start_Period");

                entity.Property(e => e.SubFeeCalcMethod)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SubscriptionCutOffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("subscription_cut_off_time");

                entity.Property(e => e.SubscriptionQuota).HasColumnName("Subscription_Quota");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcouponFreqId).HasColumnName("TCouponFreqID");

                entity.Property(e => e.TcreditRatingId).HasColumnName("TCreditRatingID");

                entity.Property(e => e.TintDaysId).HasColumnName("TIntDaysID");

                entity.Property(e => e.TissuerId).HasColumnName("TIssuerID");

                entity.Property(e => e.TproductId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TProductID");
            });

            modelBuilder.Entity<VRbsTtransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_RBS_TTransaction");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNoProduct)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookedDate).HasColumnType("datetime");

                entity.Property(e => e.Charges).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodeBroker)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Ctpnumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CTPNumber");

                entity.Property(e => e.Fee).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.FeeAmount).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.FundManagerCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FwPrefix)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("fw_Prefix");

                entity.Property(e => e.FwTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("fw_TimeStamp");

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.HoldSeqId).HasColumnName("HoldSeqID");

                entity.Property(e => e.IdagentQuota).HasColumnName("IDAgentQuota");

                entity.Property(e => e.IdbankCustomer)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("IDBankCustomer");

                entity.Property(e => e.IdbankProduct)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("IDBankProduct");

                entity.Property(e => e.Idbooking).HasColumnName("IDBooking");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdteamLeader).HasColumnName("IDTeamLeader");

                entity.Property(e => e.Idtransaction)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IDTransaction");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.MurexDealNo)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.MurexId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MurexID");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.NettTax).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.OldUnits).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.OpicsGenBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OpicsGenHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.OpicsGenStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OpicsGenTime).HasColumnType("datetime");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Reject1Reason)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Reject2Reason)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Reject3Reason)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.Remark2)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.Remark3)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SendMurexBy)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SendMurexDate).HasColumnType("datetime");

                entity.Property(e => e.SendMurexHost)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SendMurexStatus)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SettleAmount).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubRegistry)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysRejectedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysRejectedBy");

                entity.Property(e => e.SysRejectedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysRejectedHost");

                entity.Property(e => e.SysRejectedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysRejectedTime");

                entity.Property(e => e.SysSettledBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysSettledBy");

                entity.Property(e => e.SysSettledHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysSettledHost");

                entity.Property(e => e.SysSettledTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysSettledTime");

                entity.Property(e => e.SysUnApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysUnApprovedBy");

                entity.Property(e => e.SysUnApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysUnApprovedHost");

                entity.Property(e => e.SysUnApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysUnApprovedTime");

                entity.Property(e => e.SysVerifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysVerifiedBy");

                entity.Property(e => e.SysVerifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysVerifiedHost");

                entity.Property(e => e.SysVerifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysVerifiedTime");

                entity.Property(e => e.TassetTransferId).HasColumnName("TAssetTransferID");

                entity.Property(e => e.TproductId).HasColumnName("TProductID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TrefCategoryId).HasColumnName("TRefCategoryID");

                entity.Property(e => e.TrefSellMethodId).HasColumnName("TRefSellMethodID");

                entity.Property(e => e.TtransactionId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TTransactionID");

                entity.Property(e => e.UnitPrice).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.Units).HasColumnType("decimal(38, 18)");

                entity.Property(e => e.Ytm).HasColumnName("YTM");
            });

            modelBuilder.Entity<VSaldoCalc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vSaldoCalc");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Divamounts).HasColumnName("DIVAmounts");

                entity.Property(e => e.Divunits).HasColumnName("DIVUNITS");

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Redamount).HasColumnName("REDAmount");

                entity.Property(e => e.Redunits).HasColumnName("REDUNITS");

                entity.Property(e => e.Subamount).HasColumnName("SUBAmount");

                entity.Property(e => e.Subunits).HasColumnName("SUBUNITS");

                entity.Property(e => e.Swtinamount).HasColumnName("SWTINAmount");

                entity.Property(e => e.Swtinunits).HasColumnName("SWTINUNITS");

                entity.Property(e => e.Swtotamount).HasColumnName("SWTOTAmount");

                entity.Property(e => e.Swtotunits).HasColumnName("SWTOTUNITS");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VSsoRole>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_SSO_Role");

                entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");

                entity.Property(e => e.RoleDescription)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.RoleId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("RoleID");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<VSsoUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_SSO_User");

                entity.Property(e => e.ApplicationId).HasColumnName("ApplicationID");

                entity.Property(e => e.Comment)
                    .HasMaxLength(2048)
                    .IsUnicode(false);

                entity.Property(e => e.EmailAddress)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.InactivePeriodBegin).HasColumnType("date");

                entity.Property(e => e.InactivePeriodEnd).HasColumnType("date");

                entity.Property(e => e.LastPasswordChangeTime).HasColumnType("datetime");

                entity.Property(e => e.Password)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UserId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("UserID");

                entity.Property(e => e.UserName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VTagentCustomer>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTAgentCustomer");

                entity.Property(e => e.AgentStructureId).HasColumnName("AgentStructureID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerEmail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerStructureId).HasColumnName("CustomerStructureID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VTagentCustomerMovement>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTAgentCustomerMovement");

                entity.Property(e => e.AgentStructureId).HasColumnName("AgentStructureID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerEmail)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerStructureId).HasColumnName("CustomerStructureID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.IdagentCustomer).HasColumnName("IDAgentCustomer");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdvTagentCustomerMovement).HasColumnName("IDvTAgentCustomerMovement");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VTcustBankAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTCustBankAccount");

                entity.Property(e => e.AccountBankType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");
            });

            modelBuilder.Entity<VTcustomerPending>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTCustomerPending");

                entity.Property(e => e.FundUnitAccount)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Rowid).HasColumnName("ROWID");

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VToutstandingHistoryFifoUnit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTOutstandingHistoryFIFO_Units");

                entity.Property(e => e.NavDate).HasColumnType("datetime");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VTproductBankAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTProductBankAccount");

                entity.Property(e => e.AccountBankType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AccountName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BankName)
                    .HasMaxLength(128)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CurrencyCode)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdproductBankAccount).HasColumnName("IDproductBankAccount");
            });

            modelBuilder.Entity<VTproductBundlingRegistration>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTProductBundlingRegistration");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BeginDate).HasColumnType("datetime");

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedDate");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedDate");

                entity.Property(e => e.TproductBundlingId).HasColumnName("TProductBundlingID");

                entity.Property(e => e.TproductBundlingRegistrationId).HasColumnName("TProductBundlingRegistrationID");
            });

            modelBuilder.Entity<VTransactionList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTransactionList");

                entity.Property(e => e.Column1)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column10)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column3)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column4)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column5)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column6)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column7)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column8)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Column9)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Nav).HasColumnName("NAV");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PercentNav).HasColumnName("PercentNAV");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalesCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalesName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SettleDate).HasColumnType("datetime");

                entity.Property(e => e.Sid)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("SID");

                entity.Property(e => e.SourceTransaction)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VTransactionSiarCabangAum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTransactionSIAR_CabangAum");

                entity.Property(e => e.Cifno)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cifno");

                entity.Property(e => e.Currentnav).HasColumnName("currentnav");

                entity.Property(e => e.Customername)
                    .HasMaxLength(357)
                    .IsUnicode(false)
                    .HasColumnName("customername");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.KodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeBroker)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeCabang)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeHead)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.KodeLeader)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NamaAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NamaBroker)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NamaCabang)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NamaHead)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("namaHead");

                entity.Property(e => e.NameLeader)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nameLeader");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VTrefKotaNew>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTRefKotaNew");

                entity.Property(e => e.Kabupaten)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Kecamatan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Kelurahan)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Kode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.KodePos)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Propinsi)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VTrefKotaNewProvince>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTRefKotaNew_Province");

                entity.Property(e => e.Ibukota)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KodeKota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.No)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ParentCode)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PostalCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Prop)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VTreferenceDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vTReferenceDetail");

                entity.Property(e => e.AltValue1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue5)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AltValue6)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Display).HasMaxLength(256);

                entity.Property(e => e.DisplayEn)
                    .HasMaxLength(256)
                    .HasColumnName("Display_EN");

                entity.Property(e => e.DisplayId)
                    .HasMaxLength(256)
                    .HasColumnName("Display_ID");

                entity.Property(e => e.DisplayOrderEn).HasColumnName("DisplayOrder_EN");

                entity.Property(e => e.DisplayOrderId).HasColumnName("DisplayOrder_ID");

                entity.Property(e => e.GroupName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MainValue)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreferenceDetailId).HasColumnName("TReferenceDetailID");

                entity.Property(e => e.TreferenceGroupId).HasColumnName("TReferenceGroupID");
            });

            modelBuilder.Entity<VUiRiskProfileList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUI_RiskProfileList");

                entity.Property(e => e.EffectiveDate).HasColumnType("date");

                entity.Property(e => e.ExpireDate).HasColumnType("date");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.InvestorType)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ProfileId).HasColumnName("ProfileID");

                entity.Property(e => e.ProfileShortName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VUiTincome>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUI_TIncome");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VUigenCustomerGoal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_Customer_Goal");

                entity.Property(e => e.Current)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.Target)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TgoalId).HasColumnName("TGoalID");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.Value)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUigenFixedTagentStructure>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_Fixed_TAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerTreeCode)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IsIncludeAum).HasColumnName("IsIncludeAUM");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.SysmodifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysmodifiedBy");
            });

            modelBuilder.Entity<VUigenPmsInsuranceCoverList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_InsuranceCover_List");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.MonthlyExpenseDate).HasColumnType("datetime");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TinsuranceCoverId).HasColumnName("TInsuranceCoverID");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");

                entity.Property(e => e.Vchar1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Vchar2)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUigenPmsRetirementList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_Retirement_List");

                entity.Property(e => e.CurrentYear)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TretirementId).HasColumnName("TRetirementID");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VUigenPmsTassetClassList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_TAssetClass_List");

                entity.Property(e => e.AssetClass)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ExpectedReturn)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.Gdpperf)
                    .HasMaxLength(256)
                    .HasColumnName("GDPPerf");

                entity.Property(e => e.InflationPerf).HasMaxLength(256);

                entity.Property(e => e.RiskRate)
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.RupiahPerf).HasMaxLength(256);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TassetClassId).HasColumnName("TAssetClassID");
            });

            modelBuilder.Entity<VUigenPmsTassetList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_TAsset_List");

                entity.Property(e => e.Dob)
                    .HasColumnType("date")
                    .HasColumnName("DOB");

                entity.Property(e => e.Dplk1).HasColumnName("DPLK1");

                entity.Property(e => e.Dplk2).HasColumnName("DPLK2");

                entity.Property(e => e.Dplk3).HasColumnName("DPLK3");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idasset).HasColumnName("IDAsset");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Jht1).HasColumnName("JHT1");

                entity.Property(e => e.Jht2).HasColumnName("JHT2");

                entity.Property(e => e.Jht3).HasColumnName("JHT3");

                entity.Property(e => e.PinjamanKta1).HasColumnName("PinjamanKTA1");

                entity.Property(e => e.PinjamanKta2).HasColumnName("PinjamanKTA2");

                entity.Property(e => e.PinjamanKta3).HasColumnName("PinjamanKTA3");

                entity.Property(e => e.Rdc1).HasColumnName("RDC1");

                entity.Property(e => e.Rdc2).HasColumnName("RDC2");

                entity.Property(e => e.Rdc3).HasColumnName("RDC3");

                entity.Property(e => e.Rdpt1).HasColumnName("RDPT1");

                entity.Property(e => e.Rdpt2).HasColumnName("RDPT2");

                entity.Property(e => e.Rdpt3).HasColumnName("RDPT3");

                entity.Property(e => e.Rdpu1).HasColumnName("RDPU1");

                entity.Property(e => e.Rdpu2).HasColumnName("RDPU2");

                entity.Property(e => e.Rdpu3).HasColumnName("RDPU3");

                entity.Property(e => e.Rds1).HasColumnName("RDS1");

                entity.Property(e => e.Rds2).HasColumnName("RDS2");

                entity.Property(e => e.Rds3).HasColumnName("RDS3");

                entity.Property(e => e.Riskprof)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("riskprof");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VUigenPmsTincomeList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_TIncome_List");

                entity.Property(e => e.BirthDate).HasColumnType("datetime");

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idincome).HasColumnName("IDIncome");

                entity.Property(e => e.ProfileName)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VUigenPmsTmacroEconomicScenarioList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_PMS_TMacroEconomicScenario_List");

                entity.Property(e => e.Gdpperf)
                    .HasMaxLength(256)
                    .HasColumnName("GDPPerf");

                entity.Property(e => e.InflationPerf).HasMaxLength(256);

                entity.Property(e => e.ProductCategoryName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RupiahPerf).HasMaxLength(256);

                entity.Property(e => e.Scenario1)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Scenario2)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Scenario3)
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TmacroEconomicScenarioId).HasColumnName("TMacroEconomicScenarioID");
            });

            modelBuilder.Entity<VUigenTagentStructure>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<VUigenTcpfquotaAgent>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TCPFQuota_Agent");

                entity.Property(e => e.AgentId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("AgentID");

                entity.Property(e => e.Display)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUigenTcpfquotaList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TCPFQuota_List");

                entity.Property(e => e.AgentFrom)
                    .HasMaxLength(253)
                    .IsUnicode(false);

                entity.Property(e => e.AgentIdfrom).HasColumnName("AgentIDFrom");

                entity.Property(e => e.AgentIdto).HasColumnName("AgentIDTo");

                entity.Property(e => e.AgentTo)
                    .HasMaxLength(253)
                    .IsUnicode(false);

                entity.Property(e => e.CpfquotaTrxType).HasColumnName("CPFQuotaTrxType");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Product)
                    .HasMaxLength(113)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcpfquotaId).HasColumnName("TCPFQuotaID");
            });

            modelBuilder.Entity<VUigenTcustomerProductRekeningMappingList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TCustomerProductRekeningMapping_List");

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(321)
                    .IsUnicode(false);

                entity.Property(e => e.Customer)
                    .HasMaxLength(382)
                    .IsUnicode(false);

                entity.Property(e => e.IdcustBankAccount).HasColumnName("IDCustBankAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdcustomerProductRekeningMapping).HasColumnName("IDCustomerProductRekeningMapping");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType");

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<VUigenTcustomerRegInvestmentPlanList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TCustomerRegInvestmentPlan_List");

                entity.Property(e => e.AccountNumber)
                    .HasMaxLength(308)
                    .IsUnicode(false);

                entity.Property(e => e.AdjustFeeType)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CustAccountNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Customer)
                    .HasMaxLength(376)
                    .IsUnicode(false);

                entity.Property(e => e.FeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegDate).HasColumnType("date");

                entity.Property(e => e.SalesName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRegInvestmentPlanId).HasColumnName("TCustomerRegInvestmentPlanID");

                entity.Property(e => e.TregularInvestmentPlanId).HasColumnName("TRegularInvestmentPlanID");
            });

            modelBuilder.Entity<VUigenTholdUnitComboOldHoldUnit>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_THoldUnit_Combo_OldHoldUnit");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.OldHoldUnitDisp)
                    .HasMaxLength(272)
                    .IsUnicode(false);

                entity.Property(e => e.TholdUnitId).HasColumnName("THoldUnitID");
            });

            modelBuilder.Entity<VUigenTholdUnitComboSubAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_THoldUnit_Combo_SubAccount");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.SubAccountDisp)
                    .HasMaxLength(230)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VUigenTholdUnitList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_THoldUnit_List");

                entity.Property(e => e.CollateralId).HasColumnName("CollateralID");

                entity.Property(e => e.CustDisp)
                    .HasMaxLength(439)
                    .IsUnicode(false);

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.OldTholdUnitId).HasColumnName("OldTHoldUnitID");

                entity.Property(e => e.ProdDisp)
                    .HasMaxLength(113)
                    .IsUnicode(false);

                entity.Property(e => e.SubAccountDisp)
                    .HasMaxLength(113)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TholdUnitId).HasColumnName("THoldUnitID");
            });

            modelBuilder.Entity<VUigenTtransactionBookingList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIGEN_TTransactionBooking_List");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdtransactionBooking).HasColumnName("IDTransactionBooking");

                entity.Property(e => e.ProductName)
                    .HasMaxLength(113)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SalesName)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");
            });

            modelBuilder.Entity<VUimarketingBranchList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIMarketingBranchList");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentLevelName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.TreeCode2).IsUnicode(false);
            });

            modelBuilder.Entity<VUimarketingList>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vUIMarketingList");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.AgentLevelName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VagentStructure>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.IdagentStructureParent).HasColumnName("IDAgentStructureParent");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.OldIdagentStructure).HasColumnName("OldIDAgentStructure");

                entity.Property(e => e.OtherNameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SaldoDateBegin).HasColumnType("date");

                entity.Property(e => e.SaldoDateEnd).HasColumnType("date");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VhToutStandingHistoryFifo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vh_TOutStandingHistoryFIFO");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.IdoutstandingHistory).HasColumnName("IDOutstandingHistory");

                entity.Property(e => e.IdredTransaction).HasColumnName("IDRedTransaction");

                entity.Property(e => e.IdsubTransaction).HasColumnName("IDSubTransaction");

                entity.Property(e => e.ModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.NoAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OutstandingDate).HasColumnType("datetime");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VhTtransaction>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vh_TTransaction");

                entity.Property(e => e.AccountNoCustomer)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveBookingDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveBookingUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.ApproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.ApproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BatchDate).HasColumnType("datetime");

                entity.Property(e => e.BatchUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustomerProfileId).HasColumnName("CustomerProfileID");

                entity.Property(e => e.DividendMode)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EditDate).HasColumnType("datetime");

                entity.Property(e => e.EditHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EditUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.EntryUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData1)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData2)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorData3)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.GeneratorId).HasColumnName("GeneratorID");

                entity.Property(e => e.GoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.GoodFundHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.GoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idbatch).HasColumnName("IDBatch");

                entity.Property(e => e.Idbranch).HasColumnName("IDBranch");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.IddividendSummary).HasColumnName("IDDividendSummary");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.Idstatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("IDStatus");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.IncInterestAro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("IncInterestARO");

                entity.Property(e => e.MaturityDate).HasColumnType("datetime");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.PaymentMethod)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessDate).HasColumnType("datetime");

                entity.Property(e => e.ProcessUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProductProfileId).HasColumnName("ProductProfileID");

                entity.Property(e => e.RedAdjustFeeType)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Remark)
                    .HasMaxLength(1024)
                    .IsUnicode(false);

                entity.Property(e => e.SettDate).HasColumnType("datetime");

                entity.Property(e => e.SourceIdtransaction).HasColumnName("SourceIDTransaction");

                entity.Property(e => e.SubAcProduct)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SubAc_Product");

                entity.Property(e => e.SubAcUhl)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("SubAc_UHL");

                entity.Property(e => e.SubAccountNo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SubscriptionFeeMethod)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TproductTransactionFeeId).HasColumnName("TProductTransactionFeeID");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TrxFullName)
                    .HasMaxLength(357)
                    .IsUnicode(false)
                    .HasColumnName("TRX_FullName");

                entity.Property(e => e.TrxProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRX_ProductCode");

                entity.Property(e => e.TrxProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TRX_ProductName");

                entity.Property(e => e.TrxUhl)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TRX_UHL");

                entity.Property(e => e.UnGoodFundDate).HasColumnType("datetime");

                entity.Property(e => e.UnGoodFundUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnGoodHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnVerifyTime).HasColumnType("datetime");

                entity.Property(e => e.UnVerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveDate).HasColumnType("datetime");

                entity.Property(e => e.UnapproveHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.UnapproveUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyHost)
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.VerifyTime).HasColumnType("datetime");

                entity.Property(e => e.VerifyUser)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VsubAccount>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VSubAccount");

                entity.Property(e => e.AgentTreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FullName)
                    .HasMaxLength(357)
                    .IsUnicode(false);

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NoAccount)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ProductName)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UnitHolderIdno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("UnitHolderIDNo");
            });

            modelBuilder.Entity<VtagentStructureSale>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VTAgentStructure_Sales");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.CodeAgent)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure).HasColumnName("IDAgentStructure");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.NameAgent)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");
            });

            modelBuilder.Entity<Vtnav>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VTNav");

                entity.Property(e => e.CurrencyNav)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CurrencyNAV");

                entity.Property(e => e.CustodyName)
                    .HasMaxLength(64)
                    .IsUnicode(false);

                entity.Property(e => e.FundHouseName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idnav).HasColumnName("IDNav");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Navdate)
                    .HasColumnType("date")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");
            });

            modelBuilder.Entity<VwAllProductJive>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vw_AllProduct_JIVE");

                entity.Property(e => e.AmountDecimal)
                    .HasMaxLength(20)
                    .HasColumnName("Amount_Decimal");

                entity.Property(e => e.AmountRounding)
                    .HasMaxLength(20)
                    .HasColumnName("Amount_Rounding");

                entity.Property(e => e.AumAcr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Acr");

                entity.Property(e => e.AumBf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_BF");

                entity.Property(e => e.AumDiv)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Div");

                entity.Property(e => e.AumRed)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Red");

                entity.Property(e => e.AumSubs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Subs");

                entity.Property(e => e.AumSwired)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Swired");

                entity.Property(e => e.AumSwisubs)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AUM_Swisubs");

                entity.Property(e => e.BatchFileRedFee)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("Batch_File_Red_Fee");

                entity.Property(e => e.Code1)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code2)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code3)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Code4)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Currency)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CustodyCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Custody_Code");

                entity.Property(e => e.CutOffTime)
                    .HasColumnType("datetime")
                    .HasColumnName("Cut_Off_Time");

                entity.Property(e => e.ExternalCode1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("External_Code1");

                entity.Property(e => e.ExternalCode2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("External_Code2");

                entity.Property(e => e.ExternalCode3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("External_Code3");

                entity.Property(e => e.FmCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FM_Code");

                entity.Property(e => e.FundType)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fund_Type");

                entity.Property(e => e.InitialNav)
                    .HasColumnType("numeric(32, 14)")
                    .HasColumnName("Initial_NAV");

                entity.Property(e => e.InvestmentCategory)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("Investment_Category");

                entity.Property(e => e.LaunchDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Launch_Date");

                entity.Property(e => e.MaxLimitPct)
                    .HasColumnType("numeric(27, 9)")
                    .HasColumnName("Max_Limit_Pct");

                entity.Property(e => e.MaxRedsAyear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Max_Reds_AYear");

                entity.Property(e => e.MaxSubsAyear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Max_Subs_AYear");

                entity.Property(e => e.MaxSwitchAyear)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("Max_Switch_AYear");

                entity.Property(e => e.MaxUnits)
                    .HasColumnType("numeric(30, 4)")
                    .HasColumnName("Max_Units");

                entity.Property(e => e.Name)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.PriceDecimal)
                    .HasMaxLength(20)
                    .HasColumnName("Price_Decimal");

                entity.Property(e => e.PriceRounding)
                    .HasMaxLength(20)
                    .HasColumnName("Price_Rounding");

                entity.Property(e => e.ProcessedDate)
                    .HasColumnType("datetime")
                    .HasColumnName("Processed_Date");

                entity.Property(e => e.ProductCategory)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("Product_Category");

                entity.Property(e => e.ProductCategoryKey)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("Product_Category_Key");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Product_Code");

                entity.Property(e => e.Quota).HasColumnType("numeric(34, 8)");

                entity.Property(e => e.Rating)
                    .HasMaxLength(225)
                    .IsUnicode(false);

                entity.Property(e => e.RedMaxLimitPct)
                    .HasColumnType("numeric(27, 9)")
                    .HasColumnName("Red_Max_Limit_Pct");

                entity.Property(e => e.Remark2)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remark3)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RiskProfile)
                    .HasMaxLength(50)
                    .HasColumnName("Risk_Profile");

                entity.Property(e => e.SettlementFeeAcc)
                    .HasMaxLength(20)
                    .HasColumnName("Settlement_Fee_Acc");

                entity.Property(e => e.SettlementPeriode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("Settlement_Periode");

                entity.Property(e => e.SettlementRedAcc)
                    .HasMaxLength(20)
                    .HasColumnName("Settlement_Red_Acc");

                entity.Property(e => e.SettlementSubsAcc)
                    .HasMaxLength(20)
                    .HasColumnName("Settlement_Subs_Acc");

                entity.Property(e => e.ShortName).HasColumnName("Short_Name");

                entity.Property(e => e.UnitsDecimal)
                    .HasMaxLength(20)
                    .HasColumnName("Units_Decimal");

                entity.Property(e => e.UnitsRounding)
                    .HasMaxLength(20)
                    .HasColumnName("Units_Rounding");
            });

            modelBuilder.Entity<ZzzOtsred>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zzzOTSRed");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.Otsred).HasColumnName("OTSRed");
            });

            modelBuilder.Entity<ZzzOtsub>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zzzOTSub");

                entity.Property(e => e.Idcategory)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("IDCategory");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.Idproduct).HasColumnName("IDProduct");

                entity.Property(e => e.Idsales).HasColumnName("IDSales");

                entity.Property(e => e.IdsubAccount).HasColumnName("IDSubAccount");

                entity.Property(e => e.Idtransaction).HasColumnName("IDTransaction");

                entity.Property(e => e.Navdate)
                    .HasColumnType("datetime")
                    .HasColumnName("NAVDate");

                entity.Property(e => e.Navvalue).HasColumnName("NAVValue");

                entity.Property(e => e.Otssub).HasColumnName("OTSSub");
            });

            modelBuilder.Entity<ZzzTagentStructure>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zzzTAgentStructure");

                entity.Property(e => e.AgentId).HasColumnName("AgentID");

                entity.Property(e => e.AgentLevelId).HasColumnName("AgentLevelID");

                entity.Property(e => e.EffDate).HasColumnType("date");

                entity.Property(e => e.IdagentStructure)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("IDAgentStructure");

                entity.Property(e => e.IdagentStructureJournal).HasColumnName("IDAgentStructureJournal");

                entity.Property(e => e.IdagentStructureParent).HasColumnName("IDAgentStructureParent");

                entity.Property(e => e.OldIdagentStructure).HasColumnName("OldIDAgentStructure");

                entity.Property(e => e.Remarks)
                    .HasMaxLength(512)
                    .IsUnicode(false);

                entity.Property(e => e.SaldoDateBegin).HasColumnType("date");

                entity.Property(e => e.SaldoDateEnd).HasColumnType("date");

                entity.Property(e => e.ShellId).HasColumnName("ShellID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TreeCode)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCode2)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TreeCodeParent)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ZzzTcustBankAccountHistory>(entity =>
            {
                entity.HasKey(e => e.TdataId)
                    .HasName("PK__zzzTCust__5FAD0CA88C1819FA");

                entity.ToTable("zzzTCustBankAccount_History");

                entity.Property(e => e.TdataId).HasColumnName("TDataId");

                entity.Property(e => e.AccountName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AccountNo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdaccountBankType).HasColumnName("IDAccountBankType");

                entity.Property(e => e.IdbankBranch).HasColumnName("IDBankBranch");

                entity.Property(e => e.Idcurrency).HasColumnName("IDCurrency");

                entity.Property(e => e.Idcustomer).HasColumnName("IDCustomer");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ZzzTcustomerRiskProfileAnswer>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("zzzTCustomerRiskProfileAnswer");

                entity.Property(e => e.QuestionId).HasColumnName("QuestionID");

                entity.Property(e => e.QuestionOptionId).HasColumnName("QuestionOptionID");

                entity.Property(e => e.SysActionType)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("sysActionType")
                    .IsFixedLength();

                entity.Property(e => e.SysApprovalNotes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovalNotes");

                entity.Property(e => e.SysApprovalStatus).HasColumnName("sysApprovalStatus");

                entity.Property(e => e.SysApprovedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedBy");

                entity.Property(e => e.SysApprovedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysApprovedHost");

                entity.Property(e => e.SysApprovedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysApprovedTime");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime");

                entity.Property(e => e.SysDeletedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedBy");

                entity.Property(e => e.SysDeletedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysDeletedHost");

                entity.Property(e => e.SysDeletedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysDeletedTime");

                entity.Property(e => e.SysModifiedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedBy");

                entity.Property(e => e.SysModifiedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysModifiedHost");

                entity.Property(e => e.SysModifiedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysModifiedTime");

                entity.Property(e => e.SysPendingBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingBy");

                entity.Property(e => e.SysPendingHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysPendingHost");

                entity.Property(e => e.SysPendingTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysPendingTime");

                entity.Property(e => e.SysRecStatus).HasColumnName("sysRecStatus");

                entity.Property(e => e.TcustomerRiskProfileAnswerId)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("TCustomerRiskProfileAnswerID");

                entity.Property(e => e.TcustomerRiskProfileId).HasColumnName("TCustomerRiskProfileID");
            });

            modelBuilder.Entity<ZzztransactionMig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ZZZTransactionMIG");

                entity.Property(e => e.Channel)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("channel");

                entity.Property(e => e.Cif)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cif");

                entity.Property(e => e.Descrip)
                    .IsUnicode(false)
                    .HasColumnName("descrip");

                entity.Property(e => e.ProductCode)
                    .IsUnicode(false)
                    .HasColumnName("product_code");

                entity.Property(e => e.SysCreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedBy")
                    .HasDefaultValueSql("(suser_sname())");

                entity.Property(e => e.SysCreatedHost)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("sysCreatedHost")
                    .HasDefaultValueSql("(host_name())");

                entity.Property(e => e.SysCreatedTime)
                    .HasColumnType("datetime")
                    .HasColumnName("sysCreatedTime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TrxDate)
                    .HasColumnType("datetime")
                    .HasColumnName("trx_date");

                entity.Property(e => e.TrxIdPk)
                    .IsUnicode(false)
                    .HasColumnName("trx_id_pk");

                entity.Property(e => e.TrxType)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("trx_type");

                entity.Property(e => e.Units).HasColumnName("units");
            });

            modelBuilder.Entity<ProductCatalogViewModel>(x => { x.HasNoKey(); x.Property(v => v.ProductCode).HasColumnName("ProductCode"); });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
